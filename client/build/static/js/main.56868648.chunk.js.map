{"version":3,"sources":["containers/HomeDev/HomeDev.module.css","containers/GLOBAL/GLOBAL.js","components/Layout/Layout.js","components/Spinner/Spinner.js","containers/Home/Home.js","containers/HomeDev/HomeDev.js","containers/PauseScreen/PauseScreen.js","containers/Pine/Pine.js","containers/PineAccountTwo/PineAccountTwo.js","containers/Snapshots/Snapshots.js","components/SingleDomain/SingleDomain.js","containers/NamecheapForward/NamecheapForward.js","containers/BLA/BLA.js","containers/PineAccountThree/PineAccountThree.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Auth/Auth.js","containers/PineappleHome/PineappleHome.js","containers/D7/D7.js","components/LoadingPage/LoadingPage.js","App.js","serviceWorker.js","store/reducers/auth.js","store/createdStore.js","index.js","containers/D7/D7.module.css","containers/Snapshots/Snapshots.module.css","containers/BLA/blacklist.module.css","components/SingleDomain/SingleDomain.module.css","containers/PauseScreen/PauseScreen.module.css","components/Layout/Layout.module.css","containers/PineAccountTwo/PineAccountTwo.module.css","containers/Home/Home.module.css","containers/Auth/Auth.module.css","containers/PineappleHome/PineappleHome.module.css","containers/NamecheapForward/NamecheapForward.module.css","containers/Pine/Pine.module.css","containers/PineAccountThree/PineAccountThree.module.css","components/Layout/color.png","components/Spinner/Spinner.module.css"],"names":["module","exports","GLOBAL","Component","domain","domainMobiniti","domainpine","blacklist","domainNameCheap","domainpineaccountone","domainpineaccountthree","connect","state","isAuthenticated","auth","token","withRouter","children","accountOne","mobiniti","accountTwo","autoRotate","autoRotateClickFunction","goToAccountFunc","goToOtherAccountFunc","accountThree","isAuthPage","history","useState","setFlip","className","classes","Layout","Header","logo","onLoad","onClick","window","location","href","width","style","transition","src","Logo","settings","snap","Fragment","localStorage","removeItem","document","Spinner","Home","fullName","pages","name","link","getItem","config","headers","url","axios","get","then","response","data","email","_id","console","log","setState","catch","error","msg","UserDetails","Pages","this","map","p","key","page","props","push","ani","file","phoneFile","isStarted","speed","endpoint","sentCount","loading","isDoneSending","isPaused","deliveredCount","unDeliveredCount","downloadableCSV","unknownCount","withLeadingOne","onDownloadFile","a","async","blob","Blob","type","URL","createObjectURL","createElement","date","Date","setAttribute","getMilliseconds","body","appendChild","click","removeChild","socketIOClient","emit","numberWithCommas","x","toString","replace","onChangeHandler","event","target","files","FormData","append","post","onChangePhoneFileHandler","submitHandler","preventDefault","socket","filename","resumeSending","pauseHandler","disconnect","exists","messageCount","isPause","_doc","isSending","displayName","phoneNumberSending","on","_","prevState","parseInt","content","Left","color","margin","CallerId","SpinCont","filesCont","PhoneAndMessage","htmlFor","icon","faFileCsv","transform","FileCont","id","onChange","placeholder","withOrWithoutOne","OptionAddCont","faCheck","SpeedControl","min","max","e","value","slider","faThumbsDown","PausedCont","OptionButton","Submit","FormBody","Container","PauseScreen","dnis","message","results","onchangehandler","verify","r","message_id","newResarray","res","m","success","status","InputCont","i","Pine","enrouteCount","totalCount","rejectedCount","noRouteCount","sentStatus","expiredCount","deletedCount","acceptedCount","clearCountHandler","err","setItem","sendingFileName","totalNumberState","totalNumber","percCont","DPerc","toFixed","transports","isDragOver","fileState","forEach","length","dragOverHandler","dragLeaveHandler","onDropHandler","dataTransfer","referrer","fileList","slice","next","DropArea","border","opacity","onDragOver","onDrop","onDragLeave","multiple","d","Snapshots","counterArray","onLoadMore","Global","array","c","Row","noRoutecount","SingleDomain","l","purchaseHandler","forwardingChangeHandler","forwardingHandler","forwardURL","deleteSingle","selected","isAvailable","Name","Price","atTop","isPurchased","size","Right","disabled","forwardSuccess","successForwarding","forwardCont","NamecheapForward","domains","socketClient","domainsList","tldInput","tldList","prefix","prefixList","suffix","suffixList","minimumPrice","maximumPrice","numberToBulkForward","isFetching","bulkForwardingURL","Quantity","bulkForwardFinsh","listOfFoundDomains","listOfSelectedDomains","deleteTldHandler","controlList","newtldList","filter","t","changedHandler","keyDownHandler","control","controlInput","newTld","uuid","focus","clear","purchaseAndForwardBulk","downloadForwards","generate","domainObj","find","bulkForwardChangeURL","bulkPurchaseAndForward","newList","clearAllDownloadFile","domainsShuffleHandler","numberToTransfer","newSelectedArray","remainingArray","deleteSingleHandler","domainToDelete","newControl","o","concat","moment","toISOString","format","listOfDomains","BeastModeCont","DomainsListCont","tld","domainInputCont","onKeyDown","PriceTLD","PriceControl","PrefixCont","PrefixListCont","PrefixInputCont","SuffixListCont","TLDs","ListOfTlds","TLDInputCont","GenerateCont","textAlign","TwoDomainsConts","FirstDomainsCont","BulkForwardCont","EnterForwardingDetails","TwoWorkers","BLA","fileName","traffic","dataowner","reasons","percentageDone","arrayOfScrubs","suppressionCount","duplicateCount","downloadHandler","handleFileUpload","scrub","changeHandler","Options","Traffic","DataOwner","fileUpload","Scrub","isColumn","join","Object","keys","authSuccess","authSuccessReload","idToken","authFail","authLogOut","reload","Auth","password","errors","signin","position","includes","padding","fontSize","FormCont","open","LoadingPage","height","App","onTryAutoSignIn","appRoute","path","exact","component","HomeDev","D7","PineappleHome","PineAccountTwo","PineAccountThree","authCheck","authCheckLoading","dispatch","setTimeout","Boolean","hostname","match","updateObject","updatedProperties","initialState","userId","authRedirectPath","firstLoad","avatar","authCheckBeforeOpLoading","tellUserToVerify","showAuthModal","redirectToEmailVerificationPage","authStart","action","authCheckStart","authCheckBeforeOpStart","toggleAuthModal","setAuthModalToTrue","setAuthRedirectPath","setRedirectToEmailVerificationPage","reducer","rootReducer","combineReducers","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56868648.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"HomeDev_CallerId__2jzt1\",\"OptionButton\":\"HomeDev_OptionButton__14mDc\",\"PausedCont\":\"HomeDev_PausedCont__3lzg3\",\"rotate90\":\"HomeDev_rotate90__SjyUD\",\"FileCont\":\"HomeDev_FileCont__jNq9s\",\"FormBody\":\"HomeDev_FormBody__3F2iw\",\"filesCont\":\"HomeDev_filesCont__2Yb8m\",\"PhoneAndMessage\":\"HomeDev_PhoneAndMessage__YQPaZ\",\"loading\":\"HomeDev_loading__16B71\",\"Container\":\"HomeDev_Container__3tsf2\",\"Submit\":\"HomeDev_Submit__1K8O6\",\"OptionAddCont\":\"HomeDev_OptionAddCont__3i8aV\",\"withOrWithoutOne\":\"HomeDev_withOrWithoutOne__3UL4A\",\"SpeedControl\":\"HomeDev_SpeedControl__5cZsn\",\"slider\":\"HomeDev_slider__2NQs2\",\"sentCount\":\"HomeDev_sentCount__2wCWS\"};","import React, { Component } from 'react';\r\n\r\nclass GLOBAL extends Component {\r\n  static domain =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://powersms.land'\r\n      : 'http://localhost:7000';\r\n  static domainMobiniti =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://192.64.113.28:9000'\r\n      : 'http://localhost:9000';\r\n  static domainpine =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://aone.powersms.land'\r\n      : 'http://localhost:9090';\r\n  //\r\n  static blacklist =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://blacklist.powersms.land'\r\n      : 'http://localhost:8024';\r\n  static domainNameCheap =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://namecheap.powersms.land'\r\n      : 'http://localhost:8023';\r\n  static domainpineaccountone =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://atwo.powersms.land'\r\n      : 'http://localhost:7800';\r\n  static domainpineaccountthree =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://athree.powersms.land'\r\n      : 'http://localhost:7802';\r\n  render() {\r\n    return;\r\n  }\r\n}\r\n\r\nexport default GLOBAL;\r\n","import React, { useState } from 'react';\r\nimport classes from './Layout.module.css';\r\n// import {router} from \"react-router-dom\"\r\nimport Logo from './color.png';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nlet Layout = ({\r\n  children,\r\n  mobiniti,\r\n  accountOne,\r\n  accountTwo,\r\n  autoRotate,\r\n  autoRotateClickFunction,\r\n  goToAccountFunc,\r\n  goToOtherAccountFunc,\r\n  accountThree,\r\n  history,\r\n  isAuthPage\r\n}) => {\r\n  const [isFlip, setFlip] = useState(true);\r\n  return (\r\n    <div className={classes.Layout}>\r\n      <div className={classes.Header}>\r\n        <p className={classes.logo}>\r\n          {/* {mobiniti\r\n            ? 'FDN - Mobiniti'\r\n            : accountOne\r\n            ? 'FreshData2Way Account 1'\r\n            : accountTwo\r\n            ? 'FreshData2Way Account 2'\r\n            : accountThree\r\n            ? 'FreshData2Way Account 3'\r\n            : 'POWER-SMS'} */}\r\n          <img\r\n            onLoad={() => setFlip(true)}\r\n            onClick={() => (window.location.href = '/')}\r\n            width='200px'\r\n            style={{\r\n              transition: '.5s'\r\n              // transform: isFlip ? 'rotateX(0deg)' : 'rotateX(90deg)'\r\n            }}\r\n            src={Logo}\r\n          />\r\n        </p>\r\n        {\r\n          <div className={classes.settings}>\r\n            {autoRotate ? (\r\n              <span className={classes.snap} onClick={autoRotateClickFunction}>\r\n                Snapshots\r\n              </span>\r\n            ) : null}\r\n            {accountOne ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 2</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 3</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {accountTwo ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 1</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 3</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {accountThree ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 1</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 2</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {!isAuthPage ? (\r\n              <button\r\n                onClick={() => {\r\n                  localStorage.removeItem('token');\r\n                  document.location.href = '/auth';\r\n                }}\r\n              >\r\n                Logout\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      {children}\r\n      {/* <div className={classes.footer}>\r\n        \r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nconst mstp = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\nexport default connect(mstp)(withRouter(Layout));\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={classes['lds-ring']}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './Home.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    fullName: '',\r\n    pages: [\r\n      {\r\n        name: 'Pineapple',\r\n        link: '/pineapple-home'\r\n      },\r\n      {\r\n        name: 'D7',\r\n        link: '/'\r\n      },\r\n      {\r\n        name: 'Twilio',\r\n        link: '/'\r\n      },\r\n      {\r\n        name: 'Signalwire',\r\n        link: '/'\r\n      },\r\n      {\r\n        name: 'Buy Domain and Forward domains with the Namecheap API',\r\n        link: '/namecheap'\r\n      },\r\n      {\r\n        name: 'Scrub for mobiles with the Blacklist API',\r\n        link: '/blacklist'\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n          this.setState({ fullName });\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          // document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n          window.location.href = '/auth';\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.Home}>\r\n          <div className={classes.UserDetails}>\r\n            {/* <p>Hi {this.state.fullName.split(' ')[0]}!</p> */}\r\n            <p>Select Service Integration</p>\r\n          </div>\r\n          <div className={classes.Pages}>\r\n            {this.state.pages.map(p => {\r\n              return (\r\n                <div key={p.name} className={classes.page}>\r\n                  <p onClick={() => this.props.history.push(p.link)}>\r\n                    {p.name}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './HomeDev.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheck,\r\n  faThumbsDown,\r\n  faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    ani: '123',\r\n    file: null,\r\n    phoneFile: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainMobiniti,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${GLOBAL.domainMobiniti}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          unknownCount,\r\n          messageCount\r\n        } = data;\r\n        if (data.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        console.log(data);\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          unknownCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + parseInt(data)\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.emit('kill', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainMobiniti}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  onChangePhoneFileHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ phoneFile: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('phone', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainMobiniti}/api/uploadphones`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n        // phoneFile: this.state.phoneFile\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          {/* <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div> */}\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div className={classes.filesCont}>\r\n                <div className={classes.PhoneAndMessage}>\r\n                  <p>Enter message File:</p>\r\n                  <label htmlFor='file'>\r\n                    <F\r\n                      icon={faFileCsv}\r\n                      style={{\r\n                        color: this.state.file ? 'black' : '#bbb',\r\n                        transition: '1s',\r\n                        transform: this.state.file\r\n                          ? 'rotateX(360deg)'\r\n                          : 'rotateX(0deg)'\r\n                      }}\r\n                      // color='black'\r\n                    />\r\n                  </label>\r\n                  <div className={classes.FileCont}>\r\n                    <input\r\n                      type='file'\r\n                      id='file'\r\n                      // value={ani}\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder='Caller ID'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* <div className={classes.PhoneAndMessage}>\r\n                  <p>Enter phone File:</p>\r\n                  <label htmlFor='phones'>\r\n                    <F icon={faFileCsv} />\r\n                  </label>\r\n                  <div className={classes.FileCont}>\r\n                    <input\r\n                      type='file'\r\n                      id='phones'\r\n                      // value={ani}\r\n                      name='phones'\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder='Caller ID'\r\n                    />\r\n                  </div> */}\r\n                {/* </div> */}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout mobiniti>\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './PauseScreen.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nclass PauseScreen extends Component {\r\n  state = {\r\n    ani: '',\r\n    dnis: '',\r\n    message: '',\r\n    results: []\r\n  };\r\n\r\n  onchangehandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  verify = r => {\r\n    axios\r\n      .get(`${GLOBAL.domain}/api/status?message_id=${r.message_id}`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let newResarray = this.state.results.map(res => {\r\n          // console.log(res, 'resultsss');\r\n          console.log(data.m === res.message_id);\r\n          console.log('filterrrr');\r\n          return {\r\n            success: res.success,\r\n            message_id: res.message_id,\r\n            dnis: res.dnis,\r\n            status: data.m === res.message_id ? data.status : res.status\r\n          };\r\n        });\r\n        console.log(newResarray, 'newres');\r\n        this.setState({\r\n          results: newResarray\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    const { ani, dnis, message } = this.state;\r\n    return (\r\n      <Layout>\r\n        <div className={classes.PauseScreen}>\r\n          <p>Sender ID:</p>\r\n          <div className={classes.InputCont}>\r\n            <input onChange={this.onchangehandler} name='ani' type='text' />\r\n          </div>\r\n          <p>Comma Seperate Destination IDs (with Leading one please)</p>\r\n          <div className={classes.InputCont}>\r\n            <textarea\r\n              name='dnis'\r\n              value={dnis}\r\n              onChange={this.onchangehandler}\r\n            ></textarea>\r\n          </div>\r\n          <p>Enter a message</p>\r\n          <div className={classes.InputCont}>\r\n            <textarea\r\n              name='message'\r\n              value={message}\r\n              onChange={this.onchangehandler}\r\n            ></textarea>\r\n          </div>\r\n          <div className=''>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                console.log('go');\r\n                axios\r\n                  .get(\r\n                    `${GLOBAL.domain}/api/testmysends?ani=${ani}&dnis=${dnis}&message=${message}`\r\n                  )\r\n                  .then(({ data }) => {\r\n                    console.log(data);\r\n                    this.setState({ results: data });\r\n                  })\r\n                  .catch(e => {\r\n                    console.log(e);\r\n                  });\r\n              }}\r\n            >\r\n              Send Test Message\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>RESULTS:</p>\r\n          {this.state.results &&\r\n            this.state.results.map((r, i) => {\r\n              return (\r\n                <div className=''>\r\n                  {r.message_id === 'no routes' ? (\r\n                    <p>message was not sent to {r.dnis}</p>\r\n                  ) : (\r\n                    <div>\r\n                      <p>message was sent to {r.dnis}</p>\r\n                      <button\r\n                        className={classes.Submit}\r\n                        onClick={() => {\r\n                          this.verify(r);\r\n                        }}\r\n                      >\r\n                        Check Result\r\n                      </button>\r\n                      <p>{r.status}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PauseScreen;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './Pine.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '1234567890',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint:\r\n      process.env.NODE_ENV === 'production'\r\n        ? 'https://aone.powersms.land'\r\n        : GLOBAL.domainpine,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    totalCount: 0,\r\n    rejectedCount: 0,\r\n    noRouteCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    socket: socketIOClient(\r\n      process.env.NODE_ENV === 'production'\r\n        ? 'https://aone.powersms.land'\r\n        : GLOBAL.domainpine\r\n    ),\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { socket } = this.state;\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    let isPause = localStorage.getItem('pauseAcct1');\r\n    let sendingFileName = localStorage.getItem('isSendingAcct1');\r\n    let totalNumberState = localStorage.getItem('totalNumberAcct1');\r\n\r\n    if (isPause === '1') {\r\n      // if the local storage state is on pause\r\n      this.setState({ isPaused: true });\r\n    }\r\n    if (sendingFileName) {\r\n      this.setState({ file: sendingFileName, isStarted: true });\r\n    }\r\n    if (totalNumberState) {\r\n      this.setState({ totalCount: totalNumberState });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpine}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          speed,\r\n\r\n          messageCount\r\n          // noRouteCount\r\n        } = data;\r\n\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          speed,\r\n          sentStatus,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const { socket } = this.state;\r\n        socket.connect();\r\n        socket.on('totalNumber', totalNumber => {\r\n          this.setState({ totalCount: totalNumber });\r\n          localStorage.setItem('totalNumberAcct1', totalNumber);\r\n        });\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('NO ROUTES', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              noRouteCount: prevState.noRouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n          localStorage.removeItem('isSendingAcct1');\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          localStorage.setItem('pauseAcct1', '1');\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          localStorage.removeItem('isSendingAcct1');\r\n          localStorage.removeItem('pauseAcct1');\r\n          localStorage.removeItem('totalNumberAcct1');\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    localStorage.removeItem('totalNumberAcct1');\r\n\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      noRouteCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      noRouteCount: 0,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      noRouteCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpine}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint, {transports: ['websocket']});\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const { socket } = this.state;\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpine}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const { socket } = this.state;\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n      localStorage.setItem('isSendingAcct1', this.state.file);\r\n      localStorage.removeItem('pauseAcct1');\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const { socket } = this.state;\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n    localStorage.setItem('isSendingAcct1', this.state.file);\r\n    localStorage.removeItem('pauseAcct1');\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const { socket } = this.state;\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const { socket } = this.state;\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            {this.state.isStarted && this.state.sentCount > 0 ? (\r\n              <p>{this.numberWithCommas(this.state.totalCount)} sends left</p>\r\n            ) : null}\r\n          </div>\r\n          {/* <div className={classes.sentCount}>\r\n          \r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div> */}\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.noRouteCount)} NR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountOne\r\n          autoRotate\r\n          goToAccountFunc={() => this.props.history.push('/freshdata-2way-2')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-3')\r\n          }\r\n          autoRotateClickFunction={() =>\r\n            this.props.history.push('/snapshots-2way-1')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineAccountTwo.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '0123456789',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainpineaccountone,\r\n    sentCount: 0,\r\n    totalCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    rejectedCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true,\r\n    isDragOver: false,\r\n    files: []\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(document.referrer, 'right here');\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpineaccountone}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.fileList) {\r\n          this.setState({\r\n            files: data._doc.fileList\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('removeFileFromSendStatus', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              files: prevState.files.slice(1)\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null,\r\n            files: []\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountone}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files);\r\n    // console.log(event.target.files[0]);\r\n    let fileState = [];\r\n\r\n    this.setState({\r\n      file: event.target.files[0].name\r\n      // files: event.target.files\r\n    });\r\n    const data = new FormData();\r\n    [...event.target.files].forEach(file => {\r\n      data.append('file', file);\r\n    });\r\n    for (let i = 0; i < event.target.files.length; i++) {\r\n      // event.target.files\r\n      fileState.push(event.target.files[i].name);\r\n      // data.append('file', event.target.files[i]);\r\n    }\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpineaccountone}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false,\r\n        isDragOver: false,\r\n        files: fileState\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  dragOverHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ isDragOver: true });\r\n  };\r\n  dragLeaveHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ isDragOver: false });\r\n  };\r\n  onDropHandler = e => {\r\n    e.preventDefault();\r\n    let dt = e.dataTransfer;\r\n    let files = dt.files;\r\n    this.setState({\r\n      file: files[0].name\r\n      // files: event.target.files\r\n    });\r\n    console.log(files, 'files from drop');\r\n    const data = new FormData();\r\n    let fileState = [];\r\n    [...files].forEach(file => {\r\n      data.append('file', file);\r\n    });\r\n    for (let i = 0; i < files.length; i++) {\r\n      // event.target.files\r\n      fileState.push(files[i].name);\r\n    }\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountone}/api/upload`, data)\r\n      .then(() => {\r\n        this.setState({\r\n          loading: false,\r\n          isDoneSending: false,\r\n          files: fileState,\r\n          isDragOver: false\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.files[0]}...</p>\r\n                <p>Up Next:</p>\r\n                <div className=''>\r\n                  {this.state.files.slice(1).map((next, i) => {\r\n                    return <p key={i}>{next}</p>;\r\n                  })}\r\n                </div>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className={classes.DropArea}\r\n                style={{\r\n                  border: '1px dotted #bbb',\r\n                  opacity: this.state.isDragOver ? 0.5 : 1\r\n                }}\r\n                onDragOver={this.dragOverHandler}\r\n                onDrop={this.onDropHandler}\r\n                onDragLeave={this.dragLeaveHandler}\r\n              >\r\n                <input\r\n                  type='file'\r\n                  // value={ani}\r\n                  multiple\r\n                  onChange={this.onChangeHandler}\r\n                  placeholder='Caller ID'\r\n                />\r\n                {this.state.files.length <= 0 ? (\r\n                  <p>Input or drag and drop multiple files</p>\r\n                ) : null}\r\n                <div className=''>\r\n                  {this.state.files.map((d, i) => (\r\n                    <p key={i}>{d}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            {/* {this.state.isDoneSending ? <p>Sending Complete</p> : null} */}\r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountTwo\r\n          goToAccountFunc={() => this.props.history.push('/pineapple')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-3')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div className=''></div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../GLOBAL/GLOBAL';\r\nimport classes from './Snapshots.module.css';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Layout from '../../components/Layout/Layout';\r\nclass Snapshots extends Component {\r\n  state = {\r\n    counterArray: [],\r\n    page: 2,\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${Global.domainpine}/api/getmessagecounts/1`)\r\n      .then(({ data }) => {\r\n        let array = data;\r\n        console.log(data);\r\n        this.setState(p => {\r\n          return {\r\n            counterArray: [...p.counterArray, ...array],\r\n            loading: false\r\n          };\r\n        });\r\n      });\r\n  }\r\n  onLoadMore = () => {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(`${Global.domainpine}/api/getmessagecounts/${this.state.page}`)\r\n      .then(({ data }) => {\r\n        let array = data.counterArray;\r\n        console.log(array);\r\n        this.setState(p => {\r\n          return {\r\n            counterArray: array\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        SNAPSHOTS FROM PINEAPPLE FRESHDATA2WAY ACCOUNT ONE\r\n        {this.state.counterArray &&\r\n          this.state.counterArray.map(c => {\r\n            return (\r\n              <div className={classes.Row}>\r\n                <div className={classes.sentCount}>\r\n                  {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n                  <p>{this.numberWithCommas(c.sentCount)} sends</p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.deliveredCount)} D{' '}\r\n                    <F color='lightgreen' icon={faCheck} />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.unDeliveredCount)} U{' '}\r\n                    <F icon={faThumbsDown} color='red' />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.rejectedCount)} R{' '}\r\n                    <F icon={faThumbsDown} color='black' />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.enrouteCount)} ENR{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.expiredCount)} EXP{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.deletedCount)} DEL{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.sentStatus)} SENT{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.acceptedCount)} ACPT{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.unknownCount)} UKNWN{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.noRoutecount || 0)} UKNWN{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                {/* <button onClick={this.clearCountHandler}>Clear Counter</button> */}\r\n              </div>\r\n            );\r\n          })}\r\n        <p>Load More </p>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Snapshots;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './SingleDomain.module.css';\r\nconst SingleDomain = ({\r\n  l,\r\n  purchaseHandler,\r\n  forwardingChangeHandler,\r\n  forwardURL,\r\n  forwardingHandler,\r\n  deleteSingle,\r\n  selected\r\n}) => {\r\n  return (\r\n    <div className=''>\r\n      <div\r\n        className={classes.SingleDomain}\r\n        style={{ color: l.isAvailable ? 'inherit' : '#bbb' }}\r\n      >\r\n        <div className={classes.Left}>\r\n          <p className={classes.Name}>{l.domain}</p>\r\n          <p>${l.Price}</p>\r\n        </div>\r\n        <div className={classes.atTop} onClick={deleteSingle}>\r\n          x\r\n        </div>\r\n        {selected ? null : (\r\n          <div className=''>\r\n            {l.isPurchased ? (\r\n              <F icon={faCheck} color='lightgreen' size='3x' />\r\n            ) : (\r\n              <div className={classes.Right}>\r\n                <button\r\n                  disabled={!l.isAvailable}\r\n                  onClick={() => purchaseHandler(l.domain)}\r\n                >\r\n                  {l.isAvailable ? 'Purchase' : 'Not Available'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {l.forwardSuccess ? (\r\n        <div className={classes.successForwarding}>\r\n          <p>\r\n            {l.domain} now forwards to {l.forwardURL}\r\n          </p>\r\n        </div>\r\n      ) : l.isPurchased ? (\r\n        <div className={classes.forwardCont}>\r\n          <input\r\n            type='text'\r\n            name='forwardURL'\r\n            // value={forwardURL}\r\n            onChange={e => forwardingChangeHandler(e, l.domain)}\r\n            placeholder='Enter your forwarding url here'\r\n          />\r\n\r\n          <button onClick={() => forwardingHandler(l.domain)}>Submit</button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDomain;\r\n","// import React, { Component } from 'react';\r\n// import classes from './NamecheapForward.module.css';\r\n// import uuid from 'uuid';\r\n// import socketIOClient from 'socket.io-client';\r\n// import moment from 'moment';\r\n// import Spinner from '../../components/Spinner/Spinner';\r\n// import Global from '../GLOBAL/GLOBAL';\r\n// import SingleDomain from '../../components/SingleDomain/SingleDomain';\r\n// class NamecheapForward extends Component {\r\n//   state = {\r\n//     domains: '',\r\n//     socketClient: socketIOClient(Global.domainNameCheap),\r\n//     domainsList: [{ name: 'example', id: 1676723 }],\r\n//     endpoint: Global.domain,\r\n//     tldInput: '',\r\n//     tldList: [\r\n//       { name: '.red', id: 1676723 },\r\n//       { name: '.site', id: 456676 }\r\n//     ],\r\n//     prefix: '',\r\n//     prefixList: [{ name: 'love', id: 1676723 }],\r\n//     suffix: '',\r\n//     suffixList: [\r\n//       { name: 'learn', id: 1676723 },\r\n//       { name: 'use', id: 456676 }\r\n//     ],\r\n//     minimumPrice: 0,\r\n//     maximumPrice: 10,\r\n//     numberToBulkForward: null,\r\n//     isFetching: false,\r\n//     error: [],\r\n//     bulkForwardingURL: '',\r\n//     Quantity: 5,\r\n//     bulkForwardFinsh: false,\r\n//     listOfFoundDomains: [\r\n//       // {\r\n//       //   domain: '02b32423gerg22.xyz',\r\n//       //   isAvailable: 'true',\r\n//       //   isInSelected: false,\r\n//       //   isPurchased: false,\r\n//       //   forwardURL: 'http://google.com',\r\n//       //   forwardSuccess: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   // forwardSuccess:\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // },\r\n//       // {\r\n//       //   domain: '02b423424332.xyz',\r\n//       //   isAvailable: 'true',\r\n//       //   isInSelected: false,\r\n//       //   isPurchased: false,\r\n//       //   forwardURL: 'http://google.com',\r\n//       //   forwardSuccess: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   // forwardSuccess:\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // }\r\n//       // {\r\n//       //   domain: 'loveexampleuse.site',\r\n//       //   isAvailable: false,\r\n//       //   forwardURL: '',\r\n//       //   isPurchased: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // }\r\n//     ],\r\n//     listOfSelectedDomains: [\r\n//       {\r\n//         domain: '02b.xyz',\r\n//         isAvailable: 'true',\r\n//         isPurchased: false,\r\n//         forwardURL: 'http://google.com',\r\n//         forwardSuccess: false,\r\n//         isPremiumName: 'false',\r\n//         Duration: '1',\r\n//         DurationType: 'YEAR',\r\n//         Price: '1.28',\r\n//         // forwardSuccess:\r\n//         PricingType: 'MULTIPLE',\r\n//         AdditionalCost: '0.18',\r\n//         RegularPrice: '25.88',\r\n//         RegularPriceType: 'MULTIPLE',\r\n//         RegularAdditionalCost: '0.18',\r\n//         RegularAdditionalCostType: 'MULTIPLE',\r\n//         YourPrice: '1.28',\r\n//         YourPriceType: 'MULTIPLE',\r\n//         YourAdditonalCost: '0.18',\r\n//         YourAdditonalCostType: 'MULTIPLE',\r\n//         PromotionPrice: '0.0',\r\n//         Currency: 'USD'\r\n//       },\r\n//       {\r\n//         domain: 'loveexampleuse.site',\r\n//         isAvailable: false,\r\n//         forwardURL: '',\r\n//         isPurchased: false,\r\n//         isPremiumName: 'false',\r\n//         Duration: '1',\r\n//         DurationType: 'YEAR',\r\n//         Price: '1.28',\r\n//         PricingType: 'MULTIPLE',\r\n//         AdditionalCost: '0.18',\r\n//         RegularPrice: '25.88',\r\n//         RegularPriceType: 'MULTIPLE',\r\n//         RegularAdditionalCost: '0.18',\r\n//         RegularAdditionalCostType: 'MULTIPLE',\r\n//         YourPrice: '1.28',\r\n//         YourPriceType: 'MULTIPLE',\r\n//         YourAdditonalCost: '0.18',\r\n//         YourAdditonalCostType: 'MULTIPLE',\r\n//         PromotionPrice: '0.0',\r\n//         Currency: 'USD'\r\n//       }\r\n//     ]\r\n//   };\r\n//   componentDidMount() {\r\n//     // const socket = socketIOClient(this.state.endpoint);\r\n//     // socket.connect();\r\n\r\n//     this.state.socketClient.on('bulkSendSuccess', _ => {\r\n//       this.setState({ bulkForwardFinsh: true });\r\n//     });\r\n//     this.state.socketClient.on('errorPurchase', ({ msg, domain }) => {\r\n//       console.log(msg, domain);\r\n//       this.setState(p => {\r\n//         return {\r\n//           error: p.error.concat({ msg, domain })\r\n//         };\r\n//       });\r\n//     });\r\n\r\n//     this.state.socketClient.on('fetchEnd', _ => {\r\n//       this.setState({ isFetching: false });\r\n//     });\r\n//     this.state.socketClient.on('downloadingNow', d => {\r\n//       // this.setState({ isFetching: false });\r\n//       var blob = new Blob([d], {\r\n//         type: 'text/plain'\r\n//       });\r\n\r\n//       const url = window.URL.createObjectURL(blob);\r\n//       const a = document.createElement('a');\r\n//       const date = new Date();\r\n//       a.setAttribute('hidden', url);\r\n//       a.setAttribute('href', url);\r\n//       a.setAttribute(\r\n//         'download',\r\n//         `${moment(`${new Date().toISOString()}`).format('DD-MM-YYYY')}_${\r\n//           this.state.listOfSelectedDomains.length\r\n//         }_${this.state.bulkForwardingURL}.csv`\r\n//       );\r\n//       document.body.appendChild(a);\r\n//       a.click();\r\n//       document.body.removeChild(a);\r\n//     });\r\n\r\n//     this.state.socketClient.on('pushDomain', data => {\r\n//       let listOfDomains = [...this.state.listOfFoundDomains];\r\n//       console.log(listOfDomains);\r\n//       let newList = listOfDomains.concat({\r\n//         ...data,\r\n//         forwardURL: '',\r\n//         forwardSuccess: false\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n//     this.state.socketClient.on('purchaseSuccessBulk', domain => {\r\n//       let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//       let newList = listOfSelectedDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             isPurchased: true\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfSelectedDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('purchaseSuccess', domain => {\r\n//       let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//       let newList = listOfFoundDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             isPurchased: true\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('forwardSuccessBulk', domain => {\r\n//       let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//       let newList = listOfSelectedDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             forwardSuccess: true,\r\n//             forwardURL: this.state.bulkForwardingURL\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfSelectedDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('forwardSuccess', domain => {\r\n//       let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//       let newList = listOfFoundDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             forwardSuccess: true,\r\n//             forwardURL: this.state.bulkForwardingURL\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n//   }\r\n//   deleteTldHandler = (id, controlList) => {\r\n//     let tlds = [...this.state[controlList]];\r\n//     let newtldList = tlds.filter(t => t.id !== id);\r\n//     this.setState({ [controlList]: newtldList });\r\n//   };\r\n//   changedHandler = e => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   keyDownHandler = (e, control, controlInput) => {\r\n//     // console.log(e.key);\r\n//     if (e.key === 'Tab' || e.key === ',') {\r\n//       e.preventDefault();\r\n//       let newTld = [\r\n//         ...this.state[control],\r\n//         { name: e.target.value, id: uuid() }\r\n//       ];\r\n//       this.setState({ [control]: newTld, [controlInput]: '' });\r\n//       e.target.focus();\r\n//     }\r\n//   };\r\n//   clear = controlList => {\r\n//     this.setState({ [controlList]: [] });\r\n//   };\r\n//   purchaseHandler = domain => {\r\n//     console.log(domain);\r\n//     this.state.socketClient.emit('purchase', domain);\r\n//   };\r\n//   purchaseAndForwardBulk = () => {};\r\n//   downloadForwards = () => {\r\n//     this.state.socketClient.emit('download');\r\n//   };\r\n//   generate = () => {\r\n//     // const socket = socketIOClient(this.state.endpoint);\r\n//     // socket.connect();\r\n//     this.setState({ isFetching: true, bulkForwardFinsh: false, error: [] });\r\n//     this.setState({ listOfFoundDomains: [] });\r\n//     let prefixList = this.state.prefixList;\r\n//     let suffixList = this.state.suffixList;\r\n//     let domainsList = this.state.domainsList;\r\n//     let tldList = this.state.tldList;\r\n//     const { minimumPrice, maximumPrice, Quantity } = this.state;\r\n\r\n//     this.state.socketClient.emit('check', {\r\n//       prefixList,\r\n//       suffixList,\r\n//       domainsList,\r\n//       tldList,\r\n//       minimumPrice,\r\n//       maximumPrice,\r\n//       Quantity\r\n//     });\r\n//   };\r\n\r\n//   forwardingChangeHandler = (e, domain) => {\r\n//     // this.setState({[e.target.name]: e.target.vlaue})\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//     listOfFoundDomainsToEdit.map(l => {\r\n//       if (l.domain === domain) {\r\n//         l.forwardURL = e.target.value;\r\n//       }\r\n//       return l;\r\n//     });\r\n//   };\r\n//   forwardingHandler = domain => {\r\n//     // console.log(e.target.value);\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//     let domainObj = listOfFoundDomainsToEdit.find(l => l.domain === domain);\r\n//     console.log(domainObj.forwardURL);\r\n//     this.state.socketClient.emit('forward', {\r\n//       domain,\r\n//       forwardURL: domainObj.forwardURL\r\n//     });\r\n//   };\r\n\r\n//   bulkForwardChangeURL = e => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   bulkPurchaseAndForward = () => {\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//     let newList = listOfFoundDomainsToEdit.map(l => {\r\n//       return {\r\n//         ...l,\r\n//         forwardURL: this.state.bulkForwardingURL\r\n//       };\r\n//     });\r\n//     // this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n//     this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n//   };\r\n//   clearAllDownloadFile = () => {\r\n//     this.setState({ listOfSelectedDomains: [], bulkForwardFinsh: false });\r\n//     this.state.socketClient.emit('clear', true);\r\n//   };\r\n\r\n//   domainsShuffleHandler = () => {\r\n//     let numberToTransfer = this.state.numberToBulkForward;\r\n//     // let totalNumberOfGeneratedDomains = this.state.listOfFoundDomains.length;\r\n//     console.log(\r\n//       this.state.listOfFoundDomains,\r\n//       this.state.listOfSelectedDomains\r\n//     );\r\n//     if (this.state.listOfSelectedDomains === numberToTransfer) {\r\n//       return;\r\n//     }\r\n\r\n//     if (this.state.listOfSelectedDomains.length < numberToTransfer) {\r\n//       let newSelectedArray = [\r\n//         ...this.state.listOfSelectedDomains,\r\n//         ...this.state.listOfFoundDomains.slice(\r\n//           0,\r\n//           numberToTransfer - this.state.listOfSelectedDomains.length\r\n//         )\r\n//       ];\r\n//       let remainingArray = this.state.listOfFoundDomains.slice(\r\n//         numberToTransfer - this.state.listOfSelectedDomains.length\r\n//       );\r\n//       console.log(newSelectedArray, remainingArray);\r\n//       this.setState({\r\n//         listOfFoundDomains: remainingArray,\r\n//         listOfSelectedDomains: newSelectedArray\r\n//       });\r\n//     } else if (this.state.listOfSelectedDomains.length > numberToTransfer) {\r\n//       let newSelectedArray = this.state.listOfSelectedDomains.slice(\r\n//         this.state.listOfSelectedDomains.length - numberToTransfer\r\n//       );\r\n//       let remainingArray = [\r\n//         ...this.state.listOfFoundDomains,\r\n//         ...this.state.listOfSelectedDomains.slice(\r\n//           0,\r\n//           this.state.listOfSelectedDomains.length - numberToTransfer\r\n//         )\r\n//       ];\r\n//       console.log(newSelectedArray, remainingArray);\r\n//       this.setState({\r\n//         listOfFoundDomains: remainingArray,\r\n//         listOfSelectedDomains: newSelectedArray\r\n//       });\r\n//     }\r\n//   };\r\n//   deleteSingleHandler = (control, domainToDelete) => {\r\n//     let controlArray = [...this.state[control]];\r\n//     let newControl = controlArray.filter(o => {\r\n//       return o.domain !== domainToDelete;\r\n//     });\r\n//     this.setState({ [control]: newControl });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className={classes.Container}>\r\n//         <div className={classes.BeastModeCont}>\r\n//           <div className={classes.DomainsListCont}>\r\n//             {this.state.domainsList.length > 0 &&\r\n//               this.state.domainsList.map(d => (\r\n//                 <div key={d.id} className={classes.tld}>\r\n//                   <span>{d.name}</span>\r\n//                   <b onClick={() => this.deleteTldHandler(d.id, 'domainsList')}>\r\n//                     x\r\n//                   </b>\r\n//                 </div>\r\n//               ))}\r\n//             {this.state.domainsList.length > 0 ? (\r\n//               <b\r\n//                 className={classes.clear}\r\n//                 onClick={() => this.clear('domainsList')}\r\n//               >\r\n//                 Clear all ({this.state.domainsList.length})\r\n//               </b>\r\n//             ) : null}\r\n//           </div>\r\n//           <div className={classes.domainInputCont}>\r\n//             <input\r\n//               type='text'\r\n//               name='domains'\r\n//               value={this.state.domains}\r\n//               onKeyDown={e => this.keyDownHandler(e, 'domainsList', 'domains')}\r\n//               placeholder='Enter between 3 to 5 domains or keywords to begin Jared'\r\n//               onChange={this.changedHandler}\r\n//             />\r\n//           </div>\r\n//           <div className={classes.PriceTLD}>\r\n//             <div className={classes.PriceControl}>\r\n//               <p>Price range</p>\r\n//               <div>\r\n//                 <span>$</span>{' '}\r\n//                 <input\r\n//                   value={this.state.minimumPrice}\r\n//                   type='text'\r\n//                   name='minimumPrice'\r\n//                   onChange={this.changedHandler}\r\n//                 />\r\n//               </div>\r\n//               <p>to</p>\r\n//               <div>\r\n//                 <span>$</span>{' '}\r\n//                 <input\r\n//                   value={this.state.maximumPrice}\r\n//                   type='text'\r\n//                   name='maximumPrice'\r\n//                   onChange={this.changedHandler}\r\n//                 />\r\n//               </div>\r\n//               <div className={classes.PrefixCont}>\r\n//                 <p className={classes.Header}>Prefixes</p>\r\n//                 <div className={classes.PrefixListCont}>\r\n//                   {this.state.prefixList.length > 0 &&\r\n//                     this.state.prefixList.map(d => (\r\n//                       <div key={d.id} className={classes.tld}>\r\n//                         <span>{d.name}</span>\r\n//                         <b\r\n//                           onClick={() =>\r\n//                             this.deleteTldHandler(d.id, 'prefixList')\r\n//                           }\r\n//                         >\r\n//                           x\r\n//                         </b>\r\n//                       </div>\r\n//                     ))}\r\n//                   {this.state.prefixList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('prefixList')}\r\n//                     >\r\n//                       Clear all ({this.state.prefixList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.PrefixInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='prefix'\r\n//                     value={this.state.prefix}\r\n//                     placeholder='Enter a tab separated list of prefixes'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'prefixList', 'prefix')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//               <div className={classes.PrefixCont}>\r\n//                 <p className={classes.Header}>Suffixes</p>\r\n//                 <div className={classes.SuffixListCont}>\r\n//                   {this.state.suffixList.length > 0 &&\r\n//                     this.state.suffixList.map(d => (\r\n//                       <div key={d.id} className={classes.tld}>\r\n//                         <span>{d.name}</span>\r\n//                         <b\r\n//                           onClick={() =>\r\n//                             this.deleteTldHandler(d.id, 'suffixList')\r\n//                           }\r\n//                         >\r\n//                           x\r\n//                         </b>\r\n//                       </div>\r\n//                     ))}\r\n//                   {this.state.suffixList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('suffixList')}\r\n//                     >\r\n//                       Clear all ({this.state.suffixList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.PrefixInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='suffix'\r\n//                     value={this.state.suffix}\r\n//                     placeholder='Enter a tab separated list of suffixes'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'suffixList', 'suffix')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className={classes.Right}>\r\n//               <div className={classes.TLDs}>\r\n//                 <div className={classes.ListOfTlds}>\r\n//                   {this.state.tldList.map(t => (\r\n//                     // <React.Fragment>\r\n//                     <div key={t.id} className={classes.tld}>\r\n//                       <span>{t.name}</span>\r\n//                       <b onClick={() => this.deleteTldHandler(t.id, 'tldList')}>\r\n//                         x\r\n//                       </b>\r\n//                     </div>\r\n//                     // </React.Fragment>\r\n//                   ))}\r\n//                   {this.state.tldList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('tldList')}\r\n//                     >\r\n//                       Clear all ({this.state.tldList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.TLDInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='tldInput'\r\n//                     value={this.state.tldInput}\r\n//                     placeholder='Enter a tab separated list of TLDs'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'tldList', 'tldInput')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className={classes.GenerateCont}>\r\n//             <button\r\n//               onClick={this.generate}\r\n//               disabled={\r\n//                 this.state.domainsList.length <= 0 ||\r\n//                 this.state.tldList.length <= 0\r\n//               }\r\n//             >\r\n//               Generate\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         {this.state.isFetching ? (\r\n//           <div className=''>\r\n//             <Spinner />\r\n//           </div>\r\n//         ) : null}\r\n//         {this.state.error.length > 0 ? (\r\n//           <p style={{ textAlign: 'center', color: 'red' }}>\r\n//             {this.state.error[0].msg}\r\n//           </p>\r\n//         ) : null}\r\n\r\n//         {/* TWO DOMAINS SAGA */}\r\n//         <div className={classes.TwoDomainsConts}>\r\n//           <div className={classes.FirstDomainsCont}>\r\n//             {this.state.listOfFoundDomains.length > 0 &&\r\n//               this.state.listOfFoundDomains.map(d => {\r\n//                 return (\r\n//                   <SingleDomain\r\n//                     l={d}\r\n//                     deleteSingle={() =>\r\n//                       this.deleteSingleHandler('listOfFoundDomains', d.domain)\r\n//                     }\r\n//                     purchaseHandler={this.purchaseHandler}\r\n//                     forwardingChangeHandler={this.forwardingChangeHandler}\r\n//                     forwardURL={d.forwardURL}\r\n//                     forwardingHandler={this.forwardingHandler}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//           </div>\r\n//           <div className={classes.BulkForwardCont}>\r\n//             <div className={classes.Right}>\r\n//               <button onClick={this.clearAllDownloadFile}>Clear All</button>\r\n//               <button onClick={this.downloadForwards}>\r\n//                 Download domain and Forwards\r\n//               </button>\r\n//             </div>\r\n//             {this.state.listOfFoundDomains.length > 0 ||\r\n//             this.state.listOfSelectedDomains.length > 0 ? (\r\n//               <div className={classes.EnterForwardingDetails}>\r\n//                 {/* Text to show after generation */}\r\n\r\n//                 <p>Bulk Forward Controller</p>\r\n\r\n//                 <div className={classes.Right}>\r\n//                   <input\r\n//                     type='number'\r\n//                     name='numberToBulkForward'\r\n//                     value={this.state.numberToBulkForward}\r\n//                     onChange={this.changedHandler}\r\n//                     placeholder='Enter Number of Links to Bulk Purchase and Forward'\r\n//                   />\r\n//                 </div>\r\n//                 {/* {this.state.numberToBulkForward ? ( */}\r\n//                 <div className={classes.Right}>\r\n//                   <button\r\n//                     disabled={\r\n//                       !this.state.numberToBulkForward ||\r\n//                       this.state.listOfFoundDomains.length +\r\n//                         this.state.listOfSelectedDomains.length <\r\n//                         this.state.numberToBulkForward\r\n//                     }\r\n//                     onClick={this.domainsShuffleHandler}\r\n//                   >\r\n//                     keep {this.state.numberToBulkForward} domains in bulk Box\r\n//                   </button>\r\n//                 </div>\r\n//                 {/* ) : null} */}\r\n//               </div>\r\n//             ) : null}\r\n//             <div className={classes.Right}>\r\n//               {!this.state.isFetching &&\r\n//               this.state.listOfSelectedDomains.length > 0 ? (\r\n//                 <div className={classes.TwoWorkers}>\r\n//                   {!this.state.bulkForwardFinsh ? (\r\n//                     <div>\r\n//                       <div className={classes.Right}>\r\n//                         <input\r\n//                           type='text'\r\n//                           name='bulkForwardingURL'\r\n//                           value={this.state.bulkForwardingURL}\r\n//                           onChange={this.bulkForwardChangeURL}\r\n//                           placeholder='Please enter base URL'\r\n//                         />\r\n//                       </div>\r\n//                       <div className={classes.TrafficSelectionCont}>\r\n//                         <div className={classes.TrafficSelectionRadio}>\r\n//                           <div className={classes.SingleRadio}><span> </span></div>\r\n//                           <div className={classes.SingleRadio}><span></span></div>\r\n//                           <div className={classes.SingleRadio}><span></span></div>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ) : null}\r\n//                 </div>\r\n//               ) : null}\r\n\r\n//               {this.state.bulkForwardFinsh ? null : this.state\r\n//                   .listOfSelectedDomains.length > 0 &&\r\n//                 !this.state.isFetching ? (\r\n//                 <button\r\n//                   onClick={this.bulkPurchaseAndForward}\r\n//                   disabled={!this.state.bulkForwardingURL}\r\n//                 >\r\n//                   Purchase and forward all\r\n//                 </button>\r\n//               ) : null}\r\n//             </div>\r\n//             {this.state.listOfSelectedDomains.length > 0 &&\r\n//               this.state.listOfSelectedDomains.map(d => {\r\n//                 return (\r\n//                   <SingleDomain\r\n//                     l={d}\r\n//                     deleteSingle={() =>\r\n//                       this.deleteSingleHandler(\r\n//                         'listOfSelectedDomains',\r\n//                         d.domain\r\n//                       )\r\n//                     }\r\n//                     selected\r\n//                     purchaseHandler={this.purchaseHandler}\r\n//                     forwardingChangeHandler={this.forwardingChangeHandler}\r\n//                     forwardURL={d.forwardURL}\r\n//                     forwardingHandler={this.forwardingHandler}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//             {this.state.listOfSelectedDomains.length <= 0 &&\r\n//             this.state.listOfFoundDomains.length <= 0 ? (\r\n//               <div>\r\n//                 {/* Text to show at the start of the generation process */}\r\n//               </div>\r\n//             ) : null}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default NamecheapForward;\r\n\r\nimport React, { Component } from 'react';\r\nimport classes from './NamecheapForward.module.css';\r\nimport uuid from 'uuid';\r\nimport socketIOClient from 'socket.io-client';\r\nimport moment from 'moment';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Global from '../GLOBAL/GLOBAL';\r\nimport SingleDomain from '../../components/SingleDomain/SingleDomain';\r\nclass NamecheapForward extends Component {\r\n  state = {\r\n    domains: '',\r\n    socketClient: socketIOClient(Global.domainNameCheap),\r\n    domainsList: [{ name: 'example', id: 1676723 }],\r\n    endpoint: Global.domain,\r\n    tldInput: '',\r\n    tldList: [\r\n      { name: '.red', id: 1676723 },\r\n      { name: '.site', id: 456676 }\r\n    ],\r\n    prefix: '',\r\n    prefixList: [{ name: 'love', id: 1676723 }],\r\n    suffix: '',\r\n    suffixList: [\r\n      { name: 'learn', id: 1676723 },\r\n      { name: 'use', id: 456676 }\r\n    ],\r\n    minimumPrice: 0,\r\n    maximumPrice: 10,\r\n    numberToBulkForward: null,\r\n    isFetching: false,\r\n    error: [],\r\n    bulkForwardingURL: '',\r\n    Quantity: 5,\r\n    bulkForwardFinsh: false,\r\n    listOfFoundDomains: [\r\n      // {\r\n      //   domain: '02b32423gerg22.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isInSelected: false,\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // },\r\n      // {\r\n      //   domain: '02b423424332.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isInSelected: false,\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n      // {\r\n      //   domain: 'loveexampleuse.site',\r\n      //   isAvailable: false,\r\n      //   forwardURL: '',\r\n      //   isPurchased: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n    ],\r\n    listOfSelectedDomains: [\r\n      // {\r\n      //   domain: '02b.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // },\r\n      // {\r\n      //   domain: 'loveexampleuse.site',\r\n      //   isAvailable: false,\r\n      //   forwardURL: '',\r\n      //   isPurchased: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n    ]\r\n  };\r\n  componentDidMount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.connect();\r\n\r\n    this.state.socketClient.on('bulkSendSuccess', _ => {\r\n      this.setState({ bulkForwardFinsh: true });\r\n    });\r\n    this.state.socketClient.on('errorPurchase', ({ msg, domain }) => {\r\n      console.log(msg, domain);\r\n      this.setState(p => {\r\n        return {\r\n          error: p.error.concat({ msg, domain })\r\n        };\r\n      });\r\n    });\r\n\r\n    this.state.socketClient.on('fetchEnd', _ => {\r\n      this.setState({ isFetching: false });\r\n    });\r\n    this.state.socketClient.on('downloadingNow', d => {\r\n      // this.setState({ isFetching: false });\r\n      var blob = new Blob([d], {\r\n        type: 'text/plain'\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      const date = new Date();\r\n      a.setAttribute('hidden', url);\r\n      a.setAttribute('href', url);\r\n      a.setAttribute(\r\n        'download',\r\n        `${moment(`${new Date().toISOString()}`).format('DD-MM-YYYY')}_${\r\n          this.state.listOfSelectedDomains.length\r\n        }_${this.state.bulkForwardingURL}.csv`\r\n      );\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n\r\n    this.state.socketClient.on('pushDomain', data => {\r\n      let listOfDomains = [...this.state.listOfFoundDomains];\r\n      console.log(listOfDomains);\r\n      let newList = listOfDomains.concat({\r\n        ...data,\r\n        forwardURL: '',\r\n        forwardSuccess: false\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n    this.state.socketClient.on('purchaseSuccessBulk', domain => {\r\n      let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n      let newList = listOfSelectedDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            isPurchased: true\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfSelectedDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('purchaseSuccess', domain => {\r\n      let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n      let newList = listOfFoundDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            isPurchased: true\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('forwardSuccessBulk', domain => {\r\n      let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n      let newList = listOfSelectedDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            forwardSuccess: true,\r\n            forwardURL: this.state.bulkForwardingURL\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfSelectedDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('forwardSuccess', domain => {\r\n      let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n      let newList = listOfFoundDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            forwardSuccess: true,\r\n            forwardURL: this.state.bulkForwardingURL\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n  }\r\n  deleteTldHandler = (id, controlList) => {\r\n    let tlds = [...this.state[controlList]];\r\n    let newtldList = tlds.filter(t => t.id !== id);\r\n    this.setState({ [controlList]: newtldList });\r\n  };\r\n  changedHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  keyDownHandler = (e, control, controlInput) => {\r\n    // console.log(e.key);\r\n    if (e.key === 'Tab' || e.key === ',') {\r\n      e.preventDefault();\r\n      let newTld = [\r\n        ...this.state[control],\r\n        { name: e.target.value, id: uuid() }\r\n      ];\r\n      this.setState({ [control]: newTld, [controlInput]: '' });\r\n      e.target.focus();\r\n    }\r\n  };\r\n  clear = controlList => {\r\n    this.setState({ [controlList]: [] });\r\n  };\r\n  purchaseHandler = domain => {\r\n    console.log(domain);\r\n    this.state.socketClient.emit('purchase', domain);\r\n  };\r\n  purchaseAndForwardBulk = () => {};\r\n  downloadForwards = () => {\r\n    this.state.socketClient.emit('download');\r\n  };\r\n  generate = () => {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.connect();\r\n    this.setState({ isFetching: true, bulkForwardFinsh: false, error: [] });\r\n    this.setState({ listOfFoundDomains: [] });\r\n    let prefixList = this.state.prefixList;\r\n    let suffixList = this.state.suffixList;\r\n    let domainsList = this.state.domainsList;\r\n    let tldList = this.state.tldList;\r\n    const { minimumPrice, maximumPrice, Quantity } = this.state;\r\n\r\n    this.state.socketClient.emit('check', {\r\n      prefixList,\r\n      suffixList,\r\n      domainsList,\r\n      tldList,\r\n      minimumPrice,\r\n      maximumPrice,\r\n      Quantity\r\n    });\r\n  };\r\n\r\n  forwardingChangeHandler = (e, domain) => {\r\n    // this.setState({[e.target.name]: e.target.vlaue})\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n    listOfFoundDomainsToEdit.map(l => {\r\n      if (l.domain === domain) {\r\n        l.forwardURL = e.target.value;\r\n      }\r\n      return l;\r\n    });\r\n  };\r\n  forwardingHandler = domain => {\r\n    // console.log(e.target.value);\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n    let domainObj = listOfFoundDomainsToEdit.find(l => l.domain === domain);\r\n    console.log(domainObj.forwardURL);\r\n    this.state.socketClient.emit('forward', {\r\n      domain,\r\n      forwardURL: domainObj.forwardURL\r\n    });\r\n  };\r\n\r\n  bulkForwardChangeURL = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  bulkPurchaseAndForward = () => {\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n    let newList = listOfFoundDomainsToEdit.map(l => {\r\n      return {\r\n        ...l,\r\n        forwardURL: this.state.bulkForwardingURL\r\n      };\r\n    });\r\n    // this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n    this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n  };\r\n  clearAllDownloadFile = () => {\r\n    this.setState({ listOfSelectedDomains: [], bulkForwardFinsh: false });\r\n    this.state.socketClient.emit('clear', true);\r\n  };\r\n\r\n  domainsShuffleHandler = () => {\r\n    let numberToTransfer = this.state.numberToBulkForward;\r\n    // let totalNumberOfGeneratedDomains = this.state.listOfFoundDomains.length;\r\n    console.log(\r\n      this.state.listOfFoundDomains,\r\n      this.state.listOfSelectedDomains\r\n    );\r\n    if (this.state.listOfSelectedDomains === numberToTransfer) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.listOfSelectedDomains.length < numberToTransfer) {\r\n      let newSelectedArray = [\r\n        ...this.state.listOfSelectedDomains,\r\n        ...this.state.listOfFoundDomains.slice(\r\n          0,\r\n          numberToTransfer - this.state.listOfSelectedDomains.length\r\n        )\r\n      ];\r\n      let remainingArray = this.state.listOfFoundDomains.slice(\r\n        numberToTransfer - this.state.listOfSelectedDomains.length\r\n      );\r\n      console.log(newSelectedArray, remainingArray);\r\n      this.setState({\r\n        listOfFoundDomains: remainingArray,\r\n        listOfSelectedDomains: newSelectedArray\r\n      });\r\n    } else if (this.state.listOfSelectedDomains.length > numberToTransfer) {\r\n      let newSelectedArray = this.state.listOfSelectedDomains.slice(\r\n        this.state.listOfSelectedDomains.length - numberToTransfer\r\n      );\r\n      let remainingArray = [\r\n        ...this.state.listOfFoundDomains,\r\n        ...this.state.listOfSelectedDomains.slice(\r\n          0,\r\n          this.state.listOfSelectedDomains.length - numberToTransfer\r\n        )\r\n      ];\r\n      console.log(newSelectedArray, remainingArray);\r\n      this.setState({\r\n        listOfFoundDomains: remainingArray,\r\n        listOfSelectedDomains: newSelectedArray\r\n      });\r\n    }\r\n  };\r\n  deleteSingleHandler = (control, domainToDelete) => {\r\n    let controlArray = [...this.state[control]];\r\n    let newControl = controlArray.filter(o => {\r\n      return o.domain !== domainToDelete;\r\n    });\r\n    this.setState({ [control]: newControl });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.BeastModeCont}>\r\n          <div className={classes.DomainsListCont}>\r\n            {this.state.domainsList.length > 0 &&\r\n              this.state.domainsList.map(d => (\r\n                <div key={d.id} className={classes.tld}>\r\n                  <span>{d.name}</span>\r\n                  <b onClick={() => this.deleteTldHandler(d.id, 'domainsList')}>\r\n                    x\r\n                  </b>\r\n                </div>\r\n              ))}\r\n            {this.state.domainsList.length > 0 ? (\r\n              <b\r\n                className={classes.clear}\r\n                onClick={() => this.clear('domainsList')}\r\n              >\r\n                Clear all ({this.state.domainsList.length})\r\n              </b>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.domainInputCont}>\r\n            <input\r\n              type='text'\r\n              name='domains'\r\n              value={this.state.domains}\r\n              onKeyDown={e => this.keyDownHandler(e, 'domainsList', 'domains')}\r\n              placeholder='Enter between 3 to 5 domains or keywords to begin Jared'\r\n              onChange={this.changedHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.PriceTLD}>\r\n            <div className={classes.PriceControl}>\r\n              <p>Price range</p>\r\n              <div>\r\n                <span>$</span>{' '}\r\n                <input\r\n                  value={this.state.minimumPrice}\r\n                  type='text'\r\n                  name='minimumPrice'\r\n                  onChange={this.changedHandler}\r\n                />\r\n              </div>\r\n              <p>to</p>\r\n              <div>\r\n                <span>$</span>{' '}\r\n                <input\r\n                  value={this.state.maximumPrice}\r\n                  type='text'\r\n                  name='maximumPrice'\r\n                  onChange={this.changedHandler}\r\n                />\r\n              </div>\r\n              <div className={classes.PrefixCont}>\r\n                <p className={classes.Header}>Prefixes</p>\r\n                <div className={classes.PrefixListCont}>\r\n                  {this.state.prefixList.length > 0 &&\r\n                    this.state.prefixList.map(d => (\r\n                      <div key={d.id} className={classes.tld}>\r\n                        <span>{d.name}</span>\r\n                        <b\r\n                          onClick={() =>\r\n                            this.deleteTldHandler(d.id, 'prefixList')\r\n                          }\r\n                        >\r\n                          x\r\n                        </b>\r\n                      </div>\r\n                    ))}\r\n                  {this.state.prefixList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('prefixList')}\r\n                    >\r\n                      Clear all ({this.state.prefixList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.PrefixInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='prefix'\r\n                    value={this.state.prefix}\r\n                    placeholder='Enter a tab separated list of prefixes'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'prefixList', 'prefix')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.PrefixCont}>\r\n                <p className={classes.Header}>Suffixes</p>\r\n                <div className={classes.SuffixListCont}>\r\n                  {this.state.suffixList.length > 0 &&\r\n                    this.state.suffixList.map(d => (\r\n                      <div key={d.id} className={classes.tld}>\r\n                        <span>{d.name}</span>\r\n                        <b\r\n                          onClick={() =>\r\n                            this.deleteTldHandler(d.id, 'suffixList')\r\n                          }\r\n                        >\r\n                          x\r\n                        </b>\r\n                      </div>\r\n                    ))}\r\n                  {this.state.suffixList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('suffixList')}\r\n                    >\r\n                      Clear all ({this.state.suffixList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.PrefixInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='suffix'\r\n                    value={this.state.suffix}\r\n                    placeholder='Enter a tab separated list of suffixes'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'suffixList', 'suffix')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.Right}>\r\n              <div className={classes.TLDs}>\r\n                <div className={classes.ListOfTlds}>\r\n                  {this.state.tldList.map(t => (\r\n                    // <React.Fragment>\r\n                    <div key={t.id} className={classes.tld}>\r\n                      <span>{t.name}</span>\r\n                      <b onClick={() => this.deleteTldHandler(t.id, 'tldList')}>\r\n                        x\r\n                      </b>\r\n                    </div>\r\n                    // </React.Fragment>\r\n                  ))}\r\n                  {this.state.tldList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('tldList')}\r\n                    >\r\n                      Clear all ({this.state.tldList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.TLDInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='tldInput'\r\n                    value={this.state.tldInput}\r\n                    placeholder='Enter a tab separated list of TLDs'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'tldList', 'tldInput')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.GenerateCont}>\r\n            <button\r\n              onClick={this.generate}\r\n              disabled={\r\n                this.state.domainsList.length <= 0 ||\r\n                this.state.tldList.length <= 0\r\n              }\r\n            >\r\n              Generate\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.isFetching ? (\r\n          <div className=''>\r\n            <Spinner />\r\n          </div>\r\n        ) : null}\r\n        {this.state.error.length > 0 ? (\r\n          <p style={{ textAlign: 'center', color: 'red' }}>\r\n            {this.state.error[0].msg}\r\n          </p>\r\n        ) : null}\r\n\r\n        {/* TWO DOMAINS SAGA */}\r\n        <div className={classes.TwoDomainsConts}>\r\n          <div className={classes.FirstDomainsCont}>\r\n            {this.state.listOfFoundDomains.length > 0 &&\r\n              this.state.listOfFoundDomains.map(d => {\r\n                return (\r\n                  <SingleDomain\r\n                    l={d}\r\n                    deleteSingle={() =>\r\n                      this.deleteSingleHandler('listOfFoundDomains', d.domain)\r\n                    }\r\n                    purchaseHandler={this.purchaseHandler}\r\n                    forwardingChangeHandler={this.forwardingChangeHandler}\r\n                    forwardURL={d.forwardURL}\r\n                    forwardingHandler={this.forwardingHandler}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className={classes.BulkForwardCont}>\r\n            <div className={classes.Right}>\r\n              <button onClick={this.clearAllDownloadFile}>Clear All</button>\r\n              <button onClick={this.downloadForwards}>\r\n                Download domain and Forwards\r\n              </button>\r\n            </div>\r\n            {this.state.listOfFoundDomains.length > 0 ||\r\n            this.state.listOfSelectedDomains.length > 0 ? (\r\n              <div className={classes.EnterForwardingDetails}>\r\n                {/* Text to show after generation */}\r\n\r\n                <p>Bulk Forward Controller</p>\r\n\r\n                <div className={classes.Right}>\r\n                  <input\r\n                    type='number'\r\n                    name='numberToBulkForward'\r\n                    value={this.state.numberToBulkForward}\r\n                    onChange={this.changedHandler}\r\n                    placeholder='Enter Number of Links to Bulk Purchase and Forward'\r\n                  />\r\n                </div>\r\n                {/* {this.state.numberToBulkForward ? ( */}\r\n                <div className={classes.Right}>\r\n                  <button\r\n                    disabled={\r\n                      !this.state.numberToBulkForward ||\r\n                      this.state.listOfFoundDomains.length +\r\n                        this.state.listOfSelectedDomains.length <\r\n                        this.state.numberToBulkForward\r\n                    }\r\n                    onClick={this.domainsShuffleHandler}\r\n                  >\r\n                    keep {this.state.numberToBulkForward} domains in bulk Box\r\n                  </button>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </div>\r\n            ) : null}\r\n            <div className={classes.Right}>\r\n              {!this.state.isFetching &&\r\n              this.state.listOfSelectedDomains.length > 0 ? (\r\n                <div className={classes.TwoWorkers}>\r\n                  {!this.state.bulkForwardFinsh ? (\r\n                    <div className={classes.Right}>\r\n                      <input\r\n                        type='text'\r\n                        name='bulkForwardingURL'\r\n                        value={this.state.bulkForwardingURL}\r\n                        onChange={this.bulkForwardChangeURL}\r\n                        placeholder='Please enter a forwarding URL for all the generated domains'\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.state.bulkForwardFinsh ? null : this.state\r\n                  .listOfSelectedDomains.length > 0 &&\r\n                !this.state.isFetching ? (\r\n                <button\r\n                  onClick={this.bulkPurchaseAndForward}\r\n                  disabled={!this.state.bulkForwardingURL}\r\n                >\r\n                  Purchase and forward all\r\n                </button>\r\n              ) : null}\r\n            </div>\r\n            {this.state.listOfSelectedDomains.length > 0 &&\r\n              this.state.listOfSelectedDomains.map(d => {\r\n                return (\r\n                  <SingleDomain\r\n                    l={d}\r\n                    deleteSingle={() =>\r\n                      this.deleteSingleHandler(\r\n                        'listOfSelectedDomains',\r\n                        d.domain\r\n                      )\r\n                    }\r\n                    selected\r\n                    purchaseHandler={this.purchaseHandler}\r\n                    forwardingChangeHandler={this.forwardingChangeHandler}\r\n                    forwardURL={d.forwardURL}\r\n                    forwardingHandler={this.forwardingHandler}\r\n                  />\r\n                );\r\n              })}\r\n            {this.state.listOfSelectedDomains.length <= 0 &&\r\n            this.state.listOfFoundDomains.length <= 0 ? (\r\n              <div>\r\n                {/* Text to show at the start of the generation process */}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NamecheapForward;\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './blacklist.module.css';\r\nimport axios from 'axios';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nclass BLA extends Component {\r\n  state = {\r\n    fileName: '',\r\n    traffic: '',\r\n    dataowner: '',\r\n    reasons: {},\r\n    loading: false,\r\n    socket: socketIOClient(GLOBAL.blacklist),\r\n    percentageDone: 0,\r\n    arrayOfScrubs: [\r\n      {\r\n        suppressionCount: 0,\r\n        duplicateCount: 0,\r\n        // suppressionWithReasons: {},\r\n        filename: `a.csv_blacklist_result.csv`,\r\n        'CELLCO PARTNERSHIP DBA VERIZON': 0,\r\n        'SUNCOM DBA T-MOBILE USA': 0,\r\n        'NEW CINGULAR WIRELESS PCS- LLC': 0,\r\n        // verizon: 0,\r\n        // tMobile: 0,\r\n        // att: 0,\r\n        // wireless: 0,\r\n        // landline: 0,\r\n        'SPRINT SPECTRUM L.P.': 0,\r\n        'USA MOBILITY WIRELESS- INC.': 0\r\n      }\r\n    ]\r\n  };\r\n  componentDidMount() {\r\n    const { socket, arrayOfScrubs } = this.state;\r\n    socket.on('finalCount', data => {\r\n      this.setState({ arrayOfScrubs: [data, ...arrayOfScrubs] });\r\n    });\r\n    socket.on('percentageDone', data => {\r\n      this.setState({ percentageDone: data });\r\n    });\r\n    socket.on('reasons', data => {\r\n      this.setState({ reasons: data });\r\n    });\r\n  }\r\n\r\n  downloadHandler = async name => {\r\n    const response = await axios.get(\r\n      `${GLOBAL.blacklist}/downloadnew?q=${name}`\r\n    );\r\n    // console.log(response.data);\r\n    // if (response.data.status === 200) {\r\n    var blob = new Blob([response.data], {\r\n      type: 'text/plain'\r\n    }); // console.log(doc);\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `${name}`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // }\r\n  };\r\n  handleFileUpload = e => {\r\n    let myevent = e;\r\n    console.log(e.target.files[0].name);\r\n    let name = e.target.files[0].name;\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.blacklist}/api/upload`, data)\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          fileName: name,\r\n          loading: false,\r\n          error: ''\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        console.log(e.response);\r\n        this.setState({ loading: false, error: 'error in file upload' });\r\n      });\r\n  };\r\n  scrub = () => {\r\n    if (this.state.fileName) {\r\n      this.state.socket.emit('scrub', {\r\n        filename: this.state.fileName,\r\n        traffic: this.state.traffic,\r\n        dataowner: this.state.dataowner\r\n      });\r\n    }\r\n  };\r\n  changeHandler = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.BLA}>\r\n          <div className={classes.Options}>\r\n            <div className={classes.Traffic}>\r\n              <select\r\n                name=''\r\n                value={this.state.traffic}\r\n                id='traffic'\r\n                onChange={this.changeHandler}\r\n              >\r\n                <option value=''>--- Select Vertical ---</option>\r\n                <option value='ED'>ED</option>\r\n                <option value='CASH FOR HOMES'>CASH FOR HOMES</option>\r\n                {/* <option value=\"\"></option> */}\r\n              </select>\r\n            </div>\r\n            <div className={classes.DataOwner}>\r\n              <input\r\n                onChange={this.changeHandler}\r\n                value={this.state.dataowner}\r\n                type='text'\r\n                id='dataowner'\r\n                placeholder='Enter Data Owner'\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.fileUpload}>\r\n              <label htmlFor='blist'>Upload file</label>:{' '}\r\n              <span>\r\n                {this.state.loading ? 'uploading' : this.state.fileName}\r\n              </span>\r\n              <input onChange={this.handleFileUpload} type='file' id='blist' />\r\n            </div>\r\n            <div className={classes.Scrub}>\r\n              <button onClick={this.scrub}>Scrub</button>\r\n              <span> {this.state.percentageDone}%</span>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.arrayOfScrubs &&\r\n            this.state.arrayOfScrubs.map(m => {\r\n              return (\r\n                <div className={[classes.Options, classes.isColumn].join(' ')}>\r\n                  {Object.keys(m).map(d => {\r\n                    return (\r\n                      <p>\r\n                        {d}: {m[d]}\r\n                      </p>\r\n                    );\r\n                  })}\r\n                  <div className={classes.Scrub}>\r\n                    <button\r\n                      className={classes.Right}\r\n                      onClick={() => this.downloadHandler(m.filename)}\r\n                    >\r\n                      Download File\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BLA;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineAccountThree.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '1234567890',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint:\r\n      process.env.NODE_ENV === 'production'\r\n        ? 'https://athree.powersms.land'\r\n        : GLOBAL.domainpineaccountthree,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    totalCount: 0,\r\n    rejectedCount: 0,\r\n    noRouteCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    socket: socketIOClient(\r\n      process.env.NODE_ENV === 'production'\r\n        ? 'https://athree.powersms.land'\r\n        : GLOBAL.domainpineaccountthree\r\n    ),\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    let isPause = localStorage.getItem('pauseAcct3');\r\n    let sendingFileName = localStorage.getItem('isSendingAcct3');\r\n    let totalNumberState = localStorage.getItem('totalNumberAcct3');\r\n\r\n    if (isPause === '1') {\r\n      // if the local storage state is on pause\r\n      this.setState({ isPaused: true });\r\n    }\r\n    if (sendingFileName) {\r\n      this.setState({ file: sendingFileName, isStarted: true });\r\n    }\r\n    if (totalNumberState) {\r\n      this.setState({ totalCount: totalNumberState });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpineaccountthree}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          speed,\r\n\r\n          messageCount\r\n          // noRouteCount\r\n        } = data;\r\n\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          speed,\r\n          sentStatus,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const { socket } = this.state;\r\n        socket.connect();\r\n        socket.on('totalNumber', totalNumber => {\r\n          this.setState({ totalCount: totalNumber });\r\n          localStorage.setItem('totalNumberAcct3', totalNumber);\r\n        });\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('NO ROUTES', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              noRouteCount: prevState.noRouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n          localStorage.removeItem('isSendingAcct3');\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          localStorage.setItem('pauseAcct3', '1');\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          localStorage.removeItem('isSendingAcct3');\r\n          localStorage.removeItem('pauseAcct3');\r\n          localStorage.removeItem('totalNumberAcct3');\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    localStorage.removeItem('totalNumberAcct3');\r\n\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      noRouteCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      noRouteCount: 0,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      noRouteCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountthree}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint, {transports: ['websocket']});\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const { socket } = this.state;\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpineaccountthree}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const { socket } = this.state;\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n      localStorage.setItem('isSendingAcct3', this.state.file);\r\n      localStorage.removeItem('pauseAcct3');\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const { socket } = this.state;\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n    localStorage.setItem('isSendingAcct3', this.state.file);\r\n    localStorage.removeItem('pauseAcct3');\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const { socket } = this.state;\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const { socket } = this.state;\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            {this.state.isStarted && this.state.sentCount > 0 ? (\r\n              <p>{this.numberWithCommas(this.state.totalCount)} sends left</p>\r\n            ) : null}\r\n          </div>\r\n          {/* <div className={classes.sentCount}>\r\n          \r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div> */}\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.noRouteCount)} NR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const { socket } = this.state;\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountThree\r\n          autoRotate\r\n          goToAccountFunc={() => this.props.history.push('/pineapple')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-2')\r\n          }\r\n          autoRotateClickFunction={() =>\r\n            this.props.history.push('/snapshots-2way-1')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const { socket } = this.state;\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../../containers/GLOBAL/GLOBAL';\r\n// import App from '../../App';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\nexport const authCheckStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_CHECK_START\r\n  };\r\n};\r\n\r\nexport const tellUserToVerify = () => {\r\n  return {\r\n    type: actionTypes.TELL_USER_TO_VERIFY\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, _id, fullName, email, authSuccessReload) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    _id,\r\n    fullName,\r\n    email,\r\n    authSuccessReload: authSuccessReload ? authSuccessReload : false\r\n    // userId: userId\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\nexport const authError = errorArray => {\r\n  return {\r\n    type: actionTypes.AUTH_ERROR,\r\n    errorArray\r\n  };\r\n};\r\nexport const toggleAuthModalAction = () => {\r\n  return {\r\n    type: actionTypes.SHOW_AUTH_MODAL\r\n  };\r\n};\r\nexport const setAuthModalToTrue = () => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_MODAL_TO_TRUE\r\n  };\r\n};\r\n\r\nexport const authLogOut = reload => {\r\n  localStorage.removeItem('token');\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n    reload\r\n  };\r\n};\r\n\r\nexport const authExpires = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(authLogOut());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\n// export const auth = (email, password, fullName, isSignin, phoneNumber) => {\r\n//   return dispatch => {\r\n//     dispatch(authStart());\r\n\r\n//     let authData;\r\n//     let url;\r\n//     if (isSignin) {\r\n//       authData = {\r\n//         email: email,\r\n//         password: password\r\n//       };\r\n//       url = `${App.domain}api/userauth/`;\r\n//     } else {\r\n//       authData = {\r\n//         email,\r\n//         fullName,\r\n//         password,\r\n//         phoneNumber\r\n//       };\r\n//       url = `${App.domain}api/users/`;\r\n//     }\r\n\r\n//     axios\r\n//       .post(url, authData)\r\n//       .then(response => {\r\n//         const { errors } = response.data;\r\n//         if (errors) {\r\n//           // throw new Error()\r\n//           return dispatch(authFail(response.data.errors));\r\n//         }\r\n//         if (isSignin) {\r\n//           const { token, _id, fullName, email, avatar } = response.data;\r\n\r\n//           if (token) {\r\n//             localStorage.setItem('token', token);\r\n//             dispatch(authSuccess(token, _id, fullName, email, avatar, true));\r\n//           }\r\n//         } else {\r\n//           if (response.data.timeToVerifyUser) {\r\n//             dispatch(tellUserToVerify());\r\n//           }\r\n//         }\r\n//       })\r\n\r\n//       .catch(error => {\r\n//         if (error.response === undefined)\r\n//           return dispatch(authFail([{ msg: 'server Error' }]));\r\n//         // console.log(error.response.data);\r\n//         if (error.response.data.errors) {\r\n//           dispatch(authFail(error.response.data.errors));\r\n//         }\r\n//         if (error.response.data.notConfirmed) {\r\n//           dispatch(setRedirectToEmailVerificationPage());\r\n//         }\r\n//       });\r\n//   };\r\n// };\r\n\r\n// const setRedirectToEmailVerificationPage = () => {\r\n//   return {\r\n//     type: actionTypes.SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE\r\n//   };\r\n// };\r\n\r\n// export const setAuthRedirectPath = path => {\r\n//   return {\r\n//     type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n//     path: path\r\n//   };\r\n// };\r\n\r\n// export const authCheckBeforeOp = () => {\r\n//   return dispatch => {\r\n//     // dispatch(authCheckBeforeOpStart());\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       dispatch(authLogOut());\r\n//       dispatch(authFail(''));\r\n//     } else {\r\n//       let config = {\r\n//         headers: {\r\n//           'x-auth-token': token\r\n//         }\r\n//       };\r\n//       let url = `${App.domain}api/auth/auto`;\r\n//       axios\r\n//         .get(url, config)\r\n//         .then(response => {\r\n//           // console.log(response.data);\r\n//           if (response.data === null) {\r\n//             dispatch(authLogOut());\r\n//             dispatch(authFail(''));\r\n//             return;\r\n//           }\r\n//           const { email, _id, fullName, avatar } = response.data;\r\n//           setTimeout(() => {\r\n//             dispatch(authSuccess(token, _id, fullName, email, avatar));\r\n//           }, 500);\r\n//         })\r\n\r\n//         .catch(error => {\r\n//           // console.log(error.response.data);\r\n//           if (error.response.data.msg) {\r\n//             dispatch(authLogOut());\r\n//             dispatch(authFail(''));\r\n//           }\r\n//         });\r\n//     }\r\n//   };\r\n// };\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    dispatch(authCheckStart());\r\n    setTimeout(() => {\r\n      console.log('I am starting');\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        dispatch(authLogOut());\r\n        dispatch(authFail(''));\r\n      } else {\r\n        let config = {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        };\r\n        let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n        axios\r\n          .get(url, config)\r\n          .then(response => {\r\n            const { _id, fullName } = response.data;\r\n            console.log(response.data);\r\n            setTimeout(() => {\r\n              dispatch(authSuccess(token, _id, fullName));\r\n            }, 1000);\r\n          })\r\n\r\n          .catch(error => {\r\n            console.log(error, 'error');\r\n            if (error.response && error.response.data.msg) {\r\n              dispatch(authLogOut());\r\n\r\n              dispatch(authFail(''));\r\n            }\r\n          });\r\n      }\r\n    }, 2000);\r\n  };\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_CHECK_START = 'AUTH_CHECK_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\nexport const SHOW_AUTH_MODAL = 'SHOW_AUTH_MODAL';\r\nexport const SET_AUTH_MODAL_TO_TRUE = 'SET_AUTH_MODAL_TO_TRUE';\r\nexport const AUTH_CHECK_BEFORE_AUTH = 'AUTH_CHECK_BEFORE_AUTH';\r\nexport const TELL_USER_TO_VERIFY = 'TELL_USER_TO_VERIFY';\r\nexport const SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE =\r\n  'SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE';\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './Auth.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { authSuccess } from '../../store/actions/auth';\r\nclass Auth extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    errors: []\r\n  };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.type]: e.target.value });\r\n  };\r\n  submitHandler = () => {\r\n    this.setState({ errors: [] });\r\n    axios\r\n      .post(`${GLOBAL.domainNameCheap}/api/auth`, {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        localStorage.setItem('token', res.data.token);\r\n\r\n        // this.props.history.push('/');\r\n        this.props.signin(\r\n          res.data.token,\r\n          res.data._id,\r\n          res.data.fullName,\r\n          res.data.email,\r\n          true\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({ errors: err.response.data.errors });\r\n      });\r\n  };\r\n  render() {\r\n    console.log(this.props.isAuthenticated);\r\n    return (\r\n      <Layout isAuthPage>\r\n        {this.props.isAuthenticated ? (\r\n          <span style={{ color: 'white', position: 'absolute' }}>\r\n            }{(document.location.href = '/')}\r\n          </span>\r\n        ) : (\r\n          'd'.includes('d')\r\n        )}\r\n        <div className={classes.Auth}>\r\n          {this.state.errors &&\r\n            this.state.errors.map(e => {\r\n              return (\r\n                <p\r\n                  key={e.msg}\r\n                  style={{\r\n                    color: 'red',\r\n                    margin: '0px',\r\n                    padding: '0px',\r\n                    fontSize: '15px'\r\n                  }}\r\n                >\r\n                  {e.msg}\r\n                </p>\r\n              );\r\n            })}\r\n          <p>Sign In</p>\r\n          <div className={classes.FormCont}>\r\n            <input\r\n              type='email'\r\n              placeholder='Enter your email'\r\n              onChange={this.changeHandler}\r\n              value={this.state.email}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') this.submitHandler();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.FormCont}>\r\n            <input\r\n              type='password'\r\n              placeholder='Enter your password'\r\n              onChange={this.changeHandler}\r\n              value={this.state.password}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') this.submitHandler();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.FormCont}>\r\n            <button onClick={this.submitHandler}>Sign in</button>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = d => {\r\n  return {\r\n    signin: (token, _id, fullName, email, authSuccessReload) =>\r\n      d(authSuccess(token, _id, fullName, email, authSuccessReload))\r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Auth));\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineappleHome.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    fullName: '',\r\n    pages: [\r\n      {\r\n        name: 'Fresh data 2way Account 1',\r\n        link: '/pineapple'\r\n      },\r\n      {\r\n        name: 'Fresh data 2way Account 2',\r\n        link: '/freshdata-2way-2'\r\n      },\r\n      {\r\n        name: 'Fresh data 2way Account 3',\r\n        link: '/freshdata-2way-3'\r\n      },\r\n      {\r\n        name: 'Buy Domain and Forward domains with the Namecheap API',\r\n        link: '/namecheap'\r\n      },\r\n      {\r\n        name: 'Scrub for mobiles with the Blacklist API',\r\n        link: '/blacklist'\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.Home}>\r\n          <div className={classes.UserDetails}>\r\n            {/* <p>Hi {this.state.fullName.split(' ')[0]}!</p> */}\r\n          </div>\r\n          <div className={classes.Pages}>\r\n            {this.state.pages.map(p => {\r\n              return (\r\n                <div key={p.name} className={classes.page}>\r\n                  <p onClick={() => window.open(p.link, '_blank')}>{p.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './D7.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '12234567789',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domain,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    totalCount: 0,\r\n    rejectedCount: 0,\r\n    noRouteCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            console.log(error.response.data.msg);\r\n          }\r\n        });\r\n    }\r\n    // get the file sending state\r\n    let isPause = localStorage.getItem('pauseD7');\r\n    let sendingFileName = localStorage.getItem('isSendingD7');\r\n    let totalNumberState = localStorage.getItem('totalNumberD7');\r\n\r\n    if (isPause === '1') {\r\n      // if the local storage state is on pause\r\n      this.setState({ isPaused: true });\r\n    }\r\n    if (sendingFileName) {\r\n      this.setState({ file: sendingFileName, isStarted: true });\r\n    }\r\n    if (totalNumberState) {\r\n      this.setState({ totalCount: totalNumberState });\r\n    }\r\n    axios.get(`${GLOBAL.domain}/api/checkForFileExistence`).then(({ data }) => {\r\n      this.setState({ loading: false });\r\n      console.log(data, 'data');\r\n      if (data.exists) {\r\n        this.setState({ downloadableCSV: data.exists });\r\n      }\r\n      console.log(data);\r\n\r\n      const { messageCount } = data;\r\n      this.setState({ sentCount: messageCount });\r\n      console.log('Once');\r\n      const socket = socketIOClient(this.state.endpoint);\r\n      socket.connect();\r\n      socket.on('totalNumber', totalNumber => {\r\n        this.setState({ totalCount: totalNumber });\r\n        localStorage.setItem('totalNumberD7', totalNumber);\r\n      });\r\n      socket.on('DELIVRD', _ => {\r\n        this.setState(prevState => {\r\n          return {\r\n            deliveredCount: prevState.deliveredCount + 1\r\n          };\r\n        });\r\n      });\r\n      socket.on('NO ROUTES', _ => {\r\n        this.setState(prevState => {\r\n          return {\r\n            noRouteCount: prevState.noRouteCount + 1\r\n          };\r\n        });\r\n      });\r\n      socket.on('suppressionCount', _ => {\r\n        this.setState(prevState => {\r\n          return {\r\n            suppressionCount: _\r\n          };\r\n        });\r\n      });\r\n      socket.on('duplicateCount', _ => {\r\n        this.setState(prevState => {\r\n          return {\r\n            duplicateCount: _\r\n          };\r\n        });\r\n      });\r\n\r\n      socket.on('REJECTD', _ => {\r\n        this.setState(prevState => {\r\n          return {\r\n            rejectedCount: prevState.rejectedCount + 1\r\n          };\r\n        });\r\n      });\r\n      socket.on('UNDELIV', _ => {\r\n        this.setState(prevState => {\r\n          return {\r\n            unDeliveredCount: prevState.unDeliveredCount + 1\r\n          };\r\n        });\r\n      });\r\n\r\n      socket.on('stop', data => {\r\n        if (data) {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false\r\n          });\r\n        }\r\n      });\r\n      socket.on('operationComplete', data => {\r\n        console.log('it is complete now');\r\n        this.setState({\r\n          isStarted: false,\r\n          isPaused: false,\r\n          isDoneSending: true,\r\n          file: null\r\n        });\r\n        localStorage.removeItem('isSendingD7');\r\n      });\r\n      socket.on('sent', data => {\r\n        // localStorage.setItem('totalNumberD7', this.state.totalCount - data);\r\n\r\n        this.setState({\r\n          sentCount: parseInt(this.state.sentCount) + data\r\n          // totalCount: this.state.totalCount - data\r\n        });\r\n      });\r\n      socket.on('pauseDone', data => {\r\n        localStorage.setItem('pauseD7', '1');\r\n        localStorage.removeItem('totalNumberD7');\r\n\r\n        this.setState({\r\n          isPaused: true,\r\n          downloadableCSV: data,\r\n          loading: false\r\n        });\r\n        // socket.disconnect();\r\n      });\r\n      socket.on('processKilled', data => {\r\n        this.setState({\r\n          isStarted: false,\r\n          isPaused: false,\r\n          isDoneSending: false,\r\n          file: null\r\n        });\r\n        localStorage.removeItem('isSendingD7');\r\n        localStorage.removeItem('pauseD7');\r\n        localStorage.removeItem('totalNumberD7');\r\n      });\r\n    });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    localStorage.removeItem('totalNumberD7');\r\n\r\n    const { sentCount } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false\r\n    });\r\n    const data = {\r\n      sentCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domain}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domain}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: true,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n      localStorage.setItem('isSendingD7', this.state.file);\r\n      localStorage.removeItem('pauseD7');\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n    if (this.state.file) {\r\n      socket.emit('start', {\r\n        filename: this.state.file,\r\n        withLeadingOne: true,\r\n        ani: '1234456789'\r\n      });\r\n      localStorage.setItem('isSendingD7', this.state.file);\r\n      localStorage.removeItem('pauseD7');\r\n    }\r\n  };\r\n\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {/* {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null} */}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            {/* {this.state.isDoneSending ? <p>Sending Complete</p> : null} */}\r\n            {this.state.isStarted && this.state.sentCount > 0 ? (\r\n              <p>{this.numberWithCommas(this.state.totalCount)} sends left</p>\r\n            ) : null}\r\n          </div>\r\n\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          // accountOne\r\n          autoRotate\r\n          // goToAccountFunc={() => this.props.history.push('/freshdata-2way-2')}\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React from 'react';\r\nimport './LoadingPage.css';\r\nexport default function LoadingPage() {\r\n  return (\r\n    <div className='LoadingPageContainer'>\r\n      <div className='lds-css ng-scope'>\r\n        <div style={{ width: '100%', height: '100%' }} className='lds-ellipsis'>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport { Switch, Route, BrowserRouter, withRouter } from 'react-router-dom';\n// import logo from './logo.svg';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Home from './containers/Home/Home';\nimport HomeDev from './containers/HomeDev/HomeDev';\nimport PauseScreen from './containers/PauseScreen/PauseScreen';\nimport Pine from './containers/Pine/Pine';\nimport PineAccountTwo from './containers/PineAccountTwo/PineAccountTwo';\nimport Snapshots from './containers/Snapshots/Snapshots';\nimport NamecheapForward from './containers/NamecheapForward/NamecheapForward';\nimport BLA from './containers/BLA/BLA';\nimport PineAccountThree from './containers/PineAccountThree/PineAccountThree';\nimport Auth from './containers/Auth/Auth';\nimport PineappleHome from './containers/PineappleHome/PineappleHome';\nimport D7 from './containers/D7/D7';\nimport { authCheckState } from './store/actions/auth';\n// import Test from './containers/Test/Test';\nimport LoadingPage from './components/LoadingPage/LoadingPage';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignIn();\n  }\n  render() {\n    let appRoute = (\n      <div className='App'>\n        <Switch>\n          <Route path='/' exact={true} component={Home} />\n          {/* <Route path='/test' exact={true} component={Test} /> */}\n          <Route path='/pause-screen' exact={true} component={PauseScreen} />\n          <Route path='/mobiniti' exact={true} component={HomeDev} />\n          <Route path='/pineapple' exact={true} component={Pine} />\n          <Route path='/d7' exact={true} component={D7} />\n\n          <Route\n            path='/pineapple-home'\n            exact={true}\n            component={PineappleHome}\n          />\n          <Route path='/namecheap' exact={true} component={NamecheapForward} />\n          <Route path='/blacklist' exact={true} component={BLA} />\n          <Route\n            path='/freshdata-2way-2'\n            exact={true}\n            component={PineAccountTwo}\n          />\n          <Route\n            path='/freshdata-2way-3'\n            exact={true}\n            component={PineAccountThree}\n          />\n          <Route path='/snapshots-2way-1' exact={true} component={Snapshots} />\n          <Route path='/auth' exact={true} component={Auth} />\n          {/* <Route\n        path='/snapshot-freshdata'\n        exact={true}\n        component={PineAccountTwo}\n      /> */}\n          {/* <Home /> */}\n        </Switch>\n      </div>\n    );\n    return this.props.authCheck ? <LoadingPage /> : appRoute;\n  }\n}\nconst mapStateToProps = state => {\n  // console.log(state, 'from App.js');\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authCheck: state.auth.authCheckLoading\n    // productAddSuccess: state.prod.showSuccessTag\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignIn: () => dispatch(authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst updateObject = (state, updatedProperties) => {\r\n  return {\r\n    ...state,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authCheckLoading: false,\r\n  authRedirectPath: null,\r\n  _id: null,\r\n  firstLoad: 0,\r\n  fullName: null,\r\n  email: null,\r\n  avatar: null,\r\n  authCheckBeforeOpLoading: false,\r\n  authSuccessReload: false,\r\n  tellUserToVerify: false,\r\n  showAuthModal: false,\r\n  redirectToEmailVerificationPage: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true,\r\n    token: null,\r\n    _id: null,\r\n    fullName: null,\r\n    email: null,\r\n    authCheckBeforeOpLoading: false,\r\n    avatar: null\r\n  });\r\n};\r\nconst authCheckStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    authCheckLoading: true,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst authCheckBeforeOpStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    authCheckBeforeOpLoading: true,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    authCheckLoading: false,\r\n    error: null,\r\n    firstLoad: 1,\r\n    token: action.idToken,\r\n    _id: action._id,\r\n    fullName: action.fullName,\r\n    email: action.email,\r\n    // avatar: action.avatar,\r\n    authCheckBeforeOpLoading: false,\r\n    authSuccessReload: action.authSuccessReload\r\n  });\r\n};\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    authCheckLoading: false,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1,\r\n    error: action.error\r\n  });\r\n};\r\n\r\nconst authLogOut = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    error: null,\r\n    firstLoad: 1,\r\n    authSuccessReload: action.reload,\r\n    authCheckBeforeOpLoading: false,\r\n\r\n    token: null,\r\n    _id: null,\r\n    fullName: null,\r\n    email: null,\r\n    avatar: null\r\n  });\r\n};\r\nconst toggleAuthModal = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    showAuthModal: !state.showAuthModal,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst setAuthModalToTrue = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    showAuthModal: true,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return updateObject(state, {\r\n    authRedirectPath: action.path,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst tellUserToVerify = (state, action) => {\r\n  return updateObject(state, {\r\n    tellUserToVerify: true\r\n  });\r\n};\r\nconst setRedirectToEmailVerificationPage = (state, action) => {\r\n  return updateObject(state, {\r\n    redirectToEmailVerificationPage: true\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_CHECK_BEFORE_AUTH:\r\n      return authCheckBeforeOpStart(state, action);\r\n    case actionTypes.AUTH_CHECK_START:\r\n      return authCheckStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogOut(state, action);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action);\r\n    case actionTypes.SHOW_AUTH_MODAL:\r\n      return toggleAuthModal(state, action);\r\n    case actionTypes.SET_AUTH_MODAL_TO_TRUE:\r\n      return setAuthModalToTrue(state, action);\r\n    case actionTypes.TELL_USER_TO_VERIFY:\r\n      return tellUserToVerify(state, action);\r\n    case actionTypes.SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE:\r\n      return setRedirectToEmailVerificationPage(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport authReducer from './reducers/auth';\r\n// import NotificationsReducer from './reducers/notifications';\r\n// import cartReducer from './reducers/cart';\r\nimport thunk from 'redux-thunk';\r\nconst rootReducer = combineReducers({\r\n  // cart: cartReducer,\r\n  auth: authReducer\r\n  // notification: NotificationsReducer\r\n});\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === 'development'\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/createdStore';\n\nimport { Provider } from 'react-redux';\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"D7_CallerId__1nkJG\",\"DPerc\":\"D7_DPerc__E1xlP\",\"percCont\":\"D7_percCont__h7bCr\",\"OptionButton\":\"D7_OptionButton__3TXH0\",\"PausedCont\":\"D7_PausedCont__1825m\",\"rotate90\":\"D7_rotate90__2Pheo\",\"FileCont\":\"D7_FileCont__2AcIe\",\"FormBody\":\"D7_FormBody__1vsod\",\"filesCont\":\"D7_filesCont__jkzZm\",\"PhoneAndMessage\":\"D7_PhoneAndMessage__3JL0I\",\"loading\":\"D7_loading__3DcQp\",\"Container\":\"D7_Container__3wnJR\",\"Submit\":\"D7_Submit__3WMRq\",\"OptionAddCont\":\"D7_OptionAddCont__NGFpJ\",\"withOrWithoutOne\":\"D7_withOrWithoutOne__2L2Z9\",\"SpeedControl\":\"D7_SpeedControl__1Jg7T\",\"slider\":\"D7_slider__2Gcx5\",\"sentCount\":\"D7_sentCount__C6lnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentCount\":\"Snapshots_sentCount__3uFai\",\"Row\":\"Snapshots_Row__3j1oT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Options\":\"blacklist_Options__Xj3en\",\"fileUpload\":\"blacklist_fileUpload__30Xcb\",\"Scrub\":\"blacklist_Scrub__23sid\",\"Traffic\":\"blacklist_Traffic__h7pmu\",\"DataOwner\":\"blacklist_DataOwner__3Aekx\",\"isColumn\":\"blacklist_isColumn__-_Iss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleDomain\":\"SingleDomain_SingleDomain__O9Sou\",\"Name\":\"SingleDomain_Name__1HABg\",\"successForwarding\":\"SingleDomain_successForwarding__3PFI2\",\"forwardCont\":\"SingleDomain_forwardCont__3AgaV\",\"Right\":\"SingleDomain_Right__1qQVb\",\"atTop\":\"SingleDomain_atTop__p9TNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputCont\":\"PauseScreen_InputCont__2dzxO\",\"PauseScreen\":\"PauseScreen_PauseScreen__3N-G-\",\"Submit\":\"PauseScreen_Submit__1gjMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__QKusg\",\"snap\":\"Layout_snap__31qan\",\"Header\":\"Layout_Header__3eCmQ\",\"settings\":\"Layout_settings__5oZAM\",\"liveStatus\":\"Layout_liveStatus__1e-0S\",\"logo\":\"Layout_logo__AO5KA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"PineAccountTwo_CallerId__275Eu\",\"OptionButton\":\"PineAccountTwo_OptionButton__2XoSY\",\"DPerc\":\"PineAccountTwo_DPerc__2Ef9-\",\"percCont\":\"PineAccountTwo_percCont__2rKs4\",\"PausedCont\":\"PineAccountTwo_PausedCont__21Xkt\",\"rotate90\":\"PineAccountTwo_rotate90__1i5xy\",\"FileCont\":\"PineAccountTwo_FileCont__1IEXS\",\"FormBody\":\"PineAccountTwo_FormBody__1yI1k\",\"filesCont\":\"PineAccountTwo_filesCont__ohN1-\",\"PhoneAndMessage\":\"PineAccountTwo_PhoneAndMessage__TqlJi\",\"loading\":\"PineAccountTwo_loading__3u7ri\",\"Container\":\"PineAccountTwo_Container__1w8tZ\",\"Submit\":\"PineAccountTwo_Submit__3artT\",\"OptionAddCont\":\"PineAccountTwo_OptionAddCont__1PIY7\",\"withOrWithoutOne\":\"PineAccountTwo_withOrWithoutOne__23ZMz\",\"SpeedControl\":\"PineAccountTwo_SpeedControl__IKSvk\",\"slider\":\"PineAccountTwo_slider__1b5cR\",\"sentCount\":\"PineAccountTwo_sentCount__2EsmB\",\"DropArea\":\"PineAccountTwo_DropArea__2hXRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Home_page__o6S6k\",\"UserDetails\":\"Home_UserDetails__34sCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__27P_s\",\"FormCont\":\"Auth_FormCont__2T8JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"PineappleHome_page__1HJoO\",\"UserDetails\":\"PineappleHome_UserDetails__2UsEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BeastModeCont\":\"NamecheapForward_BeastModeCont__173hQ\",\"domainInputCont\":\"NamecheapForward_domainInputCont__17aPh\",\"PriceTLD\":\"NamecheapForward_PriceTLD__GftAk\",\"PriceControl\":\"NamecheapForward_PriceControl__nDEnD\",\"Right\":\"NamecheapForward_Right__blSF5\",\"TLDs\":\"NamecheapForward_TLDs__1enhH\",\"TLDInputCont\":\"NamecheapForward_TLDInputCont__1PZ2g\",\"PrefixInputCont\":\"NamecheapForward_PrefixInputCont__2tH28\",\"ListOfTlds\":\"NamecheapForward_ListOfTlds__rQ8go\",\"tld\":\"NamecheapForward_tld__2Ve5P\",\"DomainsListCont\":\"NamecheapForward_DomainsListCont__3Yb-0\",\"PrefixListCont\":\"NamecheapForward_PrefixListCont__3pWOs\",\"SuffixListCont\":\"NamecheapForward_SuffixListCont__16c_s\",\"clear\":\"NamecheapForward_clear__2vJzV\",\"Header\":\"NamecheapForward_Header__3dU0Y\",\"GenerateCont\":\"NamecheapForward_GenerateCont__QBrvJ\",\"TwoDomainsConts\":\"NamecheapForward_TwoDomainsConts__2AjLW\",\"FirstDomainsCont\":\"NamecheapForward_FirstDomainsCont__3TegW\",\"BulkForwardCont\":\"NamecheapForward_BulkForwardCont__1fUeF\",\"EnterForwardingDetails\":\"NamecheapForward_EnterForwardingDetails__2GqNa\",\"TrafficSelectionRadio\":\"NamecheapForward_TrafficSelectionRadio__i6mQm\",\"SingleRadio\":\"NamecheapForward_SingleRadio__3QQiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"Pine_CallerId__PX6eu\",\"DPerc\":\"Pine_DPerc__koKv6\",\"percCont\":\"Pine_percCont__3oh6T\",\"OptionButton\":\"Pine_OptionButton__3DmSI\",\"PausedCont\":\"Pine_PausedCont__2HzJl\",\"rotate90\":\"Pine_rotate90__1JG0_\",\"FileCont\":\"Pine_FileCont__1hlsR\",\"FormBody\":\"Pine_FormBody__3xljI\",\"filesCont\":\"Pine_filesCont__suZ_G\",\"PhoneAndMessage\":\"Pine_PhoneAndMessage__3uRRx\",\"loading\":\"Pine_loading__oVmha\",\"Container\":\"Pine_Container__2SaCC\",\"Submit\":\"Pine_Submit__Z0nZa\",\"OptionAddCont\":\"Pine_OptionAddCont__1T9zG\",\"withOrWithoutOne\":\"Pine_withOrWithoutOne__3wtZU\",\"SpeedControl\":\"Pine_SpeedControl__144qg\",\"slider\":\"Pine_slider__3EaVg\",\"sentCount\":\"Pine_sentCount__3FjZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"PineAccountThree_CallerId__3yEi5\",\"OptionButton\":\"PineAccountThree_OptionButton__22orr\",\"DPerc\":\"PineAccountThree_DPerc__3ZFw-\",\"percCont\":\"PineAccountThree_percCont__3z9_S\",\"PausedCont\":\"PineAccountThree_PausedCont__1vykH\",\"rotate90\":\"PineAccountThree_rotate90__4iI7m\",\"FileCont\":\"PineAccountThree_FileCont__3Tkqj\",\"FormBody\":\"PineAccountThree_FormBody__3Vtn4\",\"filesCont\":\"PineAccountThree_filesCont__2GDdk\",\"PhoneAndMessage\":\"PineAccountThree_PhoneAndMessage__23h0z\",\"loading\":\"PineAccountThree_loading__b_zhl\",\"Container\":\"PineAccountThree_Container__2o-qA\",\"Submit\":\"PineAccountThree_Submit__1XtkQ\",\"OptionAddCont\":\"PineAccountThree_OptionAddCont__3M8EJ\",\"withOrWithoutOne\":\"PineAccountThree_withOrWithoutOne__29IMf\",\"SpeedControl\":\"PineAccountThree_SpeedControl__36yfr\",\"slider\":\"PineAccountThree_slider__3J4Gf\",\"sentCount\":\"PineAccountThree_sentCount__1hGy8\"};","module.exports = __webpack_public_path__ + \"static/media/color.003bc224.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ring\":\"Spinner_lds-ring__2tl2D\"};"],"sourceRoot":""}