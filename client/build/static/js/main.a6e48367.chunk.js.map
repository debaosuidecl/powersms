{"version":3,"sources":["containers/HomeDev/HomeDev.module.css","containers/GLOBAL/GLOBAL.js","components/Layout/Layout.js","components/Spinner/Spinner.js","containers/Home/Home.js","containers/HomeDev/HomeDev.js","containers/PauseScreen/PauseScreen.js","containers/Pine/Pine.js","containers/PineAccountTwo/PineAccountTwo.js","containers/Snapshots/Snapshots.js","components/SingleDomain/SingleDomain.js","containers/NamecheapForward/NamecheapForward.js","containers/BLA/BLA.js","containers/PineAccountThree/PineAccountThree.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Auth/Auth.js","containers/PineappleHome/PineappleHome.js","components/LoadingPage/LoadingPage.js","App.js","serviceWorker.js","store/reducers/auth.js","store/createdStore.js","index.js","containers/Snapshots/Snapshots.module.css","containers/PineAccountTwo/PineAccountTwo.module.css","components/SingleDomain/SingleDomain.module.css","containers/PauseScreen/PauseScreen.module.css","containers/BLA/blacklist.module.css","components/Layout/Layout.module.css","containers/Home/Home.module.css","containers/Pine/Pine.module.css","containers/Auth/Auth.module.css","containers/PineappleHome/PineappleHome.module.css","containers/NamecheapForward/NamecheapForward.module.css","containers/PineAccountThree/PineAccountThree.module.css","components/Layout/color.png","components/Spinner/Spinner.module.css"],"names":["module","exports","GLOBAL","Component","domain","domainMobiniti","domainpine","blacklist","domainNameCheap","domainpineaccountone","domainpineaccountthree","connect","state","isAuthenticated","auth","token","withRouter","children","accountOne","mobiniti","accountTwo","autoRotate","autoRotateClickFunction","goToAccountFunc","goToOtherAccountFunc","accountThree","history","isAuthPage","useState","isFlip","setFlip","className","classes","Layout","Header","logo","onLoad","onClick","push","width","style","transition","transform","src","Logo","settings","snap","Fragment","localStorage","removeItem","document","location","href","Spinner","Home","fullName","pages","name","link","getItem","config","headers","url","axios","get","then","response","data","email","_id","console","log","setState","catch","error","msg","window","UserDetails","Pages","this","map","p","key","page","props","ani","file","phoneFile","isStarted","speed","endpoint","sentCount","loading","isDoneSending","isPaused","deliveredCount","unDeliveredCount","downloadableCSV","unknownCount","withLeadingOne","onDownloadFile","a","async","blob","Blob","type","URL","createObjectURL","createElement","date","Date","setAttribute","getMilliseconds","body","appendChild","click","removeChild","socketIOClient","emit","numberWithCommas","x","toString","replace","onChangeHandler","event","target","files","FormData","append","post","onChangePhoneFileHandler","submitHandler","preventDefault","socket","filename","resumeSending","pauseHandler","disconnect","exists","messageCount","isPause","_doc","isSending","displayName","phoneNumberSending","on","_","prevState","parseInt","content","Left","color","margin","CallerId","SpinCont","filesCont","PhoneAndMessage","htmlFor","icon","faFileCsv","FileCont","id","onChange","placeholder","withOrWithoutOne","OptionAddCont","faCheck","SpeedControl","min","max","e","value","slider","faThumbsDown","PausedCont","OptionButton","Submit","FormBody","Container","PauseScreen","dnis","message","results","onchangehandler","verify","r","message_id","newResarray","res","m","success","status","InputCont","i","Pine","enrouteCount","totalCount","rejectedCount","noRouteCount","sentStatus","expiredCount","deletedCount","acceptedCount","clearCountHandler","err","transports","percCont","DPerc","toFixed","isDragOver","fileState","forEach","length","dragOverHandler","dragLeaveHandler","onDropHandler","dataTransfer","referrer","fileList","slice","next","DropArea","border","opacity","onDragOver","onDrop","onDragLeave","multiple","d","Snapshots","counterArray","onLoadMore","Global","array","c","Row","noRoutecount","SingleDomain","l","purchaseHandler","forwardingChangeHandler","forwardingHandler","forwardURL","deleteSingle","selected","isAvailable","Name","Price","atTop","isPurchased","size","Right","disabled","forwardSuccess","successForwarding","forwardCont","NamecheapForward","domains","socketClient","domainsList","tldInput","tldList","prefix","prefixList","suffix","suffixList","minimumPrice","maximumPrice","numberToBulkForward","isFetching","bulkForwardingURL","Quantity","bulkForwardFinsh","listOfFoundDomains","listOfSelectedDomains","deleteTldHandler","controlList","newtldList","filter","t","changedHandler","keyDownHandler","control","controlInput","newTld","uuid","focus","clear","purchaseAndForwardBulk","downloadForwards","generate","domainObj","find","bulkForwardChangeURL","bulkPurchaseAndForward","newList","clearAllDownloadFile","domainsShuffleHandler","numberToTransfer","newSelectedArray","remainingArray","deleteSingleHandler","domainToDelete","newControl","o","concat","moment","toISOString","format","listOfDomains","BeastModeCont","DomainsListCont","tld","domainInputCont","onKeyDown","PriceTLD","PriceControl","PrefixCont","PrefixListCont","PrefixInputCont","SuffixListCont","TLDs","ListOfTlds","TLDInputCont","GenerateCont","textAlign","TwoDomainsConts","FirstDomainsCont","BulkForwardCont","EnterForwardingDetails","TwoWorkers","BLA","fileName","traffic","dataowner","handleFileUpload","Options","Traffic","DataOwner","fileUpload","Scrub","authSuccess","authSuccessReload","idToken","authFail","authLogOut","reload","Auth","password","errors","changeHandler","setItem","signin","position","includes","padding","fontSize","FormCont","open","LoadingPage","height","App","onTryAutoSignIn","appRoute","path","exact","component","HomeDev","PineappleHome","PineAccountTwo","PineAccountThree","authCheck","authCheckLoading","dispatch","setTimeout","Boolean","hostname","match","updateObject","updatedProperties","initialState","userId","authRedirectPath","firstLoad","avatar","authCheckBeforeOpLoading","tellUserToVerify","showAuthModal","redirectToEmailVerificationPage","authStart","action","authCheckStart","authCheckBeforeOpStart","toggleAuthModal","setAuthModalToTrue","setAuthRedirectPath","setRedirectToEmailVerificationPage","reducer","rootReducer","combineReducers","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,0BAA0B,SAAW,0BAA0B,SAAW,0BAA0B,UAAY,2BAA2B,gBAAkB,iCAAiC,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,wBAAwB,cAAgB,+BAA+B,iBAAmB,kCAAkC,aAAe,8BAA8B,OAAS,wBAAwB,UAAY,6B,+QCCznBC,E,yLAAeC,aAAfD,EACGE,OAED,wBAHFF,EAKGG,eAED,6BAPFH,EASGI,WAED,6BAXFJ,EAcGK,UAED,kCAhBFL,EAkBGM,gBAED,kCApBFN,EAsBGO,qBAED,6BAxBFP,EA0BGQ,uBAED,+BAOOR,Q,0CC0DAS,eALF,SAAAC,GACX,MAAO,CACLC,gBAAsC,OAArBD,EAAME,KAAKC,SAGjBJ,CAAcK,aAzFhB,SAAC,GAYP,IAXLC,EAWI,EAXJA,SAEAC,GASI,EAVJC,SAUI,EATJD,YACAE,EAQI,EARJA,WACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,wBACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WACI,EACsBC,oBAAS,GAD/B,mBACGC,EADH,KACWC,EADX,KAEJ,OACE,yBAAKC,UAAWC,IAAQC,QACtB,yBAAKF,UAAWC,IAAQE,QACtB,uBAAGH,UAAWC,IAAQG,MAUpB,yBACEC,OAAQ,kBAAMN,GAAQ,IACtBO,QAAS,kBAAMX,EAAQY,KAAK,MAC5BC,MAAM,QACNC,MAAO,CACLC,WAAY,MACZC,UAAWb,EAAS,gBAAkB,kBAExCc,IAAKC,OAIP,yBAAKb,UAAWC,IAAQa,UACrBxB,EACC,0BAAMU,UAAWC,IAAQc,KAAMT,QAASf,GAAxC,aAGE,KACHJ,EACC,kBAAC,IAAM6B,SAAP,KACE,4BAAQV,QAASd,GAAjB,mBACA,4BAAQc,QAASb,GAAjB,oBAEA,KACHJ,EACC,kBAAC,IAAM2B,SAAP,KACE,4BAAQV,QAASd,GAAjB,mBACA,4BAAQc,QAASb,GAAjB,oBAEA,KACHC,EACC,kBAAC,IAAMsB,SAAP,KACE,4BAAQV,QAASd,GAAjB,mBACA,4BAAQc,QAASb,GAAjB,oBAEA,KACFG,EASE,KARF,4BACEU,QAAS,WACPW,aAAaC,WAAW,SACxBC,SAASC,SAASC,KAAO,UAH7B,YAaPnC,O,iBCrEQoC,EAXC,WACd,OACE,yBAAKtB,UAAWC,IAAQ,aACtB,8BACA,8BACA,8BACA,gC,OCoGSsB,E,2MAlGb1C,MAAQ,CACN2C,SAAU,GACVC,MAAO,CACL,CACEC,KAAM,YACNC,KAAM,mBAER,CACED,KAAM,KACNC,KAAM,KAER,CACED,KAAM,SACNC,KAAM,KAER,CACED,KAAM,aACNC,KAAM,KAER,CACED,KAAM,wDACNC,KAAM,cAER,CACED,KAAM,2CACNC,KAAM,gB,mIAUS,IAAD,OACZ3C,EAAQiC,aAAaW,QAAQ,SAEnC,GAAK5C,EAEE,CACL,IAAI6C,EAAS,CACXC,QAAS,CACP,eAAgB9C,IAGhB+C,EAAG,UAAM5D,EAAOM,gBAAb,kBACPuD,IACGC,IAAIF,EAAKF,GACTK,MAAK,SAAAC,GAAY,MAGiBA,EAASC,KAAlCC,EAHQ,EAGRA,MAAOC,EAHC,EAGDA,IAAKd,EAHJ,EAGIA,SACpBe,QAAQC,IAAIH,EAAOC,EAAKd,GACxB,EAAKiB,SAAS,CAAEjB,gBAGjBkB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,GAGZJ,QAAQC,IAAIG,GACRA,EAAMR,SAASC,KAAKQ,KAEtBL,QAAQC,IAAIG,EAAMR,SAASC,KAAKQ,KAIlCC,OAAOzB,SAASC,KAAO,gBA7B3BF,SAASC,SAASC,KAAO,U,+BAkCnB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,yBAAKrB,UAAWC,IAAQsB,MACtB,yBAAKvB,UAAWC,IAAQ6C,aAEtB,0DAEF,yBAAK9C,UAAWC,IAAQ8C,OACrBC,KAAKnE,MAAM4C,MAAMwB,KAAI,SAAAC,GACpB,OACE,yBAAKC,IAAKD,EAAExB,KAAM1B,UAAWC,IAAQmD,MACnC,uBAAG9C,QAAS,kBAAM,EAAK+C,MAAM1D,QAAQY,KAAK2C,EAAEvB,QACzCuB,EAAExB,iB,GAvFJtD,a,yCCocJmD,E,2MA/bb1C,MAAQ,CACNyE,IAAK,MACLC,KAAM,KACNC,UAAW,KACXC,WAAW,EACXC,MAAO,GACPvB,UAAU,EACVwB,SAAUxF,EAAOG,eACjBsF,UAAW,EACXC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVpB,MAAO,KACPqB,eAAgB,EAChBC,iBAAkB,EAClBC,gBAAiB,GACjBC,aAAc,EACdC,gBAAgB,G,EA4HlBC,eAAiB,mBAAAC,EAAA,WAAAA,EAAAC,OAAA,gDACXC,EAAO,IAAIC,KAAK,CAAC,EAAK5F,MAAMqF,iBAAkB,CAChDQ,KAAM,eAGF3C,EAAMc,OAAO8B,IAAIC,gBAAgBJ,GACjCF,EAAInD,SAAS0D,cAAc,KAC3BC,EAAO,IAAIC,KACjBT,EAAEU,aAAa,SAAUjD,GACzBuC,EAAEU,aAAa,OAAQjD,GACvBuC,EAAEU,aAAa,WAAf,kBAAsCF,EAAKG,kBAA3C,SACA9D,SAAS+D,KAAKC,YAAYb,GAC1BA,EAAEc,QACFjE,SAAS+D,KAAKG,YAAYf,GACXgB,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,GAfL,uC,EAiBjBC,iBAAmB,SAAAC,GACjB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,M,EAEvDC,gBAAkB,SAAAC,GAChBtD,QAAQC,IAAIqD,EAAMC,OAAOC,MAAM,IAC/B,EAAKtD,SAAS,CAAEc,KAAMsC,EAAMC,OAAOC,MAAM,GAAGrE,OAC5C,IAAMU,EAAO,IAAI4D,SACjB5D,EAAK6D,OAAO,OAAQJ,EAAMC,OAAOC,MAAM,IACxBT,IAAe,EAAKzG,MAAM8E,UACzC,EAAKlB,SAAS,CAAEoB,SAAS,IACzB7B,IAAMkE,KAAN,UAAc/H,EAAOG,eAArB,eAAkD8D,GAAMF,MAAK,WAC3D,EAAKO,SAAS,CACZoB,SAAS,EACTC,eAAe,Q,EAMrBqC,yBAA2B,SAAAN,GACzBtD,QAAQC,IAAIqD,EAAMC,OAAOC,MAAM,IAC/B,EAAKtD,SAAS,CAAEe,UAAWqC,EAAMC,OAAOC,MAAM,GAAGrE,OACjD,IAAMU,EAAO,IAAI4D,SACjB5D,EAAK6D,OAAO,QAASJ,EAAMC,OAAOC,MAAM,IACzBT,IAAe,EAAKzG,MAAM8E,UACzC,EAAKlB,SAAS,CAAEoB,SAAS,IACzB7B,IAAMkE,KAAN,UAAc/H,EAAOG,eAArB,qBAAwD8D,GAAMF,MAAK,WACjE,EAAKO,SAAS,CACZoB,SAAS,EACTC,eAAe,Q,EAKrBsC,cAAgB,SAAAP,GACdA,EAAMQ,iBACN,IAAMC,EAAShB,IAAe,EAAKzG,MAAM8E,UACrC,EAAK9E,MAAMyE,KAAO,EAAKzE,MAAM0E,MAC/B,EAAKd,SAAS,CAAEgB,WAAW,EAAMd,MAAO,OACxC2D,EAAOf,KAAK,WAAY,EAAK1G,MAAM6E,OACnC4C,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3BmC,SAAU,EAAK1H,MAAM0E,KACrBD,IAAK,EAAKzE,MAAMyE,OAIlB,EAAKb,SAAS,CAAEE,MAAO,4C,EAG3B6D,cAAgB,WACd,EAAK/D,SAAS,CAAEgB,WAAW,EAAMM,UAAU,EAAOpB,MAAO,OACzD,IAAM2D,EAAShB,IAAe,EAAKzG,MAAM8E,UACzC2C,EAAO1H,UAEP0H,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3Bd,IAAK,EAAKzE,MAAMyE,O,EAGpBmD,aAAe,WACblE,QAAQC,IAAI,qBACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,UAEpC,EAAK9E,MAAM4E,YAGhB6C,EAAOf,KAAK,QAAS,GACrBhD,QAAQC,IAAI,mBACZ,EAAKC,SAAS,CAAEoB,SAAS,M,sFAhNVyB,IAAetC,KAAKnE,MAAM8E,UAClC+C,e,0CAGY,IAAD,OAClB1E,IACGC,IADH,UACU9D,EAAOG,eADjB,+BAEG4D,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACHA,EAAKuE,QACP,EAAKlE,SAAS,CAAEyB,gBAAiB9B,EAAKuE,SAExCpE,QAAQC,IAAIJ,GAJM,IAOhB4B,EAIE5B,EAJF4B,eACAC,EAGE7B,EAHF6B,iBACAE,EAEE/B,EAFF+B,aACAyC,EACExE,EADFwE,aAEExE,EAAKyE,SACP,EAAKpE,SAAS,CACZsB,UAAU,EACVF,SAAS,IAGbtB,QAAQC,IAAIJ,GACRA,EAAK0E,KAAKC,WACZ,EAAKtE,SAAS,CACZgB,WAAW,EACXF,KAAMnB,EAAK0E,KAAKE,cAGhB5E,EAAK0E,KAAKG,oBACZ,EAAKxE,SAAS,CACZa,IAAKlB,EAAK0E,KAAKG,qBAGf7E,EAAK0E,KAAK1C,eACZ,EAAK3B,SAAS,CACZ2B,eAAgBhC,EAAK0E,KAAK1C,iBAG5B,EAAK3B,SAAS,CACZ2B,gBAAgB,IAGpB,EAAK3B,SAAS,CACZuB,iBACAC,mBACAE,eACAP,UAAWgD,EACX/C,SAAS,IAEXtB,QAAQC,IAAI,QACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,UACzC2C,EAAO1H,UACP0H,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLpD,eAAgBoD,EAAUpD,eAAiB,SAIjDsC,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLnD,iBAAkBmD,EAAUnD,iBAAmB,SAIrDqC,EAAOY,GAAG,WAAW,SAAAC,GACnB5E,QAAQC,IAAI,WACZ,EAAKC,UAAS,SAAA2E,GACZ,MAAO,CACLjD,aAAciD,EAAUjD,aAAe,SAK7CmC,EAAOY,GAAG,QAAQ,SAAA9E,GACZA,GACF,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,OAIhBuC,EAAOY,GAAG,qBAAqB,SAAA9E,GAC7BG,QAAQC,IAAI,sBACZ,EAAKC,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,UAGV+C,EAAOY,GAAG,QAAQ,SAAA9E,GAChB,EAAKK,SAAS,CACZmB,UAAWyD,SAAS,EAAKxI,MAAM+E,WAAayD,SAASjF,QAGzDkE,EAAOY,GAAG,aAAa,SAAA9E,GACrB,EAAKK,SAAS,CACZsB,UAAU,EACVG,gBAAiB9B,EACjByB,SAAS,OAIbyC,EAAOY,GAAG,iBAAiB,SAAA9E,GACzB,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,e,+BAgGN,IAAD,OACDM,EACJ,yBAAK7D,UAAWC,IAAQ4D,SACtB,uCAGAyD,EACF,kBAAC,IAAMtG,SAAP,KACE,yBAAKhB,UAAWC,IAAQsH,MAStB,yBACE9G,MAAO,CACL+G,MAAO,MACPC,OAAQ,GAEVzH,UAAU,IAETgD,KAAKnE,MAAM8D,OAEd,yBAAK3C,UAAWC,IAAQyH,UACrB1E,KAAKnE,MAAM4E,UACV,yBAAKzD,UAAWC,IAAQ0H,UACtB,2CAAiB3E,KAAKnE,MAAM0E,KAA5B,OACA,kBAAC,EAAD,OAGF,yBAAKvD,UAAWC,IAAQ2H,WACtB,yBAAK5H,UAAWC,IAAQ4H,iBACtB,kDACA,2BAAOC,QAAQ,QACb,kBAAC,IAAD,CACEC,KAAMC,IACNvH,MAAO,CACL+G,MAAOxE,KAAKnE,MAAM0E,KAAO,QAAU,OACnC7C,WAAY,KACZC,UAAWqC,KAAKnE,MAAM0E,KAClB,kBACA,oBAKV,yBAAKvD,UAAWC,IAAQgI,UACtB,2BACEvD,KAAK,OACLwD,GAAG,OAEHC,SAAUnF,KAAK4C,gBACfwC,YAAY,kBAuBxB,yBAAKpI,UAAWC,IAAQoI,kBACtB,yBACE/H,QAAS,kBAAM,EAAKmC,SAAS,CAAE2B,gBAAgB,KAC/CpE,UAAWC,IAAQqI,eAEnB,sEAA+C,IAC/C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,MAAOxE,KAAKnE,MAAMuF,eAAiB,aAAe,UAGtD,yBACE9D,QAAS,kBACP,EAAKmC,SAAS,CACZ2B,gBAAgB,KAGpBpE,UAAWC,IAAQqI,eAEnB,mEAA4C,IAC5C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,OACgC,IAA9BxE,KAAKnE,MAAMuF,eAA2B,aAAe,WAM7D,yBAAKpE,UAAWC,IAAQuI,cACtB,oEACA,2BACE9D,KAAK,QACL+D,IAAI,IACJC,IAAI,MACJP,SAAU,SAAAQ,GACR,EAAKlG,SAAS,CAAEiB,MAAOiF,EAAE7C,OAAO8C,QACjBtD,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,WAAYoD,EAAE7C,OAAO8C,QAEnCA,MAAO5F,KAAKnE,MAAM6E,MAClB1D,UAAWC,IAAQ4I,OACnBX,GAAG,YAEL,qCAAWlF,KAAKnE,MAAM6E,MAAtB,cAGJ,yBAAK1D,UAAU,IACb,yBAAKA,UAAWC,IAAQ2D,WACrBZ,KAAKnE,MAAMiF,cAAgB,+CAA0B,KACtD,2BAAId,KAAKwC,iBAAiBxC,KAAKnE,MAAM+E,WAArC,WAEF,yBAAK5D,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMmF,gBADpC,KACuD,IACrD,kBAAC,IAAD,CAAGwD,MAAM,aAAaO,KAAMQ,QAGhC,yBAAKvI,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMoF,kBADpC,KACyD,IACvD,kBAAC,IAAD,CAAG8D,KAAMe,IAActB,MAAM,YAuCvC,OAjCIxE,KAAKnE,MAAMkF,WACbuD,EACE,yBAAKtH,UAAWC,IAAQ8I,YACtB,0HAIA,yBAAK/I,UAAWC,IAAQ+I,cACtB,4BAAQhJ,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKwD,eAAjD,4CAIF,yBAAKxG,UAAWC,IAAQ+I,cACtB,4BAAQhJ,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKqB,gBAAjD,kBAKF,yBAAKrE,UAAWC,IAAQ+I,cACtB,4BACEhJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,KAJxB,6BAeN,6BACGvC,KAAKnE,MAAMgF,QAAUA,EAAU,KAChC,kBAAC,EAAD,CAAQzE,UAAQ,GACd,yBAAKY,UAAWC,IAAQiJ,UACtB,yBAAKlJ,UAAWC,IAAQkJ,WAAY7B,GAEnCtE,KAAKnE,MAAMkF,UAAYf,KAAKnE,MAAM4E,UAAY,KAC7C,4BAAQzD,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKoD,eAAjD,kBAKJ,yBAAKpG,UAAWC,IAAQ+I,cACtB,4BACEhJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,KAJxB,sBAUDvC,KAAKnE,MAAMkF,WAAaf,KAAKnE,MAAM4E,UAAY,MAAQT,KAAKnE,MACxDkF,UAAYf,KAAKnE,MAAM4E,UAC1B,yBAAKzD,UAAU,IACb,4BAAQA,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKyD,cAAjD,UAIA,W,GAzbKrI,a,yBCsGJgL,E,2MA9GbvK,MAAQ,CACNyE,IAAK,GACL+F,KAAM,GACNC,QAAS,GACTC,QAAS,I,EAGXC,gBAAkB,SAAAb,GAChB,EAAKlG,SAAL,eAAiBkG,EAAE7C,OAAOpE,KAAOiH,EAAE7C,OAAO8C,S,EAE5Ca,OAAS,SAAAC,GACP1H,IACGC,IADH,UACU9D,EAAOE,OADjB,kCACiDqL,EAAEC,aAChDzH,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACPG,QAAQC,IAAIJ,GACZ,IAAIwH,EAAc,EAAK/K,MAAM0K,QAAQtG,KAAI,SAAA4G,GAIvC,OAFAtH,QAAQC,IAAIJ,EAAK0H,IAAMD,EAAIF,YAC3BpH,QAAQC,IAAI,aACL,CACLuH,QAASF,EAAIE,QACbJ,WAAYE,EAAIF,WAChBN,KAAMQ,EAAIR,KACVW,OAAQ5H,EAAK0H,IAAMD,EAAIF,WAAavH,EAAK4H,OAASH,EAAIG,WAG1DzH,QAAQC,IAAIoH,EAAa,UACzB,EAAKnH,SAAS,CACZ8G,QAASK,Q,wEAIP,IAAD,SACwB5G,KAAKnE,MAA5ByE,EADD,EACCA,IAAK+F,EADN,EACMA,KAAMC,EADZ,EACYA,QACnB,OACE,kBAAC,EAAD,KACE,yBAAKtJ,UAAWC,IAAQmJ,aACtB,yCACA,yBAAKpJ,UAAWC,IAAQgK,WACtB,2BAAO9B,SAAUnF,KAAKwG,gBAAiB9H,KAAK,MAAMgD,KAAK,UAEzD,uFACA,yBAAK1E,UAAWC,IAAQgK,WACtB,8BACEvI,KAAK,OACLkH,MAAOS,EACPlB,SAAUnF,KAAKwG,mBAGnB,8CACA,yBAAKxJ,UAAWC,IAAQgK,WACtB,8BACEvI,KAAK,UACLkH,MAAOU,EACPnB,SAAUnF,KAAKwG,mBAGnB,yBAAKxJ,UAAU,IACb,4BACEA,UAAWC,IAAQgJ,OACnB3I,QAAS,WACPiC,QAAQC,IAAI,MACZR,IACGC,IADH,UAEO9D,EAAOE,OAFd,gCAE4CiF,EAF5C,iBAEwD+F,EAFxD,oBAEwEC,IAErEpH,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACPG,QAAQC,IAAIJ,GACZ,EAAKK,SAAS,CAAE8G,QAASnH,OAE1BM,OAAM,SAAAiG,GACLpG,QAAQC,IAAImG,QAbpB,uBAqBJ,6BACE,uCACC3F,KAAKnE,MAAM0K,SACVvG,KAAKnE,MAAM0K,QAAQtG,KAAI,SAACyG,EAAGQ,GACzB,OACE,yBAAKlK,UAAU,IACK,cAAjB0J,EAAEC,WACD,sDAA4BD,EAAEL,MAE9B,6BACE,kDAAwBK,EAAEL,MAC1B,4BACErJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACP,EAAKmJ,OAAOC,KAHhB,gBAQA,2BAAIA,EAAEM,mB,GAnGF5L,a,gBC4sBX+L,E,2MAtsBbtL,MAAQ,CACNyE,IAAK,GACLC,KAAM,KACNE,WAAW,EACXC,MAAO,GACPvB,UAAU,EACVwB,SAEM,6BAENC,UAAW,EACXC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVpB,MAAO,KACPqB,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdC,WAAY,EACZC,cAAe,EACfC,aAAc,EACdrG,gBAAiB,GACjBC,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfvG,gBAAgB,G,EA6OlBwG,kBAAoB,WAAO,IAAD,EAapB,EAAK/L,MAXP+E,EAFsB,EAEtBA,UACAI,EAHsB,EAGtBA,eACAC,EAJsB,EAItBA,iBACAmG,EALsB,EAKtBA,aACAE,EANsB,EAMtBA,cACAnG,EAPsB,EAOtBA,aACAoG,EARsB,EAQtBA,aACAC,EATsB,EAStBA,WACAC,EAVsB,EAUtBA,aACAC,EAXsB,EAWtBA,aACAC,EAZsB,EAYtBA,cAEF,EAAKlI,SAAS,CACZmB,UAAW,EACXC,SAAS,EACT0G,aAAc,EACdvG,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfnG,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,IAEjB,IAAMvI,EAAO,CACXwB,YACA2G,eACAvG,iBACAC,mBACAmG,eACAE,gBACAnG,eACAqG,aACAC,eACAC,eACAC,iBAEFpI,QAAQC,IAAIJ,GAEZJ,IACGkE,KADH,UACW/H,EAAOI,WADlB,kBAC8C6D,GAC3CF,MAAK,SAAA2H,GACJ,EAAKpH,SAAS,CACZmB,UAAW,EACXC,SAAS,EACTG,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfnG,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,OAGlBjI,OAAM,SAAAmI,GACLtI,QAAQC,IAAIqI,EAAI1I,UAChB,EAAKM,SAAS,CACZmB,YAEAI,iBACAC,mBACAmG,eACAE,gBACAnG,eACAqG,aACAC,eACAC,eACAC,sB,EAKRtG,eAAiB,mBAAAC,EAAA,WAAAA,EAAAC,OAAA,gDACXC,EAAO,IAAIC,KAAK,CAAC,EAAK5F,MAAMqF,iBAAkB,CAChDQ,KAAM,eAGF3C,EAAMc,OAAO8B,IAAIC,gBAAgBJ,GACjCF,EAAInD,SAAS0D,cAAc,KAC3BC,EAAO,IAAIC,KACjBT,EAAEU,aAAa,SAAUjD,GACzBuC,EAAEU,aAAa,OAAQjD,GACvBuC,EAAEU,aAAa,WAAf,kBAAsCF,EAAKG,kBAA3C,SACA9D,SAAS+D,KAAKC,YAAYb,GAC1BA,EAAEc,QACFjE,SAAS+D,KAAKG,YAAYf,GAbX,uC,EAiBjBkB,iBAAmB,SAAAC,GACjB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,M,EAEvDC,gBAAkB,SAAAC,GAChBtD,QAAQC,IAAIqD,EAAMC,OAAOC,MAAM,IAC/B,EAAKtD,SAAS,CAAEc,KAAMsC,EAAMC,OAAOC,MAAM,GAAGrE,OAC5C,IAAMU,EAAO,IAAI4D,SACjB5D,EAAK6D,OAAO,OAAQJ,EAAMC,OAAOC,MAAM,IACxBT,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAEf,EAAKrI,SAAS,CAAEoB,SAAS,IACzB7B,IAAMkE,KAAN,UAAc/H,EAAOE,OAArB,eAA0C+D,GAAMF,MAAK,WACnD,EAAKO,SAAS,CACZoB,SAAS,EACTC,eAAe,Q,EAMrBsC,cAAgB,SAAAP,GACdA,EAAMQ,iBACN,IAAMC,EAAShB,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAEX,EAAKjM,MAAMyE,KAAO,EAAKzE,MAAM0E,MAC/B,EAAKd,SAAS,CAAEgB,WAAW,EAAMd,MAAO,OACxC2D,EAAOf,KAAK,WAAY,EAAK1G,MAAM6E,OACnC4C,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3BmC,SAAU,EAAK1H,MAAM0E,KACrBD,IAAK,EAAKzE,MAAMyE,OAGlB,EAAKb,SAAS,CAAEE,MAAO,4C,EAG3B6D,cAAgB,WACd,EAAK/D,SAAS,CAAEgB,WAAW,EAAMM,UAAU,EAAOpB,MAAO,OACzD,IAAM2D,EAAShB,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAEfxE,EAAO1H,UAEP0H,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3Bd,IAAK,EAAKzE,MAAMyE,O,EAGpBmD,aAAe,WACblE,QAAQC,IAAI,qBACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAGV,EAAKjM,MAAM4E,YAGhB6C,EAAOf,KAAK,QAAS,GACrBhD,QAAQC,IAAI,mBACZ,EAAKC,SAAS,CAAEoB,SAAS,M,sFAvYVyB,IAAetC,KAAKnE,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAERpE,e,0CAGY,IAAD,OACZ1H,EAAQiC,aAAaW,QAAQ,SAEnC,GAAK5C,EAEE,CACL,IAAI6C,EAAS,CACXC,QAAS,CACP,eAAgB9C,IAGhB+C,EAAG,UAAM5D,EAAOM,gBAAb,kBACPuD,IACGC,IAAIF,EAAKF,GACTK,MAAK,SAAAC,GAAY,MAGiBA,EAASC,KAAlCC,EAHQ,EAGRA,MAAOC,EAHC,EAGDA,IAAKd,EAHJ,EAGIA,SACpBe,QAAQC,IAAIH,EAAOC,EAAKd,MAGzBkB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,GACZxB,SAASC,SAASC,KAAO,QAEzBkB,QAAQC,IAAIG,GACRA,EAAMR,SAASC,KAAKQ,KAEtBL,QAAQC,IAAIG,EAAMR,SAASC,KAAKQ,aAxBtCzB,SAASC,SAASC,KAAO,QA8B3BW,IACGC,IADH,UACU9D,EAAOI,WADjB,+BAEG2D,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACHA,EAAKuE,QACP,EAAKlE,SAAS,CAAEyB,gBAAiB9B,EAAKuE,SAExCpE,QAAQC,IAAIJ,GAJM,IAOhB4B,EAWE5B,EAXF4B,eACAC,EAUE7B,EAVF6B,iBACAqG,EASElI,EATFkI,cACAnG,EAQE/B,EARF+B,aACAiG,EAOEhI,EAPFgI,aACAI,EAMEpI,EANFoI,WACAC,EAKErI,EALFqI,aACAC,EAIEtI,EAJFsI,aACAC,EAGEvI,EAHFuI,cACA/D,EAEExE,EAFFwE,aACA2D,EACEnI,EADFmI,aAEEnI,EAAK0E,KAAKD,SACZ,EAAKpE,SAAS,CACZsB,UAAU,EACVF,SAAS,IAGTzB,EAAK0E,KAAKC,WACZ,EAAKtE,SAAS,CACZgB,WAAW,EACXF,KAAMnB,EAAK0E,KAAKE,cAGhB5E,EAAK0E,KAAKG,oBACZ,EAAKxE,SAAS,CACZa,IAAKlB,EAAK0E,KAAKG,qBAGf7E,EAAK0E,KAAKuD,YACZ,EAAK5H,SAAS,CACZ4H,WAAYjI,EAAK0E,KAAKuD,aAGtBjI,EAAK0E,KAAK1C,eACZ,EAAK3B,SAAS,CACZ2B,eAAgBhC,EAAK0E,KAAK1C,iBAG5B,EAAK3B,SAAS,CACZ2B,gBAAgB,IAGpB,EAAK3B,SAAS,CACZuB,iBACAC,mBACAqG,gBACAF,eACAjG,eACAqG,aACAC,eACAC,eACAC,gBACA/G,UAAWgD,EACX/C,SAAS,EACT0G,iBAEFhI,QAAQC,IAAI,QACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAEfxE,EAAO1H,UACP0H,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLpD,eAAgBoD,EAAUpD,eAAiB,SAIjDsC,EAAOY,GAAG,aAAa,SAAAC,GACrB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLmD,aAAcnD,EAAUmD,aAAe,SAI7CjE,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLkD,cAAelD,EAAUkD,cAAgB,SAI/ChE,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLnD,iBAAkBmD,EAAUnD,iBAAmB,SAIrDqC,EAAOY,GAAG,WAAW,SAAAC,GACnB5E,QAAQC,IAAI,WACZ,EAAKC,UAAS,SAAA2E,GACZ,MAAO,CACLjD,aAAciD,EAAUjD,aAAe,SAI7CmC,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLgD,aAAchD,EAAUgD,aAAe,SAI7C9D,EAAOY,GAAG,QAAQ,SAAAC,GAEhB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLoD,WAAYpD,EAAUoD,WAAa,SAIzClE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLqD,aAAcrD,EAAUqD,aAAe,SAI7CnE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLsD,aAActD,EAAUsD,aAAe,SAI7CpE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLuD,cAAevD,EAAUuD,cAAgB,SAI/CrE,EAAOY,GAAG,eAAe,SAAA9E,GACvB,EAAKK,SAAS,CAAE4H,WAAYjI,OAG9BkE,EAAOY,GAAG,QAAQ,SAAA9E,GACZA,GACF,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,OAIhBuC,EAAOY,GAAG,qBAAqB,SAAA9E,GAC7BG,QAAQC,IAAI,sBACZ,EAAKC,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,UAGV+C,EAAOY,GAAG,QAAQ,SAAA9E,GAChB,EAAKK,SAAS,CACZmB,UAAWyD,SAAS,EAAKxI,MAAM+E,WAAa,OAGhD0C,EAAOY,GAAG,aAAa,SAAA9E,GACrB,EAAKK,SAAS,CACZsB,UAAU,EACVG,gBAAiB9B,EACjByB,SAAS,OAIbyC,EAAOY,GAAG,iBAAiB,SAAA9E,GACzB,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,e,+BAuKN,IAAD,OACDM,EACJ,yBAAK7D,UAAWC,IAAQ4D,SACtB,uCAGAyD,EACF,kBAAC,IAAMtG,SAAP,KACE,yBAAKhB,UAAWC,IAAQsH,MACtB,yBAAKvH,UAAWC,IAAQyH,UACtB,2BACEhD,KAAK,OACLkE,MAAO5F,KAAKnE,MAAMyE,IAClB6E,SAAU,SAAAQ,GAAC,OAAI,EAAKlG,SAAS,CAAEa,IAAKqF,EAAE7C,OAAO8C,SAC7CR,YAAY,qBAGhB,yBACE3H,MAAO,CACL+G,MAAO,MACPC,OAAQ,GAEVzH,UAAU,IAETgD,KAAKnE,MAAM8D,OAEd,yBAAK3C,UAAWC,IAAQyH,UACrB1E,KAAKnE,MAAM4E,UACV,yBAAKzD,UAAWC,IAAQ0H,UACtB,2CAAiB3E,KAAKnE,MAAM0E,KAA5B,OACA,kBAAC,EAAD,OAGF,2BACEmB,KAAK,OAELyD,SAAUnF,KAAK4C,gBACfwC,YAAY,eAIlB,yBAAKpI,UAAWC,IAAQoI,kBACtB,yBACE/H,QAAS,kBAAM,EAAKmC,SAAS,CAAE2B,gBAAgB,KAC/CpE,UAAWC,IAAQqI,eAEnB,sEAA+C,IAC/C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,MAAOxE,KAAKnE,MAAMuF,eAAiB,aAAe,UAGtD,yBACE9D,QAAS,kBACP,EAAKmC,SAAS,CACZ2B,gBAAgB,KAGpBpE,UAAWC,IAAQqI,eAEnB,mEAA4C,IAC5C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,OACgC,IAA9BxE,KAAKnE,MAAMuF,eAA2B,aAAe,WAM7D,yBAAKpE,UAAWC,IAAQuI,cACtB,oEACA,2BACE9D,KAAK,QACL+D,IAAI,IACJC,IAAI,MACJP,SAAU,SAAAQ,GACR,EAAKlG,SAAS,CAAEiB,MAAOiF,EAAE7C,OAAO8C,QACjBtD,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAERvF,KAAK,WAAYoD,EAAE7C,OAAO8C,QAEnCA,MAAO5F,KAAKnE,MAAM6E,MAClB1D,UAAWC,IAAQ4I,OACnBX,GAAG,YAEL,qCAAWlF,KAAKnE,MAAM6E,MAAtB,cAGJ,yBAAK1D,UAAU,IACZgD,KAAKnE,MAAM+E,UAAY,GACxBZ,KAAKnE,MAAMmF,gBAAkB,GAC7BhB,KAAKnE,MAAMyL,eAAiB,GAC5BtH,KAAKnE,MAAMoF,kBAAoB,EAC7B,yBAAKjE,UAAWC,IAAQ8K,UACtB,uBAAG/K,UAAWC,IAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMmF,eAAiBhB,KAAKnE,MAAM+E,UACxC,KACAqH,QAAQ,GALZ,KAQA,uBAAGjL,UAAWC,IAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMyL,cAAgBtH,KAAKnE,MAAM+E,UACvC,KACAqH,QAAQ,GALZ,KAQA,uBAAGjL,UAAWC,IAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMoF,iBAAmBjB,KAAKnE,MAAM+E,UAC1C,KACAqH,QAAQ,GALZ,MASA,KACJ,yBAAKjL,UAAWC,IAAQ2D,WACrBZ,KAAKnE,MAAMiF,cAAgB,+CAA0B,KACtD,2BAAId,KAAKwC,iBAAiBxC,KAAKnE,MAAM+E,WAArC,WAaF,yBAAK5D,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMmF,gBADpC,KACuD,IACrD,kBAAC,IAAD,CAAGwD,MAAM,aAAaO,KAAMQ,QAGhC,yBAAKvI,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMoF,kBADpC,KACyD,IACvD,kBAAC,IAAD,CAAG8D,KAAMe,IAActB,MAAM,UAGjC,yBAAKxH,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMyL,eADpC,KACsD,IACpD,kBAAC,IAAD,CAAGvC,KAAMe,IAActB,MAAM,YAGjC,yBAAKxH,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMuL,cADpC,OACuD,MAIzD,yBAAKpK,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM4L,cADpC,OACuD,MAIzD,yBAAKzK,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM6L,cADpC,OACuD,MAIzD,yBAAK1K,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM2L,YADpC,QACsD,MAIxD,yBAAKxK,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM8L,eADpC,QACyD,MAI3D,yBAAK3K,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMsF,cADpC,SACyD,MAI3D,yBAAKnE,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM0L,cADpC,MACsD,MAIxD,4BAAQjK,QAAS0C,KAAK4H,mBAAtB,mBAuCN,OAnCI5H,KAAKnE,MAAMkF,WACbuD,EACE,yBAAKtH,UAAWC,IAAQ8I,YACtB,0HAIA,yBAAK/I,UAAWC,IAAQ+I,cACtB,4BAAQhJ,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKwD,eAAjD,4CAIF,yBAAKxG,UAAWC,IAAQ+I,cACtB,4BAAQhJ,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKqB,gBAAjD,kBAKF,yBAAKrE,UAAWC,IAAQ+I,cACtB,4BACEhJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAERvF,KAAK,QAAQ,KANxB,6BAiBN,6BACGvC,KAAKnE,MAAMgF,QAAUA,EAAU,KAChC,kBAAC,EAAD,CACE1E,YAAU,EACVG,YAAU,EACVE,gBAAiB,kBAAM,EAAK6D,MAAM1D,QAAQY,KAAK,sBAC/Cd,qBAAsB,kBACpB,EAAK4D,MAAM1D,QAAQY,KAAK,sBAE1BhB,wBAAyB,kBACvB,EAAK8D,MAAM1D,QAAQY,KAAK,uBAG1B,yBAAKP,UAAWC,IAAQiJ,UACtB,yBAAKlJ,UAAWC,IAAQkJ,WAAY7B,GAEnCtE,KAAKnE,MAAMkF,UAAYf,KAAKnE,MAAM4E,UAAY,KAC7C,4BAAQzD,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKoD,eAAjD,kBAKJ,yBAAKpG,UAAWC,IAAQ+I,cACtB,4BACEhJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,SAAU,CACjDmH,WAAY,CAAC,eAERvF,KAAK,QAAQ,KANxB,sBAYDvC,KAAKnE,MAAMkF,WAAaf,KAAKnE,MAAM4E,UAAY,MAAQT,KAAKnE,MACxDkF,UAAYf,KAAKnE,MAAM4E,UAC1B,yBAAKzD,UAAU,IACb,4BAAQA,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKyD,cAAjD,UAIA,W,GAhsBKrI,a,wBCgwBJ+L,E,2MA/vBbtL,MAAQ,CACNyE,IAAK,aACLC,KAAM,KACNE,WAAW,EACXC,MAAO,GACPvB,UAAU,EACVwB,SAAUxF,EAAOO,qBACjBkF,UAAW,EACXyG,WAAY,EACZxG,SAAS,EACTC,eAAe,EACfC,UAAU,EACVpB,MAAO,KACPqB,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfpG,gBAAiB,GACjBC,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfvG,gBAAgB,EAChB8G,YAAY,EACZnF,MAAO,I,EA+OT6E,kBAAoB,WAAO,IAAD,EAYpB,EAAK/L,MAVP+E,EAFsB,EAEtBA,UACAI,EAHsB,EAGtBA,eACAC,EAJsB,EAItBA,iBACAmG,EALsB,EAKtBA,aACAE,EANsB,EAMtBA,cACAnG,EAPsB,EAOtBA,aACAqG,EARsB,EAQtBA,WACAC,EATsB,EAStBA,aACAC,EAVsB,EAUtBA,aACAC,EAXsB,EAWtBA,cAEF,EAAKlI,SAAS,CACZmB,UAAW,EACXC,SAAS,EACTG,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfnG,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,IAEjB,IAAMvI,EAAO,CACXwB,YACAI,iBACAC,mBACAmG,eACAE,gBACAnG,eACAqG,aACAC,eACAC,eACAC,iBAEFpI,QAAQC,IAAIJ,GAEZJ,IACGkE,KADH,UACW/H,EAAOO,qBADlB,kBACwD0D,GACrDF,MAAK,SAAA2H,GACJ,EAAKpH,SAAS,CACZmB,UAAW,EACXC,SAAS,EACTG,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfnG,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,OAGlBjI,OAAM,SAAAmI,GACLtI,QAAQC,IAAIqI,EAAI1I,UAChB,EAAKM,SAAS,CACZmB,YAEAI,iBACAC,mBACAmG,eACAE,gBACAnG,eACAqG,aACAC,eACAC,eACAC,sB,EAKRtG,eAAiB,mBAAAC,EAAA,WAAAA,EAAAC,OAAA,gDACXC,EAAO,IAAIC,KAAK,CAAC,EAAK5F,MAAMqF,iBAAkB,CAChDQ,KAAM,eAGF3C,EAAMc,OAAO8B,IAAIC,gBAAgBJ,GACjCF,EAAInD,SAAS0D,cAAc,KAC3BC,EAAO,IAAIC,KACjBT,EAAEU,aAAa,SAAUjD,GACzBuC,EAAEU,aAAa,OAAQjD,GACvBuC,EAAEU,aAAa,WAAf,kBAAsCF,EAAKG,kBAA3C,SACA9D,SAAS+D,KAAKC,YAAYb,GAC1BA,EAAEc,QACFjE,SAAS+D,KAAKG,YAAYf,GAbX,uC,EAiBjBkB,iBAAmB,SAAAC,GACjB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,M,EAEvDC,gBAAkB,SAAAC,GAChBtD,QAAQC,IAAIqD,EAAMC,OAAOC,OAEzB,IAAIoF,EAAY,GAEhB,EAAK1I,SAAS,CACZc,KAAMsC,EAAMC,OAAOC,MAAM,GAAGrE,OAG9B,IAAMU,EAAO,IAAI4D,SACjB,YAAIH,EAAMC,OAAOC,OAAOqF,SAAQ,SAAA7H,GAC9BnB,EAAK6D,OAAO,OAAQ1C,MAEtB,IAAK,IAAI2G,EAAI,EAAGA,EAAIrE,EAAMC,OAAOC,MAAMsF,OAAQnB,IAE7CiB,EAAU5K,KAAKsF,EAAMC,OAAOC,MAAMmE,GAAGxI,MAGxB4D,IAAe,EAAKzG,MAAM8E,UACzC,EAAKlB,SAAS,CAAEoB,SAAS,IACzB7B,IAAMkE,KAAN,UAAc/H,EAAOO,qBAArB,eAAwD0D,GAAMF,MAAK,WACjE,EAAKO,SAAS,CACZoB,SAAS,EACTC,eAAe,EACfoH,YAAY,EACZnF,MAAOoF,Q,EAMb/E,cAAgB,SAAAP,GACdA,EAAMQ,iBACN,IAAMC,EAAShB,IAAe,EAAKzG,MAAM8E,UACrC,EAAK9E,MAAMyE,KAAO,EAAKzE,MAAM0E,MAC/B,EAAKd,SAAS,CAAEgB,WAAW,EAAMd,MAAO,OACxC2D,EAAOf,KAAK,WAAY,EAAK1G,MAAM6E,OACnC4C,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3BmC,SAAU,EAAK1H,MAAM0E,KACrBD,IAAK,EAAKzE,MAAMyE,OAGlB,EAAKb,SAAS,CAAEE,MAAO,4C,EAG3B6D,cAAgB,WACd,EAAK/D,SAAS,CAAEgB,WAAW,EAAMM,UAAU,EAAOpB,MAAO,OACzD,IAAM2D,EAAShB,IAAe,EAAKzG,MAAM8E,UACzC2C,EAAO1H,UAEP0H,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3Bd,IAAK,EAAKzE,MAAMyE,O,EAGpBmD,aAAe,WACblE,QAAQC,IAAI,qBACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,UAEpC,EAAK9E,MAAM4E,YAGhB6C,EAAOf,KAAK,QAAS,GACrBhD,QAAQC,IAAI,mBACZ,EAAKC,SAAS,CAAEoB,SAAS,M,EAE3ByH,gBAAkB,SAAA3C,GAChBA,EAAEtC,iBACF,EAAK5D,SAAS,CAAEyI,YAAY,K,EAE9BK,iBAAmB,SAAA5C,GACjBA,EAAEtC,iBACF,EAAK5D,SAAS,CAAEyI,YAAY,K,EAE9BM,cAAgB,SAAA7C,GACdA,EAAEtC,iBACF,IACIN,EADK4C,EAAE8C,aACI1F,MACf,EAAKtD,SAAS,CACZc,KAAMwC,EAAM,GAAGrE,OAGjBa,QAAQC,IAAIuD,EAAO,mBACnB,IAAM3D,EAAO,IAAI4D,SACbmF,EAAY,GAChB,YAAIpF,GAAOqF,SAAQ,SAAA7H,GACjBnB,EAAK6D,OAAO,OAAQ1C,MAEtB,IAAK,IAAI2G,EAAI,EAAGA,EAAInE,EAAMsF,OAAQnB,IAEhCiB,EAAU5K,KAAKwF,EAAMmE,GAAGxI,MAG1B,EAAKe,SAAS,CAAEoB,SAAS,IACzB7B,IACGkE,KADH,UACW/H,EAAOO,qBADlB,eACqD0D,GAClDF,MAAK,WACJ,EAAKO,SAAS,CACZoB,SAAS,EACTC,eAAe,EACfiC,MAAOoF,EACPD,YAAY,OAGfxI,OAAM,SAAAmI,GACLtI,QAAQC,IAAIqI,EAAI1I,c,sFAtbLmD,IAAetC,KAAKnE,MAAM8E,UAClC+C,e,0CAGY,IAAD,OAClBnE,QAAQC,IAAIrB,SAASuK,SAAU,cAC/B,IAAM1M,EAAQiC,aAAaW,QAAQ,SAEnC,GAAK5C,EAEE,CACL,IAAI6C,EAAS,CACXC,QAAS,CACP,eAAgB9C,IAGhB+C,EAAG,UAAM5D,EAAOM,gBAAb,kBACPuD,IACGC,IAAIF,EAAKF,GACTK,MAAK,SAAAC,GAAY,MAGiBA,EAASC,KAAlCC,EAHQ,EAGRA,MAAOC,EAHC,EAGDA,IAAKd,EAHJ,EAGIA,SACpBe,QAAQC,IAAIH,EAAOC,EAAKd,MAGzBkB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,GACZxB,SAASC,SAASC,KAAO,QAEzBkB,QAAQC,IAAIG,GACRA,EAAMR,SAASC,KAAKQ,KAEtBL,QAAQC,IAAIG,EAAMR,SAASC,KAAKQ,aAxBtCzB,SAASC,SAASC,KAAO,QA8B3BW,IACGC,IADH,UACU9D,EAAOO,qBADjB,+BAEGwD,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACHA,EAAKuE,QACP,EAAKlE,SAAS,CAAEyB,gBAAiB9B,EAAKuE,SAExCpE,QAAQC,IAAIJ,GAJM,IAOhB4B,EAUE5B,EAVF4B,eACAC,EASE7B,EATF6B,iBACAqG,EAQElI,EARFkI,cACAnG,EAOE/B,EAPF+B,aACAiG,EAMEhI,EANFgI,aACAI,EAKEpI,EALFoI,WACAC,EAIErI,EAJFqI,aACAC,EAGEtI,EAHFsI,aACAC,EAEEvI,EAFFuI,cACA/D,EACExE,EADFwE,aAEExE,EAAK0E,KAAKD,SACZ,EAAKpE,SAAS,CACZsB,UAAU,EACVF,SAAS,IAGTzB,EAAK0E,KAAKC,WACZ,EAAKtE,SAAS,CACZgB,WAAW,EACXF,KAAMnB,EAAK0E,KAAKE,cAGhB5E,EAAK0E,KAAK6E,UACZ,EAAKlJ,SAAS,CACZsD,MAAO3D,EAAK0E,KAAK6E,WAGjBvJ,EAAK0E,KAAKG,oBACZ,EAAKxE,SAAS,CACZa,IAAKlB,EAAK0E,KAAKG,qBAGf7E,EAAK0E,KAAKuD,YACZ,EAAK5H,SAAS,CACZ4H,WAAYjI,EAAK0E,KAAKuD,aAGtBjI,EAAK0E,KAAK1C,eACZ,EAAK3B,SAAS,CACZ2B,eAAgBhC,EAAK0E,KAAK1C,iBAG5B,EAAK3B,SAAS,CACZ2B,gBAAgB,IAGpB,EAAK3B,SAAS,CACZuB,iBACAC,mBACAqG,gBACAF,eACAjG,eACAqG,aACAC,eACAC,eACAC,gBACA/G,UAAWgD,EACX/C,SAAS,IAEXtB,QAAQC,IAAI,QACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,UACzC2C,EAAO1H,UACP0H,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLpD,eAAgBoD,EAAUpD,eAAiB,SAIjDsC,EAAOY,GAAG,4BAA4B,SAAAC,GACpC,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLrB,MAAOqB,EAAUrB,MAAM6F,MAAM,UAInCtF,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLkD,cAAelD,EAAUkD,cAAgB,SAI/ChE,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLnD,iBAAkBmD,EAAUnD,iBAAmB,SAIrDqC,EAAOY,GAAG,WAAW,SAAAC,GACnB5E,QAAQC,IAAI,WACZ,EAAKC,UAAS,SAAA2E,GACZ,MAAO,CACLjD,aAAciD,EAAUjD,aAAe,SAI7CmC,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLgD,aAAchD,EAAUgD,aAAe,SAI7C9D,EAAOY,GAAG,QAAQ,SAAAC,GAEhB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLoD,WAAYpD,EAAUoD,WAAa,SAIzClE,EAAOY,GAAG,eAAe,SAAA9E,GACvB,EAAKK,SAAS,CAAE4H,WAAYjI,OAG9BkE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLqD,aAAcrD,EAAUqD,aAAe,SAI7CnE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLsD,aAActD,EAAUsD,aAAe,SAI7CpE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLuD,cAAevD,EAAUuD,cAAgB,SAK/CrE,EAAOY,GAAG,QAAQ,SAAA9E,GACZA,GACF,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,OAIhBuC,EAAOY,GAAG,qBAAqB,SAAA9E,GAC7BG,QAAQC,IAAI,sBACZ,EAAKC,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,KACNwC,MAAO,QAGXO,EAAOY,GAAG,QAAQ,SAAA9E,GAChB,EAAKK,SAAS,CACZmB,UAAWyD,SAAS,EAAKxI,MAAM+E,WAAa,OAGhD0C,EAAOY,GAAG,aAAa,SAAA9E,GACrB,EAAKK,SAAS,CACZsB,UAAU,EACVG,gBAAiB9B,EACjByB,SAAS,OAIbyC,EAAOY,GAAG,iBAAiB,SAAA9E,GACzB,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,e,+BAqNN,IAAD,OACDM,EACJ,yBAAK7D,UAAWC,IAAQ4D,SACtB,uCAGAyD,EACF,kBAAC,IAAMtG,SAAP,KACE,yBAAKhB,UAAWC,IAAQsH,MACtB,yBAAKvH,UAAWC,IAAQyH,UACtB,2BACEhD,KAAK,OACLkE,MAAO5F,KAAKnE,MAAMyE,IAClB6E,SAAU,SAAAQ,GAAC,OAAI,EAAKlG,SAAS,CAAEa,IAAKqF,EAAE7C,OAAO8C,SAC7CR,YAAY,qBAGhB,yBACE3H,MAAO,CACL+G,MAAO,MACPC,OAAQ,GAEVzH,UAAU,IAETgD,KAAKnE,MAAM8D,OAEd,yBAAK3C,UAAWC,IAAQyH,UACrB1E,KAAKnE,MAAM4E,UACV,yBAAKzD,UAAWC,IAAQ0H,UACtB,2CAAiB3E,KAAKnE,MAAMkH,MAAM,GAAlC,OACA,uCACA,yBAAK/F,UAAU,IACZgD,KAAKnE,MAAMkH,MAAM6F,MAAM,GAAG3I,KAAI,SAAC4I,EAAM3B,GACpC,OAAO,uBAAG/G,IAAK+G,GAAI2B,OAGvB,kBAAC,EAAD,OAGF,yBACE7L,UAAWC,IAAQ6L,SACnBrL,MAAO,CACLsL,OAAQ,kBACRC,QAAShJ,KAAKnE,MAAMqM,WAAa,GAAM,GAEzCe,WAAYjJ,KAAKsI,gBACjBY,OAAQlJ,KAAKwI,cACbW,YAAanJ,KAAKuI,kBAElB,2BACE7G,KAAK,OAEL0H,UAAQ,EACRjE,SAAUnF,KAAK4C,gBACfwC,YAAY,cAEbpF,KAAKnE,MAAMkH,MAAMsF,QAAU,EAC1B,oEACE,KACJ,yBAAKrL,UAAU,IACZgD,KAAKnE,MAAMkH,MAAM9C,KAAI,SAACoJ,EAAGnC,GAAJ,OACpB,uBAAG/G,IAAK+G,GAAImC,SAMtB,yBAAKrM,UAAWC,IAAQoI,kBACtB,yBACE/H,QAAS,kBAAM,EAAKmC,SAAS,CAAE2B,gBAAgB,KAC/CpE,UAAWC,IAAQqI,eAEnB,sEAA+C,IAC/C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,MAAOxE,KAAKnE,MAAMuF,eAAiB,aAAe,UAGtD,yBACE9D,QAAS,kBACP,EAAKmC,SAAS,CACZ2B,gBAAgB,KAGpBpE,UAAWC,IAAQqI,eAEnB,mEAA4C,IAC5C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,OACgC,IAA9BxE,KAAKnE,MAAMuF,eAA2B,aAAe,WAM7D,yBAAKpE,UAAWC,IAAQuI,cACtB,oEACA,2BACE9D,KAAK,QACL+D,IAAI,IACJC,IAAI,MACJP,SAAU,SAAAQ,GACR,EAAKlG,SAAS,CAAEiB,MAAOiF,EAAE7C,OAAO8C,QACjBtD,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,WAAYoD,EAAE7C,OAAO8C,QAEnCA,MAAO5F,KAAKnE,MAAM6E,MAClB1D,UAAWC,IAAQ4I,OACnBX,GAAG,YAEL,qCAAWlF,KAAKnE,MAAM6E,MAAtB,cAGJ,yBAAK1D,UAAU,IACZgD,KAAKnE,MAAM+E,UAAY,GACxBZ,KAAKnE,MAAMmF,gBAAkB,GAC7BhB,KAAKnE,MAAMyL,eAAiB,GAC5BtH,KAAKnE,MAAMoF,kBAAoB,EAC7B,yBAAKjE,UAAWC,IAAQ8K,UACtB,uBAAG/K,UAAWC,IAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMmF,eAAiBhB,KAAKnE,MAAM+E,UACxC,KACAqH,QAAQ,GALZ,KAQA,uBAAGjL,UAAWC,IAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMyL,cAAgBtH,KAAKnE,MAAM+E,UACvC,KACAqH,QAAQ,GALZ,KAQA,uBAAGjL,UAAWC,IAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMoF,iBAAmBjB,KAAKnE,MAAM+E,UAC1C,KACAqH,QAAQ,GALZ,MASA,KACJ,yBAAKjL,UAAWC,IAAQ2D,WACrBZ,KAAKnE,MAAMiF,cAAgB,+CAA0B,KACtD,2BAAId,KAAKwC,iBAAiBxC,KAAKnE,MAAM+E,WAArC,WAEF,yBAAK5D,UAAWC,IAAQ2D,WAErBZ,KAAKnE,MAAM4E,UACV,2BACGT,KAAKwC,iBACJxC,KAAKnE,MAAMwL,WAAarH,KAAKnE,MAAM+E,WAClC,IAHL,cAME,MAEN,yBAAK5D,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMmF,gBADpC,KACuD,IACrD,kBAAC,IAAD,CAAGwD,MAAM,aAAaO,KAAMQ,QAGhC,yBAAKvI,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMoF,kBADpC,KACyD,IACvD,kBAAC,IAAD,CAAG8D,KAAMe,IAActB,MAAM,UAGjC,yBAAKxH,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMyL,eADpC,KACsD,IACpD,kBAAC,IAAD,CAAGvC,KAAMe,IAActB,MAAM,YAGjC,yBAAKxH,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMuL,cADpC,OACuD,MAIzD,yBAAKpK,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM4L,cADpC,OACuD,MAIzD,yBAAKzK,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM6L,cADpC,OACuD,MAIzD,yBAAK1K,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM2L,YADpC,QACsD,MAIxD,yBAAKxK,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM8L,eADpC,QACyD,MAI3D,yBAAK3K,UAAWC,IAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMsF,cADpC,SACyD,MAI3D,4BAAQ7D,QAAS0C,KAAK4H,mBAAtB,mBAqCN,OAjCI5H,KAAKnE,MAAMkF,WACbuD,EACE,yBAAKtH,UAAWC,IAAQ8I,YACtB,0HAIA,yBAAK/I,UAAWC,IAAQ+I,cACtB,4BAAQhJ,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKwD,eAAjD,4CAIF,yBAAKxG,UAAWC,IAAQ+I,cACtB,4BAAQhJ,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKqB,gBAAjD,kBAKF,yBAAKrE,UAAWC,IAAQ+I,cACtB,4BACEhJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,KAJxB,6BAeN,6BACGvC,KAAKnE,MAAMgF,QAAUA,EAAU,KAChC,kBAAC,EAAD,CACExE,YAAU,EACVG,gBAAiB,kBAAM,EAAK6D,MAAM1D,QAAQY,KAAK,eAC/Cd,qBAAsB,kBACpB,EAAK4D,MAAM1D,QAAQY,KAAK,uBAG1B,yBAAKP,UAAWC,IAAQiJ,UACtB,yBAAKlJ,UAAWC,IAAQkJ,WAAY7B,GAEnCtE,KAAKnE,MAAMkF,UAAYf,KAAKnE,MAAM4E,UAAY,KAC7C,4BAAQzD,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKoD,eAAjD,kBAKJ,yBAAKpG,UAAWC,IAAQ+I,cACtB,4BACEhJ,UAAWC,IAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,KAJxB,sBAUDvC,KAAKnE,MAAMkF,WAAaf,KAAKnE,MAAM4E,UAAY,MAAQT,KAAKnE,MACxDkF,UAAYf,KAAKnE,MAAM4E,UAC1B,yBAAKzD,UAAU,IACb,4BAAQA,UAAWC,IAAQgJ,OAAQ3I,QAAS0C,KAAKyD,cAAjD,UAIA,KACJ,yBAAKzG,UAAU,W,GAzvBN5B,a,iBCqHJkO,E,2MAvHbzN,MAAQ,CACN0N,aAAc,GACdnJ,KAAM,EACNS,SAAS,G,EAgBX2I,WAAa,WACX,EAAK/J,SAAS,CAAEoB,SAAS,IACzB7B,IACGC,IADH,UACUwK,EAAOlO,WADjB,iCACoD,EAAKM,MAAMuE,OAC5DlB,MAAK,YAAe,IACfwK,EADc,EAAXtK,KACUmK,aACjBhK,QAAQC,IAAIkK,GACZ,EAAKjK,UAAS,SAAAS,GACZ,MAAO,CACLqJ,aAAcG,U,EAMxBlH,iBAAmB,SAAAC,GACjB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,M,mFA9BlC,IAAD,OAClB3D,IACGC,IADH,UACUwK,EAAOlO,WADjB,4BAEG2D,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACHsK,EAAQtK,EACZG,QAAQC,IAAIJ,GACZ,EAAKK,UAAS,SAAAS,GACZ,MAAO,CACLqJ,aAAa,GAAD,mBAAMrJ,EAAEqJ,cAAR,YAAyBG,IACrC7I,SAAS,W,+BAuBT,IAAD,OACP,OACE,kBAAC,EAAD,0DAEGb,KAAKnE,MAAM0N,cACVvJ,KAAKnE,MAAM0N,aAAatJ,KAAI,SAAA0J,GAC1B,OACE,yBAAK3M,UAAWC,IAAQ2M,KACtB,yBAAK5M,UAAWC,IAAQ2D,WACrB,EAAK/E,MAAMiF,cAAgB,+CAA0B,KACtD,2BAAI,EAAK0B,iBAAiBmH,EAAE/I,WAA5B,WAEF,yBAAK5D,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAE3I,gBAD3B,KAC8C,IAC5C,kBAAC,IAAD,CAAGwD,MAAM,aAAaO,KAAMQ,QAGhC,yBAAKvI,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAE1I,kBAD3B,KACgD,IAC9C,kBAAC,IAAD,CAAG8D,KAAMe,IAActB,MAAM,UAGjC,yBAAKxH,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAErC,eAD3B,KAC6C,IAC3C,kBAAC,IAAD,CAAGvC,KAAMe,IAActB,MAAM,YAGjC,yBAAKxH,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAEvC,cAD3B,OAC8C,MAIhD,yBAAKpK,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAElC,cAD3B,OAC8C,MAIhD,yBAAKzK,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAEjC,cAD3B,OAC8C,MAIhD,yBAAK1K,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAEnC,YAD3B,QAC6C,MAI/C,yBAAKxK,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAEhC,eAD3B,QACgD,MAIlD,yBAAK3K,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAExI,cAD3B,SACgD,MAIlD,yBAAKnE,UAAWC,IAAQ2D,WACtB,2BACG,EAAK4B,iBAAiBmH,EAAEE,cAAgB,GAD3C,SACqD,UAQ/D,8C,GAlHgBzO,a,wFC2DT0O,GA9DM,SAAC,GAQf,IAPLC,EAOI,EAPJA,EACAC,EAMI,EANJA,gBACAC,EAKI,EALJA,wBAEAC,GAGI,EAJJC,WAII,EAHJD,mBACAE,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,OACE,yBAAKrN,UAAU,IACb,yBACEA,UAAWC,KAAQ6M,aACnBrM,MAAO,CAAE+G,MAAOuF,EAAEO,YAAc,UAAY,SAE5C,yBAAKtN,UAAWC,KAAQsH,MACtB,uBAAGvH,UAAWC,KAAQsN,MAAOR,EAAE1O,QAC/B,+BAAK0O,EAAES,QAET,yBAAKxN,UAAWC,KAAQwN,MAAOnN,QAAS8M,GAAxC,KAGCC,EAAW,KACV,yBAAKrN,UAAU,IACZ+M,EAAEW,YACD,kBAAC,IAAD,CAAG3F,KAAMQ,IAASf,MAAM,aAAamG,KAAK,OAE1C,yBAAK3N,UAAWC,KAAQ2N,OACtB,4BACEC,UAAWd,EAAEO,YACbhN,QAAS,kBAAM0M,EAAgBD,EAAE1O,UAEhC0O,EAAEO,YAAc,WAAa,oBAOzCP,EAAEe,eACD,yBAAK9N,UAAWC,KAAQ8N,mBACtB,2BACGhB,EAAE1O,OADL,oBAC8B0O,EAAEI,aAGhCJ,EAAEW,YACJ,yBAAK1N,UAAWC,KAAQ+N,aACtB,2BACEtJ,KAAK,OACLhD,KAAK,aAELyG,SAAU,SAAAQ,GAAC,OAAIsE,EAAwBtE,EAAGoE,EAAE1O,SAC5C+J,YAAY,mCAGd,4BAAQ9H,QAAS,kBAAM4M,EAAkBH,EAAE1O,UAA3C,WAEA,OC83CK4P,G,2MA/sBbpP,MAAQ,CACNqP,QAAS,GACTC,aAAc7I,IAAemH,EAAOhO,iBACpC2P,YAAa,CAAC,CAAE1M,KAAM,UAAWwG,GAAI,UACrCvE,SAAU8I,EAAOpO,OACjBgQ,SAAU,GACVC,QAAS,CACP,CAAE5M,KAAM,OAAQwG,GAAI,SACpB,CAAExG,KAAM,QAASwG,GAAI,SAEvBqG,OAAQ,GACRC,WAAY,CAAC,CAAE9M,KAAM,OAAQwG,GAAI,UACjCuG,OAAQ,GACRC,WAAY,CACV,CAAEhN,KAAM,QAASwG,GAAI,SACrB,CAAExG,KAAM,MAAOwG,GAAI,SAErByG,aAAc,EACdC,aAAc,GACdC,oBAAqB,KACrBC,YAAY,EACZnM,MAAO,GACPoM,kBAAmB,GACnBC,SAAU,EACVC,kBAAkB,EAClBC,mBAAoB,GA0EpBC,sBAAuB,I,EAkKzBC,iBAAmB,SAAClH,EAAImH,GACtB,IACIC,EADI,YAAO,EAAKzQ,MAAMwQ,IACJE,QAAO,SAAAC,GAAC,OAAIA,EAAEtH,KAAOA,KAC3C,EAAKzF,SAAL,eAAiB4M,EAAcC,K,EAEjCG,eAAiB,SAAA9G,GACf,EAAKlG,SAAL,eAAiBkG,EAAE7C,OAAOpE,KAAOiH,EAAE7C,OAAO8C,S,EAE5C8G,eAAiB,SAAC/G,EAAGgH,EAASC,GAE5B,GAAc,QAAVjH,EAAExF,KAA2B,MAAVwF,EAAExF,IAAa,CAAC,IAAD,EACpCwF,EAAEtC,iBACF,IAAIwJ,EAAM,sBACL,EAAKhR,MAAM8Q,IADN,CAER,CAAEjO,KAAMiH,EAAE7C,OAAO8C,MAAOV,GAAI4H,UAE9B,EAAKrN,UAAL,mBAAiBkN,EAAUE,GAA3B,cAAoCD,EAAe,IAAnD,IACAjH,EAAE7C,OAAOiK,U,EAGbC,MAAQ,SAAAX,GACN,EAAK5M,SAAL,eAAiB4M,EAAc,M,EAEjCrC,gBAAkB,SAAA3O,GAChBkE,QAAQC,IAAInE,GACZ,EAAKQ,MAAMsP,aAAa5I,KAAK,WAAYlH,I,EAE3C4R,uBAAyB,a,EACzBC,iBAAmB,WACjB,EAAKrR,MAAMsP,aAAa5I,KAAK,a,EAE/B4K,SAAW,WAGT,EAAK1N,SAAS,CAAEqM,YAAY,EAAMG,kBAAkB,EAAOtM,MAAO,KAClE,EAAKF,SAAS,CAAEyM,mBAAoB,KACpC,IAAIV,EAAa,EAAK3P,MAAM2P,WACxBE,EAAa,EAAK7P,MAAM6P,WACxBN,EAAc,EAAKvP,MAAMuP,YACzBE,EAAU,EAAKzP,MAAMyP,QARV,EASkC,EAAKzP,MAA9C8P,EATO,EASPA,aAAcC,EATP,EASOA,aAAcI,EATrB,EASqBA,SAEpC,EAAKnQ,MAAMsP,aAAa5I,KAAK,QAAS,CACpCiJ,aACAE,aACAN,cACAE,UACAK,eACAC,eACAI,c,EAIJ/B,wBAA0B,SAACtE,EAAGtK,GAEA,YAAO,EAAKQ,MAAMqQ,oBACrBjM,KAAI,SAAA8J,GAI3B,OAHIA,EAAE1O,SAAWA,IACf0O,EAAEI,WAAaxE,EAAE7C,OAAO8C,OAEnBmE,M,EAGXG,kBAAoB,SAAA7O,GAElB,IACI+R,EADwB,YAAO,EAAKvR,MAAMqQ,oBACLmB,MAAK,SAAAtD,GAAC,OAAIA,EAAE1O,SAAWA,KAChEkE,QAAQC,IAAI4N,EAAUjD,YACtB,EAAKtO,MAAMsP,aAAa5I,KAAK,UAAW,CACtClH,SACA8O,WAAYiD,EAAUjD,c,EAI1BmD,qBAAuB,SAAA3H,GACrB,EAAKlG,SAAL,eAAiBkG,EAAE7C,OAAOpE,KAAOiH,EAAE7C,OAAO8C,S,EAG5C2H,uBAAyB,WACvB,IACIC,EADwB,YAAO,EAAK3R,MAAMsQ,uBACPlM,KAAI,SAAA8J,GACzC,OAAO,gBACFA,EADL,CAEEI,WAAY,EAAKtO,MAAMkQ,uBAI3B,EAAKlQ,MAAMsP,aAAa5I,KAAK,4BAA6BiL,I,EAE5DC,qBAAuB,WACrB,EAAKhO,SAAS,CAAE0M,sBAAuB,GAAIF,kBAAkB,IAC7D,EAAKpQ,MAAMsP,aAAa5I,KAAK,SAAS,I,EAGxCmL,sBAAwB,WACtB,IAAIC,EAAmB,EAAK9R,MAAMgQ,oBAMlC,GAJAtM,QAAQC,IACN,EAAK3D,MAAMqQ,mBACX,EAAKrQ,MAAMsQ,uBAET,EAAKtQ,MAAMsQ,wBAA0BwB,EAIzC,GAAI,EAAK9R,MAAMsQ,sBAAsB9D,OAASsF,EAAkB,CAC9D,IAAIC,EAAgB,sBACf,EAAK/R,MAAMsQ,uBADI,YAEf,EAAKtQ,MAAMqQ,mBAAmBtD,MAC/B,EACA+E,EAAmB,EAAK9R,MAAMsQ,sBAAsB9D,UAGpDwF,EAAiB,EAAKhS,MAAMqQ,mBAAmBtD,MACjD+E,EAAmB,EAAK9R,MAAMsQ,sBAAsB9D,QAEtD9I,QAAQC,IAAIoO,EAAkBC,GAC9B,EAAKpO,SAAS,CACZyM,mBAAoB2B,EACpB1B,sBAAuByB,SAEpB,GAAI,EAAK/R,MAAMsQ,sBAAsB9D,OAASsF,EAAkB,CACrE,IAAIC,EAAmB,EAAK/R,MAAMsQ,sBAAsBvD,MACtD,EAAK/M,MAAMsQ,sBAAsB9D,OAASsF,GAExCE,EAAc,sBACb,EAAKhS,MAAMqQ,oBADE,YAEb,EAAKrQ,MAAMsQ,sBAAsBvD,MAClC,EACA,EAAK/M,MAAMsQ,sBAAsB9D,OAASsF,KAG9CpO,QAAQC,IAAIoO,EAAkBC,GAC9B,EAAKpO,SAAS,CACZyM,mBAAoB2B,EACpB1B,sBAAuByB,M,EAI7BE,oBAAsB,SAACnB,EAASoB,GAC9B,IACIC,EADY,YAAO,EAAKnS,MAAM8Q,IACJJ,QAAO,SAAA0B,GACnC,OAAOA,EAAE5S,SAAW0S,KAEtB,EAAKtO,SAAL,eAAiBkN,EAAUqB,K,mFAjQR,IAAD,OAIlBhO,KAAKnE,MAAMsP,aAAajH,GAAG,mBAAmB,SAAAC,GAC5C,EAAK1E,SAAS,CAAEwM,kBAAkB,OAEpCjM,KAAKnE,MAAMsP,aAAajH,GAAG,iBAAiB,YAAsB,IAAnBtE,EAAkB,EAAlBA,IAAKvE,EAAa,EAAbA,OAClDkE,QAAQC,IAAII,EAAKvE,GACjB,EAAKoE,UAAS,SAAAS,GACZ,MAAO,CACLP,MAAOO,EAAEP,MAAMuO,OAAO,CAAEtO,MAAKvE,kBAKnC2E,KAAKnE,MAAMsP,aAAajH,GAAG,YAAY,SAAAC,GACrC,EAAK1E,SAAS,CAAEqM,YAAY,OAE9B9L,KAAKnE,MAAMsP,aAAajH,GAAG,kBAAkB,SAAAmF,GAE3C,IAAI7H,EAAO,IAAIC,KAAK,CAAC4H,GAAI,CACvB3H,KAAM,eAGF3C,EAAMc,OAAO8B,IAAIC,gBAAgBJ,GACjCF,EAAInD,SAAS0D,cAAc,KACpB,IAAIE,KACjBT,EAAEU,aAAa,SAAUjD,GACzBuC,EAAEU,aAAa,OAAQjD,GACvBuC,EAAEU,aACA,WADF,UAEKmM,KAAO,GAAD,QAAI,IAAIpM,MAAOqM,gBAAiBC,OAAO,cAFlD,YAGI,EAAKxS,MAAMsQ,sBAAsB9D,OAHrC,YAIM,EAAKxM,MAAMkQ,kBAJjB,SAMA5N,SAAS+D,KAAKC,YAAYb,GAC1BA,EAAEc,QACFjE,SAAS+D,KAAKG,YAAYf,MAG5BtB,KAAKnE,MAAMsP,aAAajH,GAAG,cAAc,SAAA9E,GACvC,IAAIkP,EAAa,YAAO,EAAKzS,MAAMqQ,oBACnC3M,QAAQC,IAAI8O,GACZ,IAAId,EAAUc,EAAcJ,OAAd,gBACT9O,EADS,CAEZ+K,WAAY,GACZW,gBAAgB,KAElB,EAAKrL,SAAS,CAAEyM,mBAAoBsB,OAEtCxN,KAAKnE,MAAMsP,aAAajH,GAAG,uBAAuB,SAAA7I,GAChD,IACImS,EAD2B,YAAO,EAAK3R,MAAMsQ,uBACPlM,KAAI,SAAA8J,GAC5C,OAAIA,EAAE1O,SAAWA,EACR,gBACF0O,EADL,CAEEW,aAAa,IAGRX,KAGX,EAAKtK,SAAS,CAAE0M,sBAAuBqB,OAGzCxN,KAAKnE,MAAMsP,aAAajH,GAAG,mBAAmB,SAAA7I,GAC5C,IACImS,EADwB,YAAO,EAAK3R,MAAMqQ,oBACPjM,KAAI,SAAA8J,GACzC,OAAIA,EAAE1O,SAAWA,EACR,gBACF0O,EADL,CAEEW,aAAa,IAGRX,KAGX,EAAKtK,SAAS,CAAEyM,mBAAoBsB,OAGtCxN,KAAKnE,MAAMsP,aAAajH,GAAG,sBAAsB,SAAA7I,GAC/C,IACImS,EAD2B,YAAO,EAAK3R,MAAMsQ,uBACPlM,KAAI,SAAA8J,GAC5C,OAAIA,EAAE1O,SAAWA,EACR,gBACF0O,EADL,CAEEe,gBAAgB,EAChBX,WAAY,EAAKtO,MAAMkQ,oBAGlBhC,KAGX,EAAKtK,SAAS,CAAE0M,sBAAuBqB,OAGzCxN,KAAKnE,MAAMsP,aAAajH,GAAG,kBAAkB,SAAA7I,GAC3C,IACImS,EADwB,YAAO,EAAK3R,MAAMqQ,oBACPjM,KAAI,SAAA8J,GACzC,OAAIA,EAAE1O,SAAWA,EACR,gBACF0O,EADL,CAEEe,gBAAgB,EAChBX,WAAY,EAAKtO,MAAMkQ,oBAGlBhC,KAGX,EAAKtK,SAAS,CAAEyM,mBAAoBsB,S,+BAqJ9B,IAAD,OACP,OACE,yBAAKxQ,UAAWC,KAAQkJ,WACtB,yBAAKnJ,UAAWC,KAAQsR,eACtB,yBAAKvR,UAAWC,KAAQuR,iBACrBxO,KAAKnE,MAAMuP,YAAY/C,OAAS,GAC/BrI,KAAKnE,MAAMuP,YAAYnL,KAAI,SAAAoJ,GAAC,OAC1B,yBAAKlJ,IAAKkJ,EAAEnE,GAAIlI,UAAWC,KAAQwR,KACjC,8BAAOpF,EAAE3K,MACT,uBAAGpB,QAAS,kBAAM,EAAK8O,iBAAiB/C,EAAEnE,GAAI,iBAA9C,SAKLlF,KAAKnE,MAAMuP,YAAY/C,OAAS,EAC/B,uBACErL,UAAWC,KAAQ+P,MACnB1P,QAAS,kBAAM,EAAK0P,MAAM,iBAF5B,cAIchN,KAAKnE,MAAMuP,YAAY/C,OAJrC,KAME,MAEN,yBAAKrL,UAAWC,KAAQyR,iBACtB,2BACEhN,KAAK,OACLhD,KAAK,UACLkH,MAAO5F,KAAKnE,MAAMqP,QAClByD,UAAW,SAAAhJ,GAAC,OAAI,EAAK+G,eAAe/G,EAAG,cAAe,YACtDP,YAAY,0DACZD,SAAUnF,KAAKyM,kBAGnB,yBAAKzP,UAAWC,KAAQ2R,UACtB,yBAAK5R,UAAWC,KAAQ4R,cACtB,0CACA,6BACE,mCAAe,IACf,2BACEjJ,MAAO5F,KAAKnE,MAAM8P,aAClBjK,KAAK,OACLhD,KAAK,eACLyG,SAAUnF,KAAKyM,kBAGnB,iCACA,6BACE,mCAAe,IACf,2BACE7G,MAAO5F,KAAKnE,MAAM+P,aAClBlK,KAAK,OACLhD,KAAK,eACLyG,SAAUnF,KAAKyM,kBAGnB,yBAAKzP,UAAWC,KAAQ6R,YACtB,uBAAG9R,UAAWC,KAAQE,QAAtB,YACA,yBAAKH,UAAWC,KAAQ8R,gBACrB/O,KAAKnE,MAAM2P,WAAWnD,OAAS,GAC9BrI,KAAKnE,MAAM2P,WAAWvL,KAAI,SAAAoJ,GAAC,OACzB,yBAAKlJ,IAAKkJ,EAAEnE,GAAIlI,UAAWC,KAAQwR,KACjC,8BAAOpF,EAAE3K,MACT,uBACEpB,QAAS,kBACP,EAAK8O,iBAAiB/C,EAAEnE,GAAI,gBAFhC,SASLlF,KAAKnE,MAAM2P,WAAWnD,OAAS,EAC9B,uBACErL,UAAWC,KAAQ+P,MACnB1P,QAAS,kBAAM,EAAK0P,MAAM,gBAF5B,cAIchN,KAAKnE,MAAM2P,WAAWnD,OAJpC,KAME,MAEN,yBAAKrL,UAAWC,KAAQ+R,iBACtB,2BACEtN,KAAK,OACLhD,KAAK,SACLkH,MAAO5F,KAAKnE,MAAM0P,OAClBnG,YAAY,yCACZD,SAAUnF,KAAKyM,eACfkC,UAAW,SAAAhJ,GAAC,OACV,EAAK+G,eAAe/G,EAAG,aAAc,eAK7C,yBAAK3I,UAAWC,KAAQ6R,YACtB,uBAAG9R,UAAWC,KAAQE,QAAtB,YACA,yBAAKH,UAAWC,KAAQgS,gBACrBjP,KAAKnE,MAAM6P,WAAWrD,OAAS,GAC9BrI,KAAKnE,MAAM6P,WAAWzL,KAAI,SAAAoJ,GAAC,OACzB,yBAAKlJ,IAAKkJ,EAAEnE,GAAIlI,UAAWC,KAAQwR,KACjC,8BAAOpF,EAAE3K,MACT,uBACEpB,QAAS,kBACP,EAAK8O,iBAAiB/C,EAAEnE,GAAI,gBAFhC,SASLlF,KAAKnE,MAAM6P,WAAWrD,OAAS,EAC9B,uBACErL,UAAWC,KAAQ+P,MACnB1P,QAAS,kBAAM,EAAK0P,MAAM,gBAF5B,cAIchN,KAAKnE,MAAM6P,WAAWrD,OAJpC,KAME,MAEN,yBAAKrL,UAAWC,KAAQ+R,iBACtB,2BACEtN,KAAK,OACLhD,KAAK,SACLkH,MAAO5F,KAAKnE,MAAM4P,OAClBrG,YAAY,yCACZD,SAAUnF,KAAKyM,eACfkC,UAAW,SAAAhJ,GAAC,OACV,EAAK+G,eAAe/G,EAAG,aAAc,gBAM/C,yBAAK3I,UAAWC,KAAQ2N,OACtB,yBAAK5N,UAAWC,KAAQiS,MACtB,yBAAKlS,UAAWC,KAAQkS,YACrBnP,KAAKnE,MAAMyP,QAAQrL,KAAI,SAAAuM,GAAC,OAEvB,yBAAKrM,IAAKqM,EAAEtH,GAAIlI,UAAWC,KAAQwR,KACjC,8BAAOjC,EAAE9N,MACT,uBAAGpB,QAAS,kBAAM,EAAK8O,iBAAiBI,EAAEtH,GAAI,aAA9C,SAMHlF,KAAKnE,MAAMyP,QAAQjD,OAAS,EAC3B,uBACErL,UAAWC,KAAQ+P,MACnB1P,QAAS,kBAAM,EAAK0P,MAAM,aAF5B,cAIchN,KAAKnE,MAAMyP,QAAQjD,OAJjC,KAME,MAEN,yBAAKrL,UAAWC,KAAQmS,cACtB,2BACE1N,KAAK,OACLhD,KAAK,WACLkH,MAAO5F,KAAKnE,MAAMwP,SAClBjG,YAAY,qCACZD,SAAUnF,KAAKyM,eACfkC,UAAW,SAAAhJ,GAAC,OACV,EAAK+G,eAAe/G,EAAG,UAAW,mBAO9C,yBAAK3I,UAAWC,KAAQoS,cACtB,4BACE/R,QAAS0C,KAAKmN,SACdtC,SACE7K,KAAKnE,MAAMuP,YAAY/C,QAAU,GACjCrI,KAAKnE,MAAMyP,QAAQjD,QAAU,GAJjC,cAWHrI,KAAKnE,MAAMiQ,WACV,yBAAK9O,UAAU,IACb,kBAAC,EAAD,OAEA,KACHgD,KAAKnE,MAAM8D,MAAM0I,OAAS,EACzB,uBAAG5K,MAAO,CAAE6R,UAAW,SAAU9K,MAAO,QACrCxE,KAAKnE,MAAM8D,MAAM,GAAGC,KAErB,KAGJ,yBAAK5C,UAAWC,KAAQsS,iBACtB,yBAAKvS,UAAWC,KAAQuS,kBACrBxP,KAAKnE,MAAMqQ,mBAAmB7D,OAAS,GACtCrI,KAAKnE,MAAMqQ,mBAAmBjM,KAAI,SAAAoJ,GAChC,OACE,kBAAC,GAAD,CACEU,EAAGV,EACHe,aAAc,kBACZ,EAAK0D,oBAAoB,qBAAsBzE,EAAEhO,SAEnD2O,gBAAiB,EAAKA,gBACtBC,wBAAyB,EAAKA,wBAC9BE,WAAYd,EAAEc,WACdD,kBAAmB,EAAKA,wBAKlC,yBAAKlN,UAAWC,KAAQwS,iBACtB,yBAAKzS,UAAWC,KAAQ2N,OACtB,4BAAQtN,QAAS0C,KAAKyN,sBAAtB,aACA,4BAAQnQ,QAAS0C,KAAKkN,kBAAtB,iCAIDlN,KAAKnE,MAAMqQ,mBAAmB7D,OAAS,GACxCrI,KAAKnE,MAAMsQ,sBAAsB9D,OAAS,EACxC,yBAAKrL,UAAWC,KAAQyS,wBAGtB,sDAEA,yBAAK1S,UAAWC,KAAQ2N,OACtB,2BACElJ,KAAK,SACLhD,KAAK,sBACLkH,MAAO5F,KAAKnE,MAAMgQ,oBAClB1G,SAAUnF,KAAKyM,eACfrH,YAAY,wDAIhB,yBAAKpI,UAAWC,KAAQ2N,OACtB,4BACEC,UACG7K,KAAKnE,MAAMgQ,qBACZ7L,KAAKnE,MAAMqQ,mBAAmB7D,OAC5BrI,KAAKnE,MAAMsQ,sBAAsB9D,OACjCrI,KAAKnE,MAAMgQ,oBAEfvO,QAAS0C,KAAK0N,uBAPhB,QASQ1N,KAAKnE,MAAMgQ,oBATnB,0BAcF,KACJ,yBAAK7O,UAAWC,KAAQ2N,QACpB5K,KAAKnE,MAAMiQ,YACb9L,KAAKnE,MAAMsQ,sBAAsB9D,OAAS,EACxC,yBAAKrL,UAAWC,KAAQ0S,YACpB3P,KAAKnE,MAAMoQ,iBAUT,KATF,yBAAKjP,UAAWC,KAAQ2N,OACtB,2BACElJ,KAAK,OACLhD,KAAK,oBACLkH,MAAO5F,KAAKnE,MAAMkQ,kBAClB5G,SAAUnF,KAAKsN,qBACflI,YAAY,kEAKlB,KAEHpF,KAAKnE,MAAMoQ,iBAAmB,KAAOjM,KAAKnE,MACtCsQ,sBAAsB9D,OAAS,IACjCrI,KAAKnE,MAAMiQ,WACZ,4BACExO,QAAS0C,KAAKuN,uBACd1C,UAAW7K,KAAKnE,MAAMkQ,mBAFxB,4BAME,MAEL/L,KAAKnE,MAAMsQ,sBAAsB9D,OAAS,GACzCrI,KAAKnE,MAAMsQ,sBAAsBlM,KAAI,SAAAoJ,GACnC,OACE,kBAAC,GAAD,CACEU,EAAGV,EACHe,aAAc,kBACZ,EAAK0D,oBACH,wBACAzE,EAAEhO,SAGNgP,UAAQ,EACRL,gBAAiB,EAAKA,gBACtBC,wBAAyB,EAAKA,wBAC9BE,WAAYd,EAAEc,WACdD,kBAAmB,EAAKA,uBAI/BlK,KAAKnE,MAAMsQ,sBAAsB9D,QAAU,GAC5CrI,KAAKnE,MAAMqQ,mBAAmB7D,QAAU,EACtC,8BAGE,Y,GAxsBejN,a,oBCvqBhBwU,G,2MA9Db/T,MAAQ,CACNgU,SAAU,GACVC,QAAS,KACTC,UAAW,KACXlP,SAAS,G,EAEXmP,iBAAmB,SAAArK,GAEjBpG,QAAQC,IAAImG,EAAE7C,OAAOC,MAAM,GAAGrE,MAC9B,IAAIA,EAAOiH,EAAE7C,OAAOC,MAAM,GAAGrE,KACvBU,EAAO,IAAI4D,SACjB5D,EAAK6D,OAAO,OAAQ0C,EAAE7C,OAAOC,MAAM,IACnC,EAAKtD,SAAS,CAAEoB,SAAS,IACzB7B,IACGkE,KADH,UACW/H,EAAOK,UADlB,eAC0C4D,GACvCF,MAAK,YAAc,EAAXE,KACP,EAAKK,SAAS,CACZoQ,SAAUnR,EACVmC,SAAS,EACTlB,MAAO,QAGVD,OAAM,SAAAiG,GACLpG,QAAQC,IAAImG,GACZpG,QAAQC,IAAImG,EAAExG,UACd,EAAKM,SAAS,CAAEoB,SAAS,EAAOlB,MAAO,6B,wEAI3C,OACE,kBAAC,EAAD,KACE,yBAAK3C,UAAWC,KAAQ2S,KACtB,yBAAK5S,UAAWC,KAAQgT,SACtB,yBAAKjT,UAAWC,KAAQiT,SACtB,4BAAQxR,KAAK,GAAGwG,GAAG,IACjB,4BAAQU,MAAM,IAAd,2BACA,4BAAQA,MAAM,IAAd,MACA,4BAAQA,MAAM,IAAd,oBAIJ,yBAAK5I,UAAWC,KAAQkT,WACtB,2BAAOzO,KAAK,OAAO0D,YAAY,sBAGjC,yBAAKpI,UAAWC,KAAQmT,YACtB,2BAAOtL,QAAQ,SAAf,eADF,IAC8C,IAC5C,8BACG9E,KAAKnE,MAAMgF,QAAU,YAAcb,KAAKnE,MAAMgU,UAEjD,2BAAO1K,SAAUnF,KAAKgQ,iBAAkBtO,KAAK,OAAOwD,GAAG,WAEzD,yBAAKlI,UAAWC,KAAQoT,OACtB,iD,GAtDIjV,a,mBCgqBH+L,G,2MA1pBbtL,MAAQ,CACNyE,IAAK,GACLC,KAAM,KACNE,WAAW,EACXC,MAAO,GACPvB,UAAU,EACVwB,SAAUxF,EAAOQ,uBACjBiF,UAAW,EACXC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVsG,WAAY,EACZ1H,MAAO,KACPqB,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfpG,gBAAiB,GACjBC,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfvG,gBAAgB,G,EAgOlBwG,kBAAoB,WAAO,IAAD,EAYpB,EAAK/L,MAVP+E,EAFsB,EAEtBA,UACAI,EAHsB,EAGtBA,eACAC,EAJsB,EAItBA,iBACAmG,EALsB,EAKtBA,aACAE,EANsB,EAMtBA,cACAnG,EAPsB,EAOtBA,aACAqG,EARsB,EAQtBA,WACAC,EATsB,EAStBA,aACAC,EAVsB,EAUtBA,aACAC,EAXsB,EAWtBA,cAEF,EAAKlI,SAAS,CACZmB,UAAW,EACXC,SAAS,EACTG,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfnG,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,IAEjB,IAAMvI,EAAO,CACXwB,YACAI,iBACAC,mBACAmG,eACAE,gBACAnG,eACAqG,aACAC,eACAC,eACAC,iBAEFpI,QAAQC,IAAIJ,GAEZJ,IACGkE,KADH,UACW/H,EAAOQ,uBADlB,kBAC0DyD,GACvDF,MAAK,SAAA2H,GACJ,EAAKpH,SAAS,CACZmB,UAAW,EACXC,SAAS,EACTG,eAAgB,EAChBC,iBAAkB,EAClBmG,aAAc,EACdE,cAAe,EACfnG,aAAc,EACdqG,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,cAAe,OAGlBjI,OAAM,SAAAmI,GACLtI,QAAQC,IAAIqI,EAAI1I,UAChB,EAAKM,SAAS,CACZmB,YAEAI,iBACAC,mBACAmG,eACAE,gBACAnG,eACAqG,aACAC,eACAC,eACAC,sB,EAKRtG,eAAiB,mBAAAC,EAAA,WAAAA,EAAAC,OAAA,gDACXC,EAAO,IAAIC,KAAK,CAAC,EAAK5F,MAAMqF,iBAAkB,CAChDQ,KAAM,eAGF3C,EAAMc,OAAO8B,IAAIC,gBAAgBJ,GACjCF,EAAInD,SAAS0D,cAAc,KAC3BC,EAAO,IAAIC,KACjBT,EAAEU,aAAa,SAAUjD,GACzBuC,EAAEU,aAAa,OAAQjD,GACvBuC,EAAEU,aAAa,WAAf,kBAAsCF,EAAKG,kBAA3C,SACA9D,SAAS+D,KAAKC,YAAYb,GAC1BA,EAAEc,QACFjE,SAAS+D,KAAKG,YAAYf,GAbX,uC,EAiBjBkB,iBAAmB,SAAAC,GACjB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,M,EAEvDC,gBAAkB,SAAAC,GAChBtD,QAAQC,IAAIqD,EAAMC,OAAOC,MAAM,IAC/B,EAAKtD,SAAS,CAAEc,KAAMsC,EAAMC,OAAOC,MAAM,GAAGrE,OAC5C,IAAMU,EAAO,IAAI4D,SACjB5D,EAAK6D,OAAO,OAAQJ,EAAMC,OAAOC,MAAM,IACxBT,IAAe,EAAKzG,MAAM8E,UACzC,EAAKlB,SAAS,CAAEoB,SAAS,IACzB7B,IAAMkE,KAAN,UAAc/H,EAAOQ,uBAArB,eAA0DyD,GAAMF,MAAK,WACnE,EAAKO,SAAS,CACZoB,SAAS,EACTC,eAAe,Q,EAMrBsC,cAAgB,SAAAP,GACdA,EAAMQ,iBACN,IAAMC,EAAShB,IAAe,EAAKzG,MAAM8E,UACrC,EAAK9E,MAAMyE,KAAO,EAAKzE,MAAM0E,MAC/B,EAAKd,SAAS,CAAEgB,WAAW,EAAMd,MAAO,OACxC2D,EAAOf,KAAK,WAAY,EAAK1G,MAAM6E,OACnC4C,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3BmC,SAAU,EAAK1H,MAAM0E,KACrBD,IAAK,EAAKzE,MAAMyE,OAGlB,EAAKb,SAAS,CAAEE,MAAO,4C,EAG3B6D,cAAgB,WACd,EAAK/D,SAAS,CAAEgB,WAAW,EAAMM,UAAU,EAAOpB,MAAO,OACzD,IAAM2D,EAAShB,IAAe,EAAKzG,MAAM8E,UACzC2C,EAAO1H,UAEP0H,EAAOf,KAAK,QAAS,CAEnBnB,eAAgB,EAAKvF,MAAMuF,eAC3Bd,IAAK,EAAKzE,MAAMyE,O,EAGpBmD,aAAe,WACblE,QAAQC,IAAI,qBACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,UAEpC,EAAK9E,MAAM4E,YAGhB6C,EAAOf,KAAK,QAAS,GACrBhD,QAAQC,IAAI,mBACZ,EAAKC,SAAS,CAAEoB,SAAS,M,sFA/WVyB,IAAetC,KAAKnE,MAAM8E,UAClC+C,e,0CAGY,IAAD,OACZ1H,EAAQiC,aAAaW,QAAQ,SAEnC,GAAK5C,EAEE,CACL,IAAI6C,EAAS,CACXC,QAAS,CACP,eAAgB9C,IAGhB+C,EAAG,UAAM5D,EAAOM,gBAAb,kBACPuD,IACGC,IAAIF,EAAKF,GACTK,MAAK,SAAAC,GAAY,MAGiBA,EAASC,KAAlCC,EAHQ,EAGRA,MAAOC,EAHC,EAGDA,IAAKd,EAHJ,EAGIA,SACpBe,QAAQC,IAAIH,EAAOC,EAAKd,MAGzBkB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,GACZxB,SAASC,SAASC,KAAO,QAEzBkB,QAAQC,IAAIG,GACRA,EAAMR,SAASC,KAAKQ,KAEtBL,QAAQC,IAAIG,EAAMR,SAASC,KAAKQ,aAxBtCzB,SAASC,SAASC,KAAO,QA8B3BW,IACGC,IADH,UACU9D,EAAOQ,uBADjB,+BAEGuD,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACHA,EAAKuE,QACP,EAAKlE,SAAS,CAAEyB,gBAAiB9B,EAAKuE,SAExCpE,QAAQC,IAAIJ,GAJM,IAOhB4B,EAUE5B,EAVF4B,eACAC,EASE7B,EATF6B,iBACAqG,EAQElI,EARFkI,cACAnG,EAOE/B,EAPF+B,aACAiG,EAMEhI,EANFgI,aACAI,EAKEpI,EALFoI,WACAC,EAIErI,EAJFqI,aACAC,EAGEtI,EAHFsI,aACAC,EAEEvI,EAFFuI,cACA/D,EACExE,EADFwE,aAEExE,EAAK0E,KAAKD,SACZ,EAAKpE,SAAS,CACZsB,UAAU,EACVF,SAAS,IAGTzB,EAAK0E,KAAKC,WACZ,EAAKtE,SAAS,CACZgB,WAAW,EACXF,KAAMnB,EAAK0E,KAAKE,cAGhB5E,EAAK0E,KAAKuD,YACZ,EAAK5H,SAAS,CACZ4H,WAAYjI,EAAK0E,KAAKuD,aAGtBjI,EAAK0E,KAAKG,oBACZ,EAAKxE,SAAS,CACZa,IAAKlB,EAAK0E,KAAKG,qBAGf7E,EAAK0E,KAAK1C,eACZ,EAAK3B,SAAS,CACZ2B,eAAgBhC,EAAK0E,KAAK1C,iBAG5B,EAAK3B,SAAS,CACZ2B,gBAAgB,IAGpB,EAAK3B,SAAS,CACZuB,iBACAC,mBACAqG,gBACAF,eACAjG,eACAqG,aACAC,eACAC,eACAC,gBACA/G,UAAWgD,EACX/C,SAAS,IAEXtB,QAAQC,IAAI,QACZ,IAAM8D,EAAShB,IAAe,EAAKzG,MAAM8E,UACzC2C,EAAO1H,UACP0H,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLpD,eAAgBoD,EAAUpD,eAAiB,SAIjDsC,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLkD,cAAelD,EAAUkD,cAAgB,SAI/ChE,EAAOY,GAAG,WAAW,SAAAC,GACnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLnD,iBAAkBmD,EAAUnD,iBAAmB,SAIrDqC,EAAOY,GAAG,WAAW,SAAAC,GACnB5E,QAAQC,IAAI,WACZ,EAAKC,UAAS,SAAA2E,GACZ,MAAO,CACLjD,aAAciD,EAAUjD,aAAe,SAI7CmC,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLgD,aAAchD,EAAUgD,aAAe,SAI7C9D,EAAOY,GAAG,QAAQ,SAAAC,GAEhB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLoD,WAAYpD,EAAUoD,WAAa,SAIzClE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLqD,aAAcrD,EAAUqD,aAAe,SAI7CnE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLsD,aAActD,EAAUsD,aAAe,SAI7CpE,EAAOY,GAAG,eAAe,SAAA9E,GACvB,EAAKK,SAAS,CAAE4H,WAAYjI,OAE9BkE,EAAOY,GAAG,WAAW,SAAAC,GAEnB,EAAK1E,UAAS,SAAA2E,GACZ,MAAO,CACLuD,cAAevD,EAAUuD,cAAgB,SAK/CrE,EAAOY,GAAG,QAAQ,SAAA9E,GACZA,GACF,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,OAIhBuC,EAAOY,GAAG,qBAAqB,SAAA9E,GAC7BG,QAAQC,IAAI,sBACZ,EAAKC,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,UAGV+C,EAAOY,GAAG,QAAQ,SAAA9E,GAChB,EAAKK,SAAS,CACZmB,UAAWyD,SAAS,EAAKxI,MAAM+E,WAAa,OAGhD0C,EAAOY,GAAG,aAAa,SAAA9E,GACrB,EAAKK,SAAS,CACZsB,UAAU,EACVG,gBAAiB9B,EACjByB,SAAS,OAIbyC,EAAOY,GAAG,iBAAiB,SAAA9E,GACzB,EAAKK,SAAS,CACZgB,WAAW,EACXM,UAAU,EACVD,eAAe,EACfP,KAAM,e,+BA4JN,IAAD,OACDM,EACJ,yBAAK7D,UAAWC,KAAQ4D,SACtB,uCAGAyD,EACF,kBAAC,IAAMtG,SAAP,KACE,yBAAKhB,UAAWC,KAAQsH,MACtB,yBAAKvH,UAAWC,KAAQyH,UACtB,2BACEhD,KAAK,OACLkE,MAAO5F,KAAKnE,MAAMyE,IAClB6E,SAAU,SAAAQ,GAAC,OAAI,EAAKlG,SAAS,CAAEa,IAAKqF,EAAE7C,OAAO8C,SAC7CR,YAAY,qBAGhB,yBACE3H,MAAO,CACL+G,MAAO,MACPC,OAAQ,GAEVzH,UAAU,IAETgD,KAAKnE,MAAM8D,OAEd,yBAAK3C,UAAWC,KAAQyH,UACrB1E,KAAKnE,MAAM4E,UACV,yBAAKzD,UAAWC,KAAQ0H,UACtB,2CAAiB3E,KAAKnE,MAAM0E,KAA5B,OACA,kBAAC,EAAD,OAGF,2BACEmB,KAAK,OAELyD,SAAUnF,KAAK4C,gBACfwC,YAAY,eAIlB,yBAAKpI,UAAWC,KAAQoI,kBACtB,yBACE/H,QAAS,kBAAM,EAAKmC,SAAS,CAAE2B,gBAAgB,KAC/CpE,UAAWC,KAAQqI,eAEnB,sEAA+C,IAC/C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,MAAOxE,KAAKnE,MAAMuF,eAAiB,aAAe,UAGtD,yBACE9D,QAAS,kBACP,EAAKmC,SAAS,CACZ2B,gBAAgB,KAGpBpE,UAAWC,KAAQqI,eAEnB,mEAA4C,IAC5C,kBAAC,IAAD,CACEP,KAAMQ,IACNf,OACgC,IAA9BxE,KAAKnE,MAAMuF,eAA2B,aAAe,WAM7D,yBAAKpE,UAAWC,KAAQuI,cACtB,oEACA,2BACE9D,KAAK,QACL+D,IAAI,IACJC,IAAI,MACJP,SAAU,SAAAQ,GACR,EAAKlG,SAAS,CAAEiB,MAAOiF,EAAE7C,OAAO8C,QACjBtD,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,WAAYoD,EAAE7C,OAAO8C,QAEnCA,MAAO5F,KAAKnE,MAAM6E,MAClB1D,UAAWC,KAAQ4I,OACnBX,GAAG,YAEL,qCAAWlF,KAAKnE,MAAM6E,MAAtB,cAGJ,yBAAK1D,UAAU,IACZgD,KAAKnE,MAAM+E,UAAY,GACxBZ,KAAKnE,MAAMmF,gBAAkB,GAC7BhB,KAAKnE,MAAMyL,eAAiB,GAC5BtH,KAAKnE,MAAMoF,kBAAoB,EAC7B,yBAAKjE,UAAWC,KAAQ8K,UACtB,uBAAG/K,UAAWC,KAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMmF,eAAiBhB,KAAKnE,MAAM+E,UACxC,KACAqH,QAAQ,GALZ,KAQA,uBAAGjL,UAAWC,KAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMyL,cAAgBtH,KAAKnE,MAAM+E,UACvC,KACAqH,QAAQ,GALZ,KAQA,uBAAGjL,UAAWC,KAAQ+K,OAAtB,KACK,KAEAhI,KAAKnE,MAAMoF,iBAAmBjB,KAAKnE,MAAM+E,UAC1C,KACAqH,QAAQ,GALZ,MASA,KACJ,yBAAKjL,UAAWC,KAAQ2D,WACrBZ,KAAKnE,MAAMiF,cAAgB,+CAA0B,KACtD,2BAAId,KAAKwC,iBAAiBxC,KAAKnE,MAAM+E,WAArC,WAYF,yBAAK5D,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMmF,gBADpC,KACuD,IACrD,kBAAC,IAAD,CAAGwD,MAAM,aAAaO,KAAMQ,QAGhC,yBAAKvI,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMoF,kBADpC,KACyD,IACvD,kBAAC,IAAD,CAAG8D,KAAMe,IAActB,MAAM,UAGjC,yBAAKxH,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMyL,eADpC,KACsD,IACpD,kBAAC,IAAD,CAAGvC,KAAMe,IAActB,MAAM,YAGjC,yBAAKxH,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMuL,cADpC,OACuD,MAIzD,yBAAKpK,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM4L,cADpC,OACuD,MAIzD,yBAAKzK,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM6L,cADpC,OACuD,MAIzD,yBAAK1K,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM2L,YADpC,QACsD,MAIxD,yBAAKxK,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAM8L,eADpC,QACyD,MAI3D,yBAAK3K,UAAWC,KAAQ2D,WACtB,2BACGZ,KAAKwC,iBAAiBxC,KAAKnE,MAAMsF,cADpC,SACyD,MAI3D,4BAAQ7D,QAAS0C,KAAK4H,mBAAtB,mBAqCN,OAjCI5H,KAAKnE,MAAMkF,WACbuD,EACE,yBAAKtH,UAAWC,KAAQ8I,YACtB,0HAIA,yBAAK/I,UAAWC,KAAQ+I,cACtB,4BAAQhJ,UAAWC,KAAQgJ,OAAQ3I,QAAS0C,KAAKwD,eAAjD,4CAIF,yBAAKxG,UAAWC,KAAQ+I,cACtB,4BAAQhJ,UAAWC,KAAQgJ,OAAQ3I,QAAS0C,KAAKqB,gBAAjD,kBAKF,yBAAKrE,UAAWC,KAAQ+I,cACtB,4BACEhJ,UAAWC,KAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,KAJxB,6BAeN,6BACGvC,KAAKnE,MAAMgF,QAAUA,EAAU,KAChC,kBAAC,EAAD,CACEnE,cAAY,EACZF,gBAAiB,kBAAM,EAAK6D,MAAM1D,QAAQY,KAAK,eAC/Cd,qBAAsB,kBACpB,EAAK4D,MAAM1D,QAAQY,KAAK,uBAG1B,yBAAKP,UAAWC,KAAQiJ,UACtB,yBAAKlJ,UAAWC,KAAQkJ,WAAY7B,GAEnCtE,KAAKnE,MAAMkF,UAAYf,KAAKnE,MAAM4E,UAAY,KAC7C,4BAAQzD,UAAWC,KAAQgJ,OAAQ3I,QAAS0C,KAAKoD,eAAjD,kBAKJ,yBAAKpG,UAAWC,KAAQ+I,cACtB,4BACEhJ,UAAWC,KAAQgJ,OACnB3I,QAAS,WACQgF,IAAe,EAAKzG,MAAM8E,UAClC4B,KAAK,QAAQ,KAJxB,sBAUDvC,KAAKnE,MAAMkF,WAAaf,KAAKnE,MAAM4E,UAAY,MAAQT,KAAKnE,MACxDkF,UAAYf,KAAKnE,MAAM4E,UAC1B,yBAAKzD,UAAU,IACb,4BAAQA,UAAWC,KAAQgJ,OAAQ3I,QAAS0C,KAAKyD,cAAjD,UAIA,KACJ,yBAAKzG,UAAU,W,GAppBN5B,a,oBCYNkV,GAAc,SAACtU,EAAOsD,EAAKd,EAAUa,EAAOkR,GACvD,MAAO,CACL7O,KCtBwB,eDuBxB8O,QAASxU,EACTsD,MACAd,WACAa,QACAkR,kBAAmBA,IAAwC,IAKlDE,GAAW,SAAA9Q,GACtB,MAAO,CACL+B,KCjCqB,YDkCrB/B,MAAOA,IAoBE+Q,GAAa,SAAAC,GAGxB,OAFA1S,aAAaC,WAAW,SAEjB,CACLwD,KCxDuB,cDyDvBiP,WEtDEC,G,2MACJ/U,MAAQ,CACNwD,MAAO,GACPwR,SAAU,GACVC,OAAQ,I,EAGVC,cAAgB,SAAApL,GACd,EAAKlG,SAAL,eAAiBkG,EAAE7C,OAAOpB,KAAOiE,EAAE7C,OAAO8C,S,EAE5CxC,cAAgB,WACd,EAAK3D,SAAS,CAAEqR,OAAQ,KACxB9R,IACGkE,KADH,UACW/H,EAAOM,gBADlB,aAC8C,CAC1C4D,MAAO,EAAKxD,MAAMwD,MAClBwR,SAAU,EAAKhV,MAAMgV,WAEtB3R,MAAK,SAAA2H,GACJtH,QAAQC,IAAIqH,EAAIzH,MAChBnB,aAAa+S,QAAQ,QAASnK,EAAIzH,KAAKpD,OAGvC,EAAKqE,MAAM4Q,OACTpK,EAAIzH,KAAKpD,MACT6K,EAAIzH,KAAKE,IACTuH,EAAIzH,KAAKZ,SACTqI,EAAIzH,KAAKC,OACT,MAGHK,OAAM,SAAAmI,GACLtI,QAAQC,IAAIqI,EAAI1I,UAChB,EAAKM,SAAS,CAAEqR,OAAQjJ,EAAI1I,SAASC,KAAK0R,a,wEAGtC,IAAD,OAEP,OADAvR,QAAQC,IAAIQ,KAAKK,MAAMvE,iBAErB,kBAAC,EAAD,CAAQc,YAAU,GACfoD,KAAKK,MAAMvE,gBACV,0BAAM2B,MAAO,CAAE+G,MAAO,QAAS0M,SAAU,aAAzC,IACK/S,SAASC,SAASC,KAAO,KAG9B,IAAI8S,SAAS,KAEf,yBAAKnU,UAAWC,KAAQ2T,MACrB5Q,KAAKnE,MAAMiV,QACV9Q,KAAKnE,MAAMiV,OAAO7Q,KAAI,SAAA0F,GACpB,OACE,uBACExF,IAAKwF,EAAE/F,IACPnC,MAAO,CACL+G,MAAO,MACPC,OAAQ,MACR2M,QAAS,MACTC,SAAU,SAGX1L,EAAE/F,QAIX,sCACA,yBAAK5C,UAAWC,KAAQqU,UACtB,2BACE5P,KAAK,QACL0D,YAAY,mBACZD,SAAUnF,KAAK+Q,cACfnL,MAAO5F,KAAKnE,MAAMwD,MAClBsP,UAAW,SAAAhJ,GACK,UAAVA,EAAExF,KAAiB,EAAKiD,oBAIlC,yBAAKpG,UAAWC,KAAQqU,UACtB,2BACE5P,KAAK,WACL0D,YAAY,sBACZD,SAAUnF,KAAK+Q,cACfnL,MAAO5F,KAAKnE,MAAMgV,SAClBlC,UAAW,SAAAhJ,GACK,UAAVA,EAAExF,KAAiB,EAAKiD,oBAIlC,yBAAKpG,UAAWC,KAAQqU,UACtB,4BAAQhU,QAAS0C,KAAKoD,eAAtB,kB,GAvFOhI,aAyGJQ,gBALS,SAAAC,GACtB,MAAO,CACLC,gBAAsC,OAArBD,EAAME,KAAKC,UARL,SAAAqN,GACzB,MAAO,CACL4H,OAAQ,SAACjV,EAAOsD,EAAKd,EAAUa,EAAOkR,GAA9B,OACNlH,EAAEiH,GAAYtU,EAAOsD,EAAKd,EAAUa,EAAOkR,QAQlC3U,CAA6CK,YAAW2U,K,oBC/CxDrS,G,2MAvDb1C,MAAQ,CACN2C,SAAU,GACVC,MAAO,CACL,CACEC,KAAM,4BACNC,KAAM,cAER,CACED,KAAM,4BACNC,KAAM,qBAER,CACED,KAAM,4BACNC,KAAM,qBAER,CACED,KAAM,wDACNC,KAAM,cAER,CACED,KAAM,2CACNC,KAAM,gB,qKAaV,OACE,kBAAC,EAAD,KACE,yBAAK3B,UAAWC,KAAQsB,MACtB,yBAAKvB,UAAWC,KAAQ6C,cAGxB,yBAAK9C,UAAWC,KAAQ8C,OACrBC,KAAKnE,MAAM4C,MAAMwB,KAAI,SAAAC,GACpB,OACE,yBAAKC,IAAKD,EAAExB,KAAM1B,UAAWC,KAAQmD,MACnC,uBAAG9C,QAAS,kBAAMuC,OAAO0R,KAAKrR,EAAEvB,KAAM,YAAYuB,EAAExB,iB,GA7CnDtD,a,OCRJ,SAASoW,KACtB,OACE,yBAAKxU,UAAU,wBACb,yBAAKA,UAAU,oBACb,yBAAKS,MAAO,CAAED,MAAO,OAAQiU,OAAQ,QAAUzU,UAAU,gBACvD,6BACE,+BAEF,6BACE,+BAEF,6BACE,+BAEF,6BACE,+BAEF,6BACE,kC,ICAN0U,G,4LAEF1R,KAAKK,MAAMsR,oB,+BAGX,IAAIC,EACF,yBAAK5U,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6U,KAAK,IAAIC,OAAO,EAAMC,UAAWxT,IAExC,kBAAC,IAAD,CAAOsT,KAAK,gBAAgBC,OAAO,EAAMC,UAAW3L,IACpD,kBAAC,IAAD,CAAOyL,KAAK,YAAYC,OAAO,EAAMC,UAAWC,IAChD,kBAAC,IAAD,CAAOH,KAAK,aAAaC,OAAO,EAAMC,UAAW5K,IACjD,kBAAC,IAAD,CACE0K,KAAK,kBACLC,OAAO,EACPC,UAAWE,KAEb,kBAAC,IAAD,CAAOJ,KAAK,aAAaC,OAAO,EAAMC,UAAW9G,KACjD,kBAAC,IAAD,CAAO4G,KAAK,aAAaC,OAAO,EAAMC,UAAWnC,KACjD,kBAAC,IAAD,CACEiC,KAAK,oBACLC,OAAO,EACPC,UAAWG,IAEb,kBAAC,IAAD,CACEL,KAAK,oBACLC,OAAO,EACPC,UAAWI,KAEb,kBAAC,IAAD,CAAON,KAAK,oBAAoBC,OAAO,EAAMC,UAAWzI,IACxD,kBAAC,IAAD,CAAOuI,KAAK,QAAQC,OAAO,EAAMC,UAAWnB,OAUlD,OAAO5Q,KAAKK,MAAM+R,UAAY,kBAAC,GAAD,MAAkBR,M,GAzClCxW,aA0DHa,eAAWL,aAdF,SAAAC,GAEtB,MAAO,CACLC,gBAAsC,OAArBD,EAAME,KAAKC,MAC5BoW,UAAWvW,EAAME,KAAKsW,qBAIC,SAAAC,GACzB,MAAO,CACLX,gBAAiB,kBAAMW,GLiHlB,SAAAA,GACLA,EAjLK,CACL5Q,KCX4B,qBD4L5B6Q,YAAW,WACThT,QAAQC,IAAI,iBACZ,IAAMxD,EAAQiC,aAAaW,QAAQ,SACnC,GAAK5C,EAGE,CACL,IAAI6C,EAAS,CACXC,QAAS,CACP,eAAgB9C,IAGhB+C,EAAG,UAAM5D,EAAOM,gBAAb,kBACPuD,IACGC,IAAIF,EAAKF,GACTK,MAAK,SAAAC,GAAa,IAAD,EACUA,EAASC,KAA3BE,EADQ,EACRA,IAAKd,EADG,EACHA,SACbe,QAAQC,IAAIL,EAASC,MACrBmT,YAAW,WACTD,EAAShC,GAAYtU,EAAOsD,EAAKd,MAChC,QAGJkB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,EAAO,SACfA,EAAMR,UAAYQ,EAAMR,SAASC,KAAKQ,MACxC0S,EAAS5B,MAET4B,EAAS7B,GAAS,cAxBxB6B,EAAS5B,MACT4B,EAAS7B,GAAS,OA2BnB,YK/ImB7U,CAA6C8V,KClEnDc,QACW,cAA7B3S,OAAOzB,SAASqU,UAEe,UAA7B5S,OAAOzB,SAASqU,UAEhB5S,OAAOzB,SAASqU,SAASC,MACvB,2D,aChBAC,GAAe,SAAC9W,EAAO+W,GAC3B,OAAO,gBACF/W,EADL,GAEK+W,IAIDC,GAAe,CACnB7W,MAAO,KACP8W,OAAQ,KACRnT,MAAO,KACPkB,SAAS,EACTwR,kBAAkB,EAClBU,iBAAkB,KAClBzT,IAAK,KACL0T,UAAW,EACXxU,SAAU,KACVa,MAAO,KACP4T,OAAQ,KACRC,0BAA0B,EAC1B3C,mBAAmB,EACnB4C,kBAAkB,EAClBC,eAAe,EACfC,iCAAiC,GAG7BC,GAAY,SAACzX,EAAO0X,GACxB,OAAOZ,GAAa9W,EAAO,CACzB8D,MAAO,KACPkB,SAAS,EACT7E,MAAO,KACPsD,IAAK,KACLd,SAAU,KACVa,MAAO,KACP6T,0BAA0B,EAC1BD,OAAQ,QAGNO,GAAiB,SAAC3X,EAAO0X,GAC7B,OAAOZ,GAAa9W,EAAO,CACzB8D,MAAO,KACP0S,kBAAkB,EAClBa,0BAA0B,EAC1BF,UAAW,KAGTS,GAAyB,SAAC5X,EAAO0X,GACrC,OAAOZ,GAAa9W,EAAO,CACzB8D,MAAO,KACPuT,0BAA0B,EAC1BF,UAAW,KAGT1C,GAAc,SAACzU,EAAO0X,GAC1B,OAAOZ,GAAa9W,EAAO,CACzBgF,SAAS,EACTwR,kBAAkB,EAClB1S,MAAO,KACPqT,UAAW,EACXhX,MAAOuX,EAAO/C,QACdlR,IAAKiU,EAAOjU,IACZd,SAAU+U,EAAO/U,SACjBa,MAAOkU,EAAOlU,MAEd6T,0BAA0B,EAC1B3C,kBAAmBgD,EAAOhD,qBAGxBE,GAAW,SAAC5U,EAAO0X,GACvB,OAAOZ,GAAa9W,EAAO,CACzBgF,SAAS,EACTwR,kBAAkB,EAClBa,0BAA0B,EAC1BF,UAAW,EACXrT,MAAO4T,EAAO5T,SAIZ+Q,GAAa,SAAC7U,EAAO0X,GAEzB,OAAOZ,GAAa9W,EAAO,CACzB8D,MAAO,KACPqT,UAAW,EACXzC,kBAAmBgD,EAAO5C,OAC1BuC,0BAA0B,EAE1BlX,MAAO,KACPsD,IAAK,KACLd,SAAU,KACVa,MAAO,KACP4T,OAAQ,QAGNS,GAAkB,SAAC7X,EAAO0X,GAE9B,OAAOZ,GAAa9W,EAAO,CACzBuX,eAAgBvX,EAAMuX,cACtBF,0BAA0B,EAC1BF,UAAW,KAGTW,GAAqB,SAAC9X,EAAO0X,GAEjC,OAAOZ,GAAa9W,EAAO,CACzBuX,eAAe,EACfF,0BAA0B,EAC1BF,UAAW,KAITY,GAAsB,SAAC/X,EAAO0X,GAClC,OAAOZ,GAAa9W,EAAO,CACzBkX,iBAAkBQ,EAAO1B,KACzBmB,UAAW,KAGTG,GAAmB,SAACtX,EAAO0X,GAC/B,OAAOZ,GAAa9W,EAAO,CACzBsX,kBAAkB,KAGhBU,GAAqC,SAAChY,EAAO0X,GACjD,OAAOZ,GAAa9W,EAAO,CACzBwX,iCAAiC,KAiCtBS,GA7BC,WAAmC,IAAlCjY,EAAiC,uDAAzBgX,GAAcU,EAAW,uCAChD,OAAQA,EAAO7R,MACb,INnIsB,aMoIpB,OAAO4R,GAAUzX,GACnB,IN3HkC,yBM4HhC,OAAO4X,GAAuB5X,GAChC,INtI4B,mBMuI1B,OAAO2X,GAAe3X,GACxB,INvIwB,eMwItB,OAAOyU,GAAYzU,EAAO0X,GAC5B,INxIqB,YMyInB,OAAO9C,GAAS5U,EAAO0X,GACzB,INxIuB,cMyIrB,OAAO7C,GAAW7U,EAAO0X,GAC3B,INxIkC,yBMyIhC,OAAOK,GAAoB/X,EAAO0X,GACpC,INzI2B,kBM0IzB,OAAOG,GAAgB7X,GACzB,IN1IkC,yBM2IhC,OAAO8X,GAAmB9X,GAC5B,IN1I+B,sBM2I7B,OAAOsX,GAAiBtX,GAC1B,IN1IF,0CM2II,OAAOgY,GAAmChY,GAC5C,QACE,OAAOA,I,SCrJPkY,GAAcC,aAAgB,CAElCjY,KAAMkY,KAGFC,GAGQC,KAEDC,GAAQC,aACnBN,GACAG,GAAiBI,aAAgBC,QCN7BC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAKNK,IAASC,OAAOF,GAAKrW,SAASwW,eAAe,SHgHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5V,MAAK,SAAA6V,GACjCA,EAAaC,iB,mBIpInB/Z,EAAOC,QAAU,CAAC,UAAY,6BAA6B,IAAM,yB,kBCAjED,EAAOC,QAAU,CAAC,SAAW,iCAAiC,aAAe,qCAAqC,MAAQ,8BAA8B,SAAW,iCAAiC,WAAa,mCAAmC,SAAW,iCAAiC,SAAW,iCAAiC,SAAW,iCAAiC,UAAY,kCAAkC,gBAAkB,wCAAwC,QAAU,gCAAgC,UAAY,kCAAkC,OAAS,+BAA+B,cAAgB,sCAAsC,iBAAmB,yCAAyC,aAAe,qCAAqC,OAAS,+BAA+B,UAAY,kCAAkC,SAAW,mC,mBCAv2BD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,2BAA2B,kBAAoB,wCAAwC,YAAc,kCAAkC,MAAQ,4BAA4B,MAAQ,8B,mBCA9PD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,YAAc,iCAAiC,OAAS,8B,mBCArHD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,WAAa,8BAA8B,MAAQ,yBAAyB,QAAU,2BAA2B,UAAY,+B,mBCApLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,2BAA2B,KAAO,uB,mBCAjMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,kBCA1DD,EAAOC,QAAU,CAAC,SAAW,uBAAuB,MAAQ,oBAAoB,SAAW,uBAAuB,aAAe,2BAA2B,WAAa,yBAAyB,SAAW,uBAAuB,SAAW,uBAAuB,SAAW,uBAAuB,UAAY,wBAAwB,gBAAkB,8BAA8B,QAAU,sBAAsB,UAAY,wBAAwB,OAAS,qBAAqB,cAAgB,4BAA4B,iBAAmB,+BAA+B,aAAe,2BAA2B,OAAS,qBAAqB,UAAY,0B,mBCAhpBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,YAAc,qC,kBCAnED,EAAOC,QAAU,CAAC,cAAgB,wCAAwC,gBAAkB,0CAA0C,SAAW,mCAAmC,aAAe,uCAAuC,MAAQ,gCAAgC,KAAO,+BAA+B,aAAe,uCAAuC,gBAAkB,0CAA0C,WAAa,qCAAqC,IAAM,8BAA8B,gBAAkB,0CAA0C,eAAiB,yCAAyC,eAAiB,yCAAyC,MAAQ,gCAAgC,OAAS,iCAAiC,aAAe,uCAAuC,gBAAkB,0CAA0C,iBAAmB,2CAA2C,gBAAkB,0CAA0C,uBAAyB,iDAAiD,sBAAwB,gDAAgD,YAAc,wC,kBCA9oCD,EAAOC,QAAU,CAAC,SAAW,mCAAmC,aAAe,uCAAuC,MAAQ,gCAAgC,SAAW,mCAAmC,WAAa,qCAAqC,SAAW,mCAAmC,SAAW,mCAAmC,SAAW,mCAAmC,UAAY,oCAAoC,gBAAkB,0CAA0C,QAAU,kCAAkC,UAAY,oCAAoC,OAAS,iCAAiC,cAAgB,wCAAwC,iBAAmB,2CAA2C,aAAe,uCAAuC,OAAS,iCAAiC,UAAY,sC,mBCD51BD,EAAOC,QAAU,IAA0B,mC,mBCC3CD,EAAOC,QAAU,CAAC,WAAW,4B","file":"static/js/main.a6e48367.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"HomeDev_CallerId__2jzt1\",\"OptionButton\":\"HomeDev_OptionButton__14mDc\",\"PausedCont\":\"HomeDev_PausedCont__3lzg3\",\"rotate90\":\"HomeDev_rotate90__SjyUD\",\"FileCont\":\"HomeDev_FileCont__jNq9s\",\"FormBody\":\"HomeDev_FormBody__3F2iw\",\"filesCont\":\"HomeDev_filesCont__2Yb8m\",\"PhoneAndMessage\":\"HomeDev_PhoneAndMessage__YQPaZ\",\"loading\":\"HomeDev_loading__16B71\",\"Container\":\"HomeDev_Container__3tsf2\",\"Submit\":\"HomeDev_Submit__1K8O6\",\"OptionAddCont\":\"HomeDev_OptionAddCont__3i8aV\",\"withOrWithoutOne\":\"HomeDev_withOrWithoutOne__3UL4A\",\"SpeedControl\":\"HomeDev_SpeedControl__5cZsn\",\"slider\":\"HomeDev_slider__2NQs2\",\"sentCount\":\"HomeDev_sentCount__2wCWS\"};","import React, { Component } from 'react';\r\n\r\nclass GLOBAL extends Component {\r\n  static domain =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://powersms.land'\r\n      : 'http://localhost:7000';\r\n  static domainMobiniti =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://192.64.113.28:9000'\r\n      : 'http://localhost:9000';\r\n  static domainpine =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://aone.powersms.land'\r\n      : 'http://localhost:9090';\r\n  //\r\n  static blacklist =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://blacklist.powersms.land'\r\n      : 'http://localhost:8024';\r\n  static domainNameCheap =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://namecheap.powersms.land'\r\n      : 'http://localhost:8023';\r\n  static domainpineaccountone =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://atwo.powersms.land'\r\n      : 'http://localhost:7800';\r\n  static domainpineaccountthree =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://athree.powersms.land'\r\n      : 'http://localhost:7802';\r\n  render() {\r\n    return;\r\n  }\r\n}\r\n\r\nexport default GLOBAL;\r\n","import React, { useState } from 'react';\r\nimport classes from './Layout.module.css';\r\n// import {router} from \"react-router-dom\"\r\nimport Logo from './color.png';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nlet Layout = ({\r\n  children,\r\n  mobiniti,\r\n  accountOne,\r\n  accountTwo,\r\n  autoRotate,\r\n  autoRotateClickFunction,\r\n  goToAccountFunc,\r\n  goToOtherAccountFunc,\r\n  accountThree,\r\n  history,\r\n  isAuthPage\r\n}) => {\r\n  const [isFlip, setFlip] = useState(true);\r\n  return (\r\n    <div className={classes.Layout}>\r\n      <div className={classes.Header}>\r\n        <p className={classes.logo}>\r\n          {/* {mobiniti\r\n            ? 'FDN - Mobiniti'\r\n            : accountOne\r\n            ? 'FreshData2Way Account 1'\r\n            : accountTwo\r\n            ? 'FreshData2Way Account 2'\r\n            : accountThree\r\n            ? 'FreshData2Way Account 3'\r\n            : 'POWER-SMS'} */}\r\n          <img\r\n            onLoad={() => setFlip(true)}\r\n            onClick={() => history.push('/')}\r\n            width='200px'\r\n            style={{\r\n              transition: '.5s',\r\n              transform: isFlip ? 'rotateX(0deg)' : 'rotateX(90deg)'\r\n            }}\r\n            src={Logo}\r\n          />\r\n        </p>\r\n        {\r\n          <div className={classes.settings}>\r\n            {autoRotate ? (\r\n              <span className={classes.snap} onClick={autoRotateClickFunction}>\r\n                Snapshots\r\n              </span>\r\n            ) : null}\r\n            {accountOne ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 2</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 3</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {accountTwo ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 1</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 3</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {accountThree ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 1</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 2</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {!isAuthPage ? (\r\n              <button\r\n                onClick={() => {\r\n                  localStorage.removeItem('token');\r\n                  document.location.href = '/auth';\r\n                }}\r\n              >\r\n                Logout\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      {children}\r\n      {/* <div className={classes.footer}>\r\n        \r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nconst mstp = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\nexport default connect(mstp)(withRouter(Layout));\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={classes['lds-ring']}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './Home.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    fullName: '',\r\n    pages: [\r\n      {\r\n        name: 'Pineapple',\r\n        link: '/pineapple-home'\r\n      },\r\n      {\r\n        name: 'D7',\r\n        link: '/'\r\n      },\r\n      {\r\n        name: 'Twilio',\r\n        link: '/'\r\n      },\r\n      {\r\n        name: 'Signalwire',\r\n        link: '/'\r\n      },\r\n      {\r\n        name: 'Buy Domain and Forward domains with the Namecheap API',\r\n        link: '/namecheap'\r\n      },\r\n      {\r\n        name: 'Scrub for mobiles with the Blacklist API',\r\n        link: '/blacklist'\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n          this.setState({ fullName });\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          // document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n          window.location.href = '/auth';\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.Home}>\r\n          <div className={classes.UserDetails}>\r\n            {/* <p>Hi {this.state.fullName.split(' ')[0]}!</p> */}\r\n            <p>Select Service Integration</p>\r\n          </div>\r\n          <div className={classes.Pages}>\r\n            {this.state.pages.map(p => {\r\n              return (\r\n                <div key={p.name} className={classes.page}>\r\n                  <p onClick={() => this.props.history.push(p.link)}>\r\n                    {p.name}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './HomeDev.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheck,\r\n  faThumbsDown,\r\n  faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    ani: '123',\r\n    file: null,\r\n    phoneFile: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainMobiniti,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${GLOBAL.domainMobiniti}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          unknownCount,\r\n          messageCount\r\n        } = data;\r\n        if (data.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        console.log(data);\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          unknownCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + parseInt(data)\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.emit('kill', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainMobiniti}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  onChangePhoneFileHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ phoneFile: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('phone', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainMobiniti}/api/uploadphones`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n        // phoneFile: this.state.phoneFile\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          {/* <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div> */}\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div className={classes.filesCont}>\r\n                <div className={classes.PhoneAndMessage}>\r\n                  <p>Enter message File:</p>\r\n                  <label htmlFor='file'>\r\n                    <F\r\n                      icon={faFileCsv}\r\n                      style={{\r\n                        color: this.state.file ? 'black' : '#bbb',\r\n                        transition: '1s',\r\n                        transform: this.state.file\r\n                          ? 'rotateX(360deg)'\r\n                          : 'rotateX(0deg)'\r\n                      }}\r\n                      // color='black'\r\n                    />\r\n                  </label>\r\n                  <div className={classes.FileCont}>\r\n                    <input\r\n                      type='file'\r\n                      id='file'\r\n                      // value={ani}\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder='Caller ID'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* <div className={classes.PhoneAndMessage}>\r\n                  <p>Enter phone File:</p>\r\n                  <label htmlFor='phones'>\r\n                    <F icon={faFileCsv} />\r\n                  </label>\r\n                  <div className={classes.FileCont}>\r\n                    <input\r\n                      type='file'\r\n                      id='phones'\r\n                      // value={ani}\r\n                      name='phones'\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder='Caller ID'\r\n                    />\r\n                  </div> */}\r\n                {/* </div> */}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout mobiniti>\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './PauseScreen.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nclass PauseScreen extends Component {\r\n  state = {\r\n    ani: '',\r\n    dnis: '',\r\n    message: '',\r\n    results: []\r\n  };\r\n\r\n  onchangehandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  verify = r => {\r\n    axios\r\n      .get(`${GLOBAL.domain}/api/status?message_id=${r.message_id}`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let newResarray = this.state.results.map(res => {\r\n          // console.log(res, 'resultsss');\r\n          console.log(data.m === res.message_id);\r\n          console.log('filterrrr');\r\n          return {\r\n            success: res.success,\r\n            message_id: res.message_id,\r\n            dnis: res.dnis,\r\n            status: data.m === res.message_id ? data.status : res.status\r\n          };\r\n        });\r\n        console.log(newResarray, 'newres');\r\n        this.setState({\r\n          results: newResarray\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    const { ani, dnis, message } = this.state;\r\n    return (\r\n      <Layout>\r\n        <div className={classes.PauseScreen}>\r\n          <p>Sender ID:</p>\r\n          <div className={classes.InputCont}>\r\n            <input onChange={this.onchangehandler} name='ani' type='text' />\r\n          </div>\r\n          <p>Comma Seperate Destination IDs (with Leading one please)</p>\r\n          <div className={classes.InputCont}>\r\n            <textarea\r\n              name='dnis'\r\n              value={dnis}\r\n              onChange={this.onchangehandler}\r\n            ></textarea>\r\n          </div>\r\n          <p>Enter a message</p>\r\n          <div className={classes.InputCont}>\r\n            <textarea\r\n              name='message'\r\n              value={message}\r\n              onChange={this.onchangehandler}\r\n            ></textarea>\r\n          </div>\r\n          <div className=''>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                console.log('go');\r\n                axios\r\n                  .get(\r\n                    `${GLOBAL.domain}/api/testmysends?ani=${ani}&dnis=${dnis}&message=${message}`\r\n                  )\r\n                  .then(({ data }) => {\r\n                    console.log(data);\r\n                    this.setState({ results: data });\r\n                  })\r\n                  .catch(e => {\r\n                    console.log(e);\r\n                  });\r\n              }}\r\n            >\r\n              Send Test Message\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>RESULTS:</p>\r\n          {this.state.results &&\r\n            this.state.results.map((r, i) => {\r\n              return (\r\n                <div className=''>\r\n                  {r.message_id === 'no routes' ? (\r\n                    <p>message was not sent to {r.dnis}</p>\r\n                  ) : (\r\n                    <div>\r\n                      <p>message was sent to {r.dnis}</p>\r\n                      <button\r\n                        className={classes.Submit}\r\n                        onClick={() => {\r\n                          this.verify(r);\r\n                        }}\r\n                      >\r\n                        Check Result\r\n                      </button>\r\n                      <p>{r.status}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PauseScreen;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './Pine.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint:\r\n      process.env.NODE_ENV === 'production'\r\n        ? 'https://aone.powersms.land'\r\n        : GLOBAL.domainpine,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    totalCount: 0,\r\n    rejectedCount: 0,\r\n    noRouteCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpine}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount,\r\n          noRouteCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false,\r\n          noRouteCount\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint, {\r\n          transports: ['websocket']\r\n        });\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('NO ROUTES', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              noRouteCount: prevState.noRouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      noRouteCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      noRouteCount: 0,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      noRouteCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpine}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint, {transports: ['websocket']});\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domain}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          {/* <div className={classes.sentCount}>\r\n          \r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div> */}\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.noRouteCount)} NR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountOne\r\n          autoRotate\r\n          goToAccountFunc={() => this.props.history.push('/freshdata-2way-2')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-3')\r\n          }\r\n          autoRotateClickFunction={() =>\r\n            this.props.history.push('/snapshots-2way-1')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineAccountTwo.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '0123456789',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainpineaccountone,\r\n    sentCount: 0,\r\n    totalCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    rejectedCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true,\r\n    isDragOver: false,\r\n    files: []\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(document.referrer, 'right here');\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpineaccountone}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.fileList) {\r\n          this.setState({\r\n            files: data._doc.fileList\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('removeFileFromSendStatus', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              files: prevState.files.slice(1)\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null,\r\n            files: []\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountone}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files);\r\n    // console.log(event.target.files[0]);\r\n    let fileState = [];\r\n\r\n    this.setState({\r\n      file: event.target.files[0].name\r\n      // files: event.target.files\r\n    });\r\n    const data = new FormData();\r\n    [...event.target.files].forEach(file => {\r\n      data.append('file', file);\r\n    });\r\n    for (let i = 0; i < event.target.files.length; i++) {\r\n      // event.target.files\r\n      fileState.push(event.target.files[i].name);\r\n      // data.append('file', event.target.files[i]);\r\n    }\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpineaccountone}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false,\r\n        isDragOver: false,\r\n        files: fileState\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  dragOverHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ isDragOver: true });\r\n  };\r\n  dragLeaveHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ isDragOver: false });\r\n  };\r\n  onDropHandler = e => {\r\n    e.preventDefault();\r\n    let dt = e.dataTransfer;\r\n    let files = dt.files;\r\n    this.setState({\r\n      file: files[0].name\r\n      // files: event.target.files\r\n    });\r\n    console.log(files, 'files from drop');\r\n    const data = new FormData();\r\n    let fileState = [];\r\n    [...files].forEach(file => {\r\n      data.append('file', file);\r\n    });\r\n    for (let i = 0; i < files.length; i++) {\r\n      // event.target.files\r\n      fileState.push(files[i].name);\r\n    }\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountone}/api/upload`, data)\r\n      .then(() => {\r\n        this.setState({\r\n          loading: false,\r\n          isDoneSending: false,\r\n          files: fileState,\r\n          isDragOver: false\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.files[0]}...</p>\r\n                <p>Up Next:</p>\r\n                <div className=''>\r\n                  {this.state.files.slice(1).map((next, i) => {\r\n                    return <p key={i}>{next}</p>;\r\n                  })}\r\n                </div>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className={classes.DropArea}\r\n                style={{\r\n                  border: '1px dotted #bbb',\r\n                  opacity: this.state.isDragOver ? 0.5 : 1\r\n                }}\r\n                onDragOver={this.dragOverHandler}\r\n                onDrop={this.onDropHandler}\r\n                onDragLeave={this.dragLeaveHandler}\r\n              >\r\n                <input\r\n                  type='file'\r\n                  // value={ani}\r\n                  multiple\r\n                  onChange={this.onChangeHandler}\r\n                  placeholder='Caller ID'\r\n                />\r\n                {this.state.files.length <= 0 ? (\r\n                  <p>Input or drag and drop multiple files</p>\r\n                ) : null}\r\n                <div className=''>\r\n                  {this.state.files.map((d, i) => (\r\n                    <p key={i}>{d}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            {/* {this.state.isDoneSending ? <p>Sending Complete</p> : null} */}\r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountTwo\r\n          goToAccountFunc={() => this.props.history.push('/pineapple')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-3')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div className=''></div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../GLOBAL/GLOBAL';\r\nimport classes from './Snapshots.module.css';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Layout from '../../components/Layout/Layout';\r\nclass Snapshots extends Component {\r\n  state = {\r\n    counterArray: [],\r\n    page: 2,\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${Global.domainpine}/api/getmessagecounts/1`)\r\n      .then(({ data }) => {\r\n        let array = data;\r\n        console.log(data);\r\n        this.setState(p => {\r\n          return {\r\n            counterArray: [...p.counterArray, ...array],\r\n            loading: false\r\n          };\r\n        });\r\n      });\r\n  }\r\n  onLoadMore = () => {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(`${Global.domainpine}/api/getmessagecounts/${this.state.page}`)\r\n      .then(({ data }) => {\r\n        let array = data.counterArray;\r\n        console.log(array);\r\n        this.setState(p => {\r\n          return {\r\n            counterArray: array\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        SNAPSHOTS FROM PINEAPPLE FRESHDATA2WAY ACCOUNT ONE\r\n        {this.state.counterArray &&\r\n          this.state.counterArray.map(c => {\r\n            return (\r\n              <div className={classes.Row}>\r\n                <div className={classes.sentCount}>\r\n                  {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n                  <p>{this.numberWithCommas(c.sentCount)} sends</p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.deliveredCount)} D{' '}\r\n                    <F color='lightgreen' icon={faCheck} />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.unDeliveredCount)} U{' '}\r\n                    <F icon={faThumbsDown} color='red' />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.rejectedCount)} R{' '}\r\n                    <F icon={faThumbsDown} color='black' />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.enrouteCount)} ENR{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.expiredCount)} EXP{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.deletedCount)} DEL{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.sentStatus)} SENT{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.acceptedCount)} ACPT{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.unknownCount)} UKNWN{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.noRoutecount || 0)} UKNWN{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                {/* <button onClick={this.clearCountHandler}>Clear Counter</button> */}\r\n              </div>\r\n            );\r\n          })}\r\n        <p>Load More </p>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Snapshots;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './SingleDomain.module.css';\r\nconst SingleDomain = ({\r\n  l,\r\n  purchaseHandler,\r\n  forwardingChangeHandler,\r\n  forwardURL,\r\n  forwardingHandler,\r\n  deleteSingle,\r\n  selected\r\n}) => {\r\n  return (\r\n    <div className=''>\r\n      <div\r\n        className={classes.SingleDomain}\r\n        style={{ color: l.isAvailable ? 'inherit' : '#bbb' }}\r\n      >\r\n        <div className={classes.Left}>\r\n          <p className={classes.Name}>{l.domain}</p>\r\n          <p>${l.Price}</p>\r\n        </div>\r\n        <div className={classes.atTop} onClick={deleteSingle}>\r\n          x\r\n        </div>\r\n        {selected ? null : (\r\n          <div className=''>\r\n            {l.isPurchased ? (\r\n              <F icon={faCheck} color='lightgreen' size='3x' />\r\n            ) : (\r\n              <div className={classes.Right}>\r\n                <button\r\n                  disabled={!l.isAvailable}\r\n                  onClick={() => purchaseHandler(l.domain)}\r\n                >\r\n                  {l.isAvailable ? 'Purchase' : 'Not Available'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {l.forwardSuccess ? (\r\n        <div className={classes.successForwarding}>\r\n          <p>\r\n            {l.domain} now forwards to {l.forwardURL}\r\n          </p>\r\n        </div>\r\n      ) : l.isPurchased ? (\r\n        <div className={classes.forwardCont}>\r\n          <input\r\n            type='text'\r\n            name='forwardURL'\r\n            // value={forwardURL}\r\n            onChange={e => forwardingChangeHandler(e, l.domain)}\r\n            placeholder='Enter your forwarding url here'\r\n          />\r\n\r\n          <button onClick={() => forwardingHandler(l.domain)}>Submit</button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDomain;\r\n","// import React, { Component } from 'react';\r\n// import classes from './NamecheapForward.module.css';\r\n// import uuid from 'uuid';\r\n// import socketIOClient from 'socket.io-client';\r\n// import moment from 'moment';\r\n// import Spinner from '../../components/Spinner/Spinner';\r\n// import Global from '../GLOBAL/GLOBAL';\r\n// import SingleDomain from '../../components/SingleDomain/SingleDomain';\r\n// class NamecheapForward extends Component {\r\n//   state = {\r\n//     domains: '',\r\n//     socketClient: socketIOClient(Global.domainNameCheap),\r\n//     domainsList: [{ name: 'example', id: 1676723 }],\r\n//     endpoint: Global.domain,\r\n//     tldInput: '',\r\n//     tldList: [\r\n//       { name: '.red', id: 1676723 },\r\n//       { name: '.site', id: 456676 }\r\n//     ],\r\n//     prefix: '',\r\n//     prefixList: [{ name: 'love', id: 1676723 }],\r\n//     suffix: '',\r\n//     suffixList: [\r\n//       { name: 'learn', id: 1676723 },\r\n//       { name: 'use', id: 456676 }\r\n//     ],\r\n//     minimumPrice: 0,\r\n//     maximumPrice: 10,\r\n//     numberToBulkForward: null,\r\n//     isFetching: false,\r\n//     error: [],\r\n//     bulkForwardingURL: '',\r\n//     Quantity: 5,\r\n//     bulkForwardFinsh: false,\r\n//     listOfFoundDomains: [\r\n//       // {\r\n//       //   domain: '02b32423gerg22.xyz',\r\n//       //   isAvailable: 'true',\r\n//       //   isInSelected: false,\r\n//       //   isPurchased: false,\r\n//       //   forwardURL: 'http://google.com',\r\n//       //   forwardSuccess: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   // forwardSuccess:\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // },\r\n//       // {\r\n//       //   domain: '02b423424332.xyz',\r\n//       //   isAvailable: 'true',\r\n//       //   isInSelected: false,\r\n//       //   isPurchased: false,\r\n//       //   forwardURL: 'http://google.com',\r\n//       //   forwardSuccess: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   // forwardSuccess:\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // }\r\n//       // {\r\n//       //   domain: 'loveexampleuse.site',\r\n//       //   isAvailable: false,\r\n//       //   forwardURL: '',\r\n//       //   isPurchased: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // }\r\n//     ],\r\n//     listOfSelectedDomains: [\r\n//       {\r\n//         domain: '02b.xyz',\r\n//         isAvailable: 'true',\r\n//         isPurchased: false,\r\n//         forwardURL: 'http://google.com',\r\n//         forwardSuccess: false,\r\n//         isPremiumName: 'false',\r\n//         Duration: '1',\r\n//         DurationType: 'YEAR',\r\n//         Price: '1.28',\r\n//         // forwardSuccess:\r\n//         PricingType: 'MULTIPLE',\r\n//         AdditionalCost: '0.18',\r\n//         RegularPrice: '25.88',\r\n//         RegularPriceType: 'MULTIPLE',\r\n//         RegularAdditionalCost: '0.18',\r\n//         RegularAdditionalCostType: 'MULTIPLE',\r\n//         YourPrice: '1.28',\r\n//         YourPriceType: 'MULTIPLE',\r\n//         YourAdditonalCost: '0.18',\r\n//         YourAdditonalCostType: 'MULTIPLE',\r\n//         PromotionPrice: '0.0',\r\n//         Currency: 'USD'\r\n//       },\r\n//       {\r\n//         domain: 'loveexampleuse.site',\r\n//         isAvailable: false,\r\n//         forwardURL: '',\r\n//         isPurchased: false,\r\n//         isPremiumName: 'false',\r\n//         Duration: '1',\r\n//         DurationType: 'YEAR',\r\n//         Price: '1.28',\r\n//         PricingType: 'MULTIPLE',\r\n//         AdditionalCost: '0.18',\r\n//         RegularPrice: '25.88',\r\n//         RegularPriceType: 'MULTIPLE',\r\n//         RegularAdditionalCost: '0.18',\r\n//         RegularAdditionalCostType: 'MULTIPLE',\r\n//         YourPrice: '1.28',\r\n//         YourPriceType: 'MULTIPLE',\r\n//         YourAdditonalCost: '0.18',\r\n//         YourAdditonalCostType: 'MULTIPLE',\r\n//         PromotionPrice: '0.0',\r\n//         Currency: 'USD'\r\n//       }\r\n//     ]\r\n//   };\r\n//   componentDidMount() {\r\n//     // const socket = socketIOClient(this.state.endpoint);\r\n//     // socket.connect();\r\n\r\n//     this.state.socketClient.on('bulkSendSuccess', _ => {\r\n//       this.setState({ bulkForwardFinsh: true });\r\n//     });\r\n//     this.state.socketClient.on('errorPurchase', ({ msg, domain }) => {\r\n//       console.log(msg, domain);\r\n//       this.setState(p => {\r\n//         return {\r\n//           error: p.error.concat({ msg, domain })\r\n//         };\r\n//       });\r\n//     });\r\n\r\n//     this.state.socketClient.on('fetchEnd', _ => {\r\n//       this.setState({ isFetching: false });\r\n//     });\r\n//     this.state.socketClient.on('downloadingNow', d => {\r\n//       // this.setState({ isFetching: false });\r\n//       var blob = new Blob([d], {\r\n//         type: 'text/plain'\r\n//       });\r\n\r\n//       const url = window.URL.createObjectURL(blob);\r\n//       const a = document.createElement('a');\r\n//       const date = new Date();\r\n//       a.setAttribute('hidden', url);\r\n//       a.setAttribute('href', url);\r\n//       a.setAttribute(\r\n//         'download',\r\n//         `${moment(`${new Date().toISOString()}`).format('DD-MM-YYYY')}_${\r\n//           this.state.listOfSelectedDomains.length\r\n//         }_${this.state.bulkForwardingURL}.csv`\r\n//       );\r\n//       document.body.appendChild(a);\r\n//       a.click();\r\n//       document.body.removeChild(a);\r\n//     });\r\n\r\n//     this.state.socketClient.on('pushDomain', data => {\r\n//       let listOfDomains = [...this.state.listOfFoundDomains];\r\n//       console.log(listOfDomains);\r\n//       let newList = listOfDomains.concat({\r\n//         ...data,\r\n//         forwardURL: '',\r\n//         forwardSuccess: false\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n//     this.state.socketClient.on('purchaseSuccessBulk', domain => {\r\n//       let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//       let newList = listOfSelectedDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             isPurchased: true\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfSelectedDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('purchaseSuccess', domain => {\r\n//       let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//       let newList = listOfFoundDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             isPurchased: true\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('forwardSuccessBulk', domain => {\r\n//       let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//       let newList = listOfSelectedDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             forwardSuccess: true,\r\n//             forwardURL: this.state.bulkForwardingURL\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfSelectedDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('forwardSuccess', domain => {\r\n//       let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//       let newList = listOfFoundDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             forwardSuccess: true,\r\n//             forwardURL: this.state.bulkForwardingURL\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n//   }\r\n//   deleteTldHandler = (id, controlList) => {\r\n//     let tlds = [...this.state[controlList]];\r\n//     let newtldList = tlds.filter(t => t.id !== id);\r\n//     this.setState({ [controlList]: newtldList });\r\n//   };\r\n//   changedHandler = e => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   keyDownHandler = (e, control, controlInput) => {\r\n//     // console.log(e.key);\r\n//     if (e.key === 'Tab' || e.key === ',') {\r\n//       e.preventDefault();\r\n//       let newTld = [\r\n//         ...this.state[control],\r\n//         { name: e.target.value, id: uuid() }\r\n//       ];\r\n//       this.setState({ [control]: newTld, [controlInput]: '' });\r\n//       e.target.focus();\r\n//     }\r\n//   };\r\n//   clear = controlList => {\r\n//     this.setState({ [controlList]: [] });\r\n//   };\r\n//   purchaseHandler = domain => {\r\n//     console.log(domain);\r\n//     this.state.socketClient.emit('purchase', domain);\r\n//   };\r\n//   purchaseAndForwardBulk = () => {};\r\n//   downloadForwards = () => {\r\n//     this.state.socketClient.emit('download');\r\n//   };\r\n//   generate = () => {\r\n//     // const socket = socketIOClient(this.state.endpoint);\r\n//     // socket.connect();\r\n//     this.setState({ isFetching: true, bulkForwardFinsh: false, error: [] });\r\n//     this.setState({ listOfFoundDomains: [] });\r\n//     let prefixList = this.state.prefixList;\r\n//     let suffixList = this.state.suffixList;\r\n//     let domainsList = this.state.domainsList;\r\n//     let tldList = this.state.tldList;\r\n//     const { minimumPrice, maximumPrice, Quantity } = this.state;\r\n\r\n//     this.state.socketClient.emit('check', {\r\n//       prefixList,\r\n//       suffixList,\r\n//       domainsList,\r\n//       tldList,\r\n//       minimumPrice,\r\n//       maximumPrice,\r\n//       Quantity\r\n//     });\r\n//   };\r\n\r\n//   forwardingChangeHandler = (e, domain) => {\r\n//     // this.setState({[e.target.name]: e.target.vlaue})\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//     listOfFoundDomainsToEdit.map(l => {\r\n//       if (l.domain === domain) {\r\n//         l.forwardURL = e.target.value;\r\n//       }\r\n//       return l;\r\n//     });\r\n//   };\r\n//   forwardingHandler = domain => {\r\n//     // console.log(e.target.value);\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//     let domainObj = listOfFoundDomainsToEdit.find(l => l.domain === domain);\r\n//     console.log(domainObj.forwardURL);\r\n//     this.state.socketClient.emit('forward', {\r\n//       domain,\r\n//       forwardURL: domainObj.forwardURL\r\n//     });\r\n//   };\r\n\r\n//   bulkForwardChangeURL = e => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   bulkPurchaseAndForward = () => {\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//     let newList = listOfFoundDomainsToEdit.map(l => {\r\n//       return {\r\n//         ...l,\r\n//         forwardURL: this.state.bulkForwardingURL\r\n//       };\r\n//     });\r\n//     // this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n//     this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n//   };\r\n//   clearAllDownloadFile = () => {\r\n//     this.setState({ listOfSelectedDomains: [], bulkForwardFinsh: false });\r\n//     this.state.socketClient.emit('clear', true);\r\n//   };\r\n\r\n//   domainsShuffleHandler = () => {\r\n//     let numberToTransfer = this.state.numberToBulkForward;\r\n//     // let totalNumberOfGeneratedDomains = this.state.listOfFoundDomains.length;\r\n//     console.log(\r\n//       this.state.listOfFoundDomains,\r\n//       this.state.listOfSelectedDomains\r\n//     );\r\n//     if (this.state.listOfSelectedDomains === numberToTransfer) {\r\n//       return;\r\n//     }\r\n\r\n//     if (this.state.listOfSelectedDomains.length < numberToTransfer) {\r\n//       let newSelectedArray = [\r\n//         ...this.state.listOfSelectedDomains,\r\n//         ...this.state.listOfFoundDomains.slice(\r\n//           0,\r\n//           numberToTransfer - this.state.listOfSelectedDomains.length\r\n//         )\r\n//       ];\r\n//       let remainingArray = this.state.listOfFoundDomains.slice(\r\n//         numberToTransfer - this.state.listOfSelectedDomains.length\r\n//       );\r\n//       console.log(newSelectedArray, remainingArray);\r\n//       this.setState({\r\n//         listOfFoundDomains: remainingArray,\r\n//         listOfSelectedDomains: newSelectedArray\r\n//       });\r\n//     } else if (this.state.listOfSelectedDomains.length > numberToTransfer) {\r\n//       let newSelectedArray = this.state.listOfSelectedDomains.slice(\r\n//         this.state.listOfSelectedDomains.length - numberToTransfer\r\n//       );\r\n//       let remainingArray = [\r\n//         ...this.state.listOfFoundDomains,\r\n//         ...this.state.listOfSelectedDomains.slice(\r\n//           0,\r\n//           this.state.listOfSelectedDomains.length - numberToTransfer\r\n//         )\r\n//       ];\r\n//       console.log(newSelectedArray, remainingArray);\r\n//       this.setState({\r\n//         listOfFoundDomains: remainingArray,\r\n//         listOfSelectedDomains: newSelectedArray\r\n//       });\r\n//     }\r\n//   };\r\n//   deleteSingleHandler = (control, domainToDelete) => {\r\n//     let controlArray = [...this.state[control]];\r\n//     let newControl = controlArray.filter(o => {\r\n//       return o.domain !== domainToDelete;\r\n//     });\r\n//     this.setState({ [control]: newControl });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className={classes.Container}>\r\n//         <div className={classes.BeastModeCont}>\r\n//           <div className={classes.DomainsListCont}>\r\n//             {this.state.domainsList.length > 0 &&\r\n//               this.state.domainsList.map(d => (\r\n//                 <div key={d.id} className={classes.tld}>\r\n//                   <span>{d.name}</span>\r\n//                   <b onClick={() => this.deleteTldHandler(d.id, 'domainsList')}>\r\n//                     x\r\n//                   </b>\r\n//                 </div>\r\n//               ))}\r\n//             {this.state.domainsList.length > 0 ? (\r\n//               <b\r\n//                 className={classes.clear}\r\n//                 onClick={() => this.clear('domainsList')}\r\n//               >\r\n//                 Clear all ({this.state.domainsList.length})\r\n//               </b>\r\n//             ) : null}\r\n//           </div>\r\n//           <div className={classes.domainInputCont}>\r\n//             <input\r\n//               type='text'\r\n//               name='domains'\r\n//               value={this.state.domains}\r\n//               onKeyDown={e => this.keyDownHandler(e, 'domainsList', 'domains')}\r\n//               placeholder='Enter between 3 to 5 domains or keywords to begin Jared'\r\n//               onChange={this.changedHandler}\r\n//             />\r\n//           </div>\r\n//           <div className={classes.PriceTLD}>\r\n//             <div className={classes.PriceControl}>\r\n//               <p>Price range</p>\r\n//               <div>\r\n//                 <span>$</span>{' '}\r\n//                 <input\r\n//                   value={this.state.minimumPrice}\r\n//                   type='text'\r\n//                   name='minimumPrice'\r\n//                   onChange={this.changedHandler}\r\n//                 />\r\n//               </div>\r\n//               <p>to</p>\r\n//               <div>\r\n//                 <span>$</span>{' '}\r\n//                 <input\r\n//                   value={this.state.maximumPrice}\r\n//                   type='text'\r\n//                   name='maximumPrice'\r\n//                   onChange={this.changedHandler}\r\n//                 />\r\n//               </div>\r\n//               <div className={classes.PrefixCont}>\r\n//                 <p className={classes.Header}>Prefixes</p>\r\n//                 <div className={classes.PrefixListCont}>\r\n//                   {this.state.prefixList.length > 0 &&\r\n//                     this.state.prefixList.map(d => (\r\n//                       <div key={d.id} className={classes.tld}>\r\n//                         <span>{d.name}</span>\r\n//                         <b\r\n//                           onClick={() =>\r\n//                             this.deleteTldHandler(d.id, 'prefixList')\r\n//                           }\r\n//                         >\r\n//                           x\r\n//                         </b>\r\n//                       </div>\r\n//                     ))}\r\n//                   {this.state.prefixList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('prefixList')}\r\n//                     >\r\n//                       Clear all ({this.state.prefixList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.PrefixInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='prefix'\r\n//                     value={this.state.prefix}\r\n//                     placeholder='Enter a tab separated list of prefixes'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'prefixList', 'prefix')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//               <div className={classes.PrefixCont}>\r\n//                 <p className={classes.Header}>Suffixes</p>\r\n//                 <div className={classes.SuffixListCont}>\r\n//                   {this.state.suffixList.length > 0 &&\r\n//                     this.state.suffixList.map(d => (\r\n//                       <div key={d.id} className={classes.tld}>\r\n//                         <span>{d.name}</span>\r\n//                         <b\r\n//                           onClick={() =>\r\n//                             this.deleteTldHandler(d.id, 'suffixList')\r\n//                           }\r\n//                         >\r\n//                           x\r\n//                         </b>\r\n//                       </div>\r\n//                     ))}\r\n//                   {this.state.suffixList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('suffixList')}\r\n//                     >\r\n//                       Clear all ({this.state.suffixList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.PrefixInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='suffix'\r\n//                     value={this.state.suffix}\r\n//                     placeholder='Enter a tab separated list of suffixes'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'suffixList', 'suffix')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className={classes.Right}>\r\n//               <div className={classes.TLDs}>\r\n//                 <div className={classes.ListOfTlds}>\r\n//                   {this.state.tldList.map(t => (\r\n//                     // <React.Fragment>\r\n//                     <div key={t.id} className={classes.tld}>\r\n//                       <span>{t.name}</span>\r\n//                       <b onClick={() => this.deleteTldHandler(t.id, 'tldList')}>\r\n//                         x\r\n//                       </b>\r\n//                     </div>\r\n//                     // </React.Fragment>\r\n//                   ))}\r\n//                   {this.state.tldList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('tldList')}\r\n//                     >\r\n//                       Clear all ({this.state.tldList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.TLDInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='tldInput'\r\n//                     value={this.state.tldInput}\r\n//                     placeholder='Enter a tab separated list of TLDs'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'tldList', 'tldInput')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className={classes.GenerateCont}>\r\n//             <button\r\n//               onClick={this.generate}\r\n//               disabled={\r\n//                 this.state.domainsList.length <= 0 ||\r\n//                 this.state.tldList.length <= 0\r\n//               }\r\n//             >\r\n//               Generate\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         {this.state.isFetching ? (\r\n//           <div className=''>\r\n//             <Spinner />\r\n//           </div>\r\n//         ) : null}\r\n//         {this.state.error.length > 0 ? (\r\n//           <p style={{ textAlign: 'center', color: 'red' }}>\r\n//             {this.state.error[0].msg}\r\n//           </p>\r\n//         ) : null}\r\n\r\n//         {/* TWO DOMAINS SAGA */}\r\n//         <div className={classes.TwoDomainsConts}>\r\n//           <div className={classes.FirstDomainsCont}>\r\n//             {this.state.listOfFoundDomains.length > 0 &&\r\n//               this.state.listOfFoundDomains.map(d => {\r\n//                 return (\r\n//                   <SingleDomain\r\n//                     l={d}\r\n//                     deleteSingle={() =>\r\n//                       this.deleteSingleHandler('listOfFoundDomains', d.domain)\r\n//                     }\r\n//                     purchaseHandler={this.purchaseHandler}\r\n//                     forwardingChangeHandler={this.forwardingChangeHandler}\r\n//                     forwardURL={d.forwardURL}\r\n//                     forwardingHandler={this.forwardingHandler}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//           </div>\r\n//           <div className={classes.BulkForwardCont}>\r\n//             <div className={classes.Right}>\r\n//               <button onClick={this.clearAllDownloadFile}>Clear All</button>\r\n//               <button onClick={this.downloadForwards}>\r\n//                 Download domain and Forwards\r\n//               </button>\r\n//             </div>\r\n//             {this.state.listOfFoundDomains.length > 0 ||\r\n//             this.state.listOfSelectedDomains.length > 0 ? (\r\n//               <div className={classes.EnterForwardingDetails}>\r\n//                 {/* Text to show after generation */}\r\n\r\n//                 <p>Bulk Forward Controller</p>\r\n\r\n//                 <div className={classes.Right}>\r\n//                   <input\r\n//                     type='number'\r\n//                     name='numberToBulkForward'\r\n//                     value={this.state.numberToBulkForward}\r\n//                     onChange={this.changedHandler}\r\n//                     placeholder='Enter Number of Links to Bulk Purchase and Forward'\r\n//                   />\r\n//                 </div>\r\n//                 {/* {this.state.numberToBulkForward ? ( */}\r\n//                 <div className={classes.Right}>\r\n//                   <button\r\n//                     disabled={\r\n//                       !this.state.numberToBulkForward ||\r\n//                       this.state.listOfFoundDomains.length +\r\n//                         this.state.listOfSelectedDomains.length <\r\n//                         this.state.numberToBulkForward\r\n//                     }\r\n//                     onClick={this.domainsShuffleHandler}\r\n//                   >\r\n//                     keep {this.state.numberToBulkForward} domains in bulk Box\r\n//                   </button>\r\n//                 </div>\r\n//                 {/* ) : null} */}\r\n//               </div>\r\n//             ) : null}\r\n//             <div className={classes.Right}>\r\n//               {!this.state.isFetching &&\r\n//               this.state.listOfSelectedDomains.length > 0 ? (\r\n//                 <div className={classes.TwoWorkers}>\r\n//                   {!this.state.bulkForwardFinsh ? (\r\n//                     <div>\r\n//                       <div className={classes.Right}>\r\n//                         <input\r\n//                           type='text'\r\n//                           name='bulkForwardingURL'\r\n//                           value={this.state.bulkForwardingURL}\r\n//                           onChange={this.bulkForwardChangeURL}\r\n//                           placeholder='Please enter base URL'\r\n//                         />\r\n//                       </div>\r\n//                       <div className={classes.TrafficSelectionCont}>\r\n//                         <div className={classes.TrafficSelectionRadio}>\r\n//                           <div className={classes.SingleRadio}><span> </span></div>\r\n//                           <div className={classes.SingleRadio}><span></span></div>\r\n//                           <div className={classes.SingleRadio}><span></span></div>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ) : null}\r\n//                 </div>\r\n//               ) : null}\r\n\r\n//               {this.state.bulkForwardFinsh ? null : this.state\r\n//                   .listOfSelectedDomains.length > 0 &&\r\n//                 !this.state.isFetching ? (\r\n//                 <button\r\n//                   onClick={this.bulkPurchaseAndForward}\r\n//                   disabled={!this.state.bulkForwardingURL}\r\n//                 >\r\n//                   Purchase and forward all\r\n//                 </button>\r\n//               ) : null}\r\n//             </div>\r\n//             {this.state.listOfSelectedDomains.length > 0 &&\r\n//               this.state.listOfSelectedDomains.map(d => {\r\n//                 return (\r\n//                   <SingleDomain\r\n//                     l={d}\r\n//                     deleteSingle={() =>\r\n//                       this.deleteSingleHandler(\r\n//                         'listOfSelectedDomains',\r\n//                         d.domain\r\n//                       )\r\n//                     }\r\n//                     selected\r\n//                     purchaseHandler={this.purchaseHandler}\r\n//                     forwardingChangeHandler={this.forwardingChangeHandler}\r\n//                     forwardURL={d.forwardURL}\r\n//                     forwardingHandler={this.forwardingHandler}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//             {this.state.listOfSelectedDomains.length <= 0 &&\r\n//             this.state.listOfFoundDomains.length <= 0 ? (\r\n//               <div>\r\n//                 {/* Text to show at the start of the generation process */}\r\n//               </div>\r\n//             ) : null}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default NamecheapForward;\r\n\r\nimport React, { Component } from 'react';\r\nimport classes from './NamecheapForward.module.css';\r\nimport uuid from 'uuid';\r\nimport socketIOClient from 'socket.io-client';\r\nimport moment from 'moment';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Global from '../GLOBAL/GLOBAL';\r\nimport SingleDomain from '../../components/SingleDomain/SingleDomain';\r\nclass NamecheapForward extends Component {\r\n  state = {\r\n    domains: '',\r\n    socketClient: socketIOClient(Global.domainNameCheap),\r\n    domainsList: [{ name: 'example', id: 1676723 }],\r\n    endpoint: Global.domain,\r\n    tldInput: '',\r\n    tldList: [\r\n      { name: '.red', id: 1676723 },\r\n      { name: '.site', id: 456676 }\r\n    ],\r\n    prefix: '',\r\n    prefixList: [{ name: 'love', id: 1676723 }],\r\n    suffix: '',\r\n    suffixList: [\r\n      { name: 'learn', id: 1676723 },\r\n      { name: 'use', id: 456676 }\r\n    ],\r\n    minimumPrice: 0,\r\n    maximumPrice: 10,\r\n    numberToBulkForward: null,\r\n    isFetching: false,\r\n    error: [],\r\n    bulkForwardingURL: '',\r\n    Quantity: 5,\r\n    bulkForwardFinsh: false,\r\n    listOfFoundDomains: [\r\n      // {\r\n      //   domain: '02b32423gerg22.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isInSelected: false,\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // },\r\n      // {\r\n      //   domain: '02b423424332.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isInSelected: false,\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n      // {\r\n      //   domain: 'loveexampleuse.site',\r\n      //   isAvailable: false,\r\n      //   forwardURL: '',\r\n      //   isPurchased: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n    ],\r\n    listOfSelectedDomains: [\r\n      // {\r\n      //   domain: '02b.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // },\r\n      // {\r\n      //   domain: 'loveexampleuse.site',\r\n      //   isAvailable: false,\r\n      //   forwardURL: '',\r\n      //   isPurchased: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n    ]\r\n  };\r\n  componentDidMount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.connect();\r\n\r\n    this.state.socketClient.on('bulkSendSuccess', _ => {\r\n      this.setState({ bulkForwardFinsh: true });\r\n    });\r\n    this.state.socketClient.on('errorPurchase', ({ msg, domain }) => {\r\n      console.log(msg, domain);\r\n      this.setState(p => {\r\n        return {\r\n          error: p.error.concat({ msg, domain })\r\n        };\r\n      });\r\n    });\r\n\r\n    this.state.socketClient.on('fetchEnd', _ => {\r\n      this.setState({ isFetching: false });\r\n    });\r\n    this.state.socketClient.on('downloadingNow', d => {\r\n      // this.setState({ isFetching: false });\r\n      var blob = new Blob([d], {\r\n        type: 'text/plain'\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      const date = new Date();\r\n      a.setAttribute('hidden', url);\r\n      a.setAttribute('href', url);\r\n      a.setAttribute(\r\n        'download',\r\n        `${moment(`${new Date().toISOString()}`).format('DD-MM-YYYY')}_${\r\n          this.state.listOfSelectedDomains.length\r\n        }_${this.state.bulkForwardingURL}.csv`\r\n      );\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n\r\n    this.state.socketClient.on('pushDomain', data => {\r\n      let listOfDomains = [...this.state.listOfFoundDomains];\r\n      console.log(listOfDomains);\r\n      let newList = listOfDomains.concat({\r\n        ...data,\r\n        forwardURL: '',\r\n        forwardSuccess: false\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n    this.state.socketClient.on('purchaseSuccessBulk', domain => {\r\n      let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n      let newList = listOfSelectedDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            isPurchased: true\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfSelectedDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('purchaseSuccess', domain => {\r\n      let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n      let newList = listOfFoundDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            isPurchased: true\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('forwardSuccessBulk', domain => {\r\n      let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n      let newList = listOfSelectedDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            forwardSuccess: true,\r\n            forwardURL: this.state.bulkForwardingURL\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfSelectedDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('forwardSuccess', domain => {\r\n      let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n      let newList = listOfFoundDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            forwardSuccess: true,\r\n            forwardURL: this.state.bulkForwardingURL\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n  }\r\n  deleteTldHandler = (id, controlList) => {\r\n    let tlds = [...this.state[controlList]];\r\n    let newtldList = tlds.filter(t => t.id !== id);\r\n    this.setState({ [controlList]: newtldList });\r\n  };\r\n  changedHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  keyDownHandler = (e, control, controlInput) => {\r\n    // console.log(e.key);\r\n    if (e.key === 'Tab' || e.key === ',') {\r\n      e.preventDefault();\r\n      let newTld = [\r\n        ...this.state[control],\r\n        { name: e.target.value, id: uuid() }\r\n      ];\r\n      this.setState({ [control]: newTld, [controlInput]: '' });\r\n      e.target.focus();\r\n    }\r\n  };\r\n  clear = controlList => {\r\n    this.setState({ [controlList]: [] });\r\n  };\r\n  purchaseHandler = domain => {\r\n    console.log(domain);\r\n    this.state.socketClient.emit('purchase', domain);\r\n  };\r\n  purchaseAndForwardBulk = () => {};\r\n  downloadForwards = () => {\r\n    this.state.socketClient.emit('download');\r\n  };\r\n  generate = () => {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.connect();\r\n    this.setState({ isFetching: true, bulkForwardFinsh: false, error: [] });\r\n    this.setState({ listOfFoundDomains: [] });\r\n    let prefixList = this.state.prefixList;\r\n    let suffixList = this.state.suffixList;\r\n    let domainsList = this.state.domainsList;\r\n    let tldList = this.state.tldList;\r\n    const { minimumPrice, maximumPrice, Quantity } = this.state;\r\n\r\n    this.state.socketClient.emit('check', {\r\n      prefixList,\r\n      suffixList,\r\n      domainsList,\r\n      tldList,\r\n      minimumPrice,\r\n      maximumPrice,\r\n      Quantity\r\n    });\r\n  };\r\n\r\n  forwardingChangeHandler = (e, domain) => {\r\n    // this.setState({[e.target.name]: e.target.vlaue})\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n    listOfFoundDomainsToEdit.map(l => {\r\n      if (l.domain === domain) {\r\n        l.forwardURL = e.target.value;\r\n      }\r\n      return l;\r\n    });\r\n  };\r\n  forwardingHandler = domain => {\r\n    // console.log(e.target.value);\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n    let domainObj = listOfFoundDomainsToEdit.find(l => l.domain === domain);\r\n    console.log(domainObj.forwardURL);\r\n    this.state.socketClient.emit('forward', {\r\n      domain,\r\n      forwardURL: domainObj.forwardURL\r\n    });\r\n  };\r\n\r\n  bulkForwardChangeURL = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  bulkPurchaseAndForward = () => {\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n    let newList = listOfFoundDomainsToEdit.map(l => {\r\n      return {\r\n        ...l,\r\n        forwardURL: this.state.bulkForwardingURL\r\n      };\r\n    });\r\n    // this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n    this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n  };\r\n  clearAllDownloadFile = () => {\r\n    this.setState({ listOfSelectedDomains: [], bulkForwardFinsh: false });\r\n    this.state.socketClient.emit('clear', true);\r\n  };\r\n\r\n  domainsShuffleHandler = () => {\r\n    let numberToTransfer = this.state.numberToBulkForward;\r\n    // let totalNumberOfGeneratedDomains = this.state.listOfFoundDomains.length;\r\n    console.log(\r\n      this.state.listOfFoundDomains,\r\n      this.state.listOfSelectedDomains\r\n    );\r\n    if (this.state.listOfSelectedDomains === numberToTransfer) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.listOfSelectedDomains.length < numberToTransfer) {\r\n      let newSelectedArray = [\r\n        ...this.state.listOfSelectedDomains,\r\n        ...this.state.listOfFoundDomains.slice(\r\n          0,\r\n          numberToTransfer - this.state.listOfSelectedDomains.length\r\n        )\r\n      ];\r\n      let remainingArray = this.state.listOfFoundDomains.slice(\r\n        numberToTransfer - this.state.listOfSelectedDomains.length\r\n      );\r\n      console.log(newSelectedArray, remainingArray);\r\n      this.setState({\r\n        listOfFoundDomains: remainingArray,\r\n        listOfSelectedDomains: newSelectedArray\r\n      });\r\n    } else if (this.state.listOfSelectedDomains.length > numberToTransfer) {\r\n      let newSelectedArray = this.state.listOfSelectedDomains.slice(\r\n        this.state.listOfSelectedDomains.length - numberToTransfer\r\n      );\r\n      let remainingArray = [\r\n        ...this.state.listOfFoundDomains,\r\n        ...this.state.listOfSelectedDomains.slice(\r\n          0,\r\n          this.state.listOfSelectedDomains.length - numberToTransfer\r\n        )\r\n      ];\r\n      console.log(newSelectedArray, remainingArray);\r\n      this.setState({\r\n        listOfFoundDomains: remainingArray,\r\n        listOfSelectedDomains: newSelectedArray\r\n      });\r\n    }\r\n  };\r\n  deleteSingleHandler = (control, domainToDelete) => {\r\n    let controlArray = [...this.state[control]];\r\n    let newControl = controlArray.filter(o => {\r\n      return o.domain !== domainToDelete;\r\n    });\r\n    this.setState({ [control]: newControl });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.BeastModeCont}>\r\n          <div className={classes.DomainsListCont}>\r\n            {this.state.domainsList.length > 0 &&\r\n              this.state.domainsList.map(d => (\r\n                <div key={d.id} className={classes.tld}>\r\n                  <span>{d.name}</span>\r\n                  <b onClick={() => this.deleteTldHandler(d.id, 'domainsList')}>\r\n                    x\r\n                  </b>\r\n                </div>\r\n              ))}\r\n            {this.state.domainsList.length > 0 ? (\r\n              <b\r\n                className={classes.clear}\r\n                onClick={() => this.clear('domainsList')}\r\n              >\r\n                Clear all ({this.state.domainsList.length})\r\n              </b>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.domainInputCont}>\r\n            <input\r\n              type='text'\r\n              name='domains'\r\n              value={this.state.domains}\r\n              onKeyDown={e => this.keyDownHandler(e, 'domainsList', 'domains')}\r\n              placeholder='Enter between 3 to 5 domains or keywords to begin Jared'\r\n              onChange={this.changedHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.PriceTLD}>\r\n            <div className={classes.PriceControl}>\r\n              <p>Price range</p>\r\n              <div>\r\n                <span>$</span>{' '}\r\n                <input\r\n                  value={this.state.minimumPrice}\r\n                  type='text'\r\n                  name='minimumPrice'\r\n                  onChange={this.changedHandler}\r\n                />\r\n              </div>\r\n              <p>to</p>\r\n              <div>\r\n                <span>$</span>{' '}\r\n                <input\r\n                  value={this.state.maximumPrice}\r\n                  type='text'\r\n                  name='maximumPrice'\r\n                  onChange={this.changedHandler}\r\n                />\r\n              </div>\r\n              <div className={classes.PrefixCont}>\r\n                <p className={classes.Header}>Prefixes</p>\r\n                <div className={classes.PrefixListCont}>\r\n                  {this.state.prefixList.length > 0 &&\r\n                    this.state.prefixList.map(d => (\r\n                      <div key={d.id} className={classes.tld}>\r\n                        <span>{d.name}</span>\r\n                        <b\r\n                          onClick={() =>\r\n                            this.deleteTldHandler(d.id, 'prefixList')\r\n                          }\r\n                        >\r\n                          x\r\n                        </b>\r\n                      </div>\r\n                    ))}\r\n                  {this.state.prefixList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('prefixList')}\r\n                    >\r\n                      Clear all ({this.state.prefixList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.PrefixInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='prefix'\r\n                    value={this.state.prefix}\r\n                    placeholder='Enter a tab separated list of prefixes'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'prefixList', 'prefix')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.PrefixCont}>\r\n                <p className={classes.Header}>Suffixes</p>\r\n                <div className={classes.SuffixListCont}>\r\n                  {this.state.suffixList.length > 0 &&\r\n                    this.state.suffixList.map(d => (\r\n                      <div key={d.id} className={classes.tld}>\r\n                        <span>{d.name}</span>\r\n                        <b\r\n                          onClick={() =>\r\n                            this.deleteTldHandler(d.id, 'suffixList')\r\n                          }\r\n                        >\r\n                          x\r\n                        </b>\r\n                      </div>\r\n                    ))}\r\n                  {this.state.suffixList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('suffixList')}\r\n                    >\r\n                      Clear all ({this.state.suffixList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.PrefixInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='suffix'\r\n                    value={this.state.suffix}\r\n                    placeholder='Enter a tab separated list of suffixes'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'suffixList', 'suffix')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.Right}>\r\n              <div className={classes.TLDs}>\r\n                <div className={classes.ListOfTlds}>\r\n                  {this.state.tldList.map(t => (\r\n                    // <React.Fragment>\r\n                    <div key={t.id} className={classes.tld}>\r\n                      <span>{t.name}</span>\r\n                      <b onClick={() => this.deleteTldHandler(t.id, 'tldList')}>\r\n                        x\r\n                      </b>\r\n                    </div>\r\n                    // </React.Fragment>\r\n                  ))}\r\n                  {this.state.tldList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('tldList')}\r\n                    >\r\n                      Clear all ({this.state.tldList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.TLDInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='tldInput'\r\n                    value={this.state.tldInput}\r\n                    placeholder='Enter a tab separated list of TLDs'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'tldList', 'tldInput')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.GenerateCont}>\r\n            <button\r\n              onClick={this.generate}\r\n              disabled={\r\n                this.state.domainsList.length <= 0 ||\r\n                this.state.tldList.length <= 0\r\n              }\r\n            >\r\n              Generate\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.isFetching ? (\r\n          <div className=''>\r\n            <Spinner />\r\n          </div>\r\n        ) : null}\r\n        {this.state.error.length > 0 ? (\r\n          <p style={{ textAlign: 'center', color: 'red' }}>\r\n            {this.state.error[0].msg}\r\n          </p>\r\n        ) : null}\r\n\r\n        {/* TWO DOMAINS SAGA */}\r\n        <div className={classes.TwoDomainsConts}>\r\n          <div className={classes.FirstDomainsCont}>\r\n            {this.state.listOfFoundDomains.length > 0 &&\r\n              this.state.listOfFoundDomains.map(d => {\r\n                return (\r\n                  <SingleDomain\r\n                    l={d}\r\n                    deleteSingle={() =>\r\n                      this.deleteSingleHandler('listOfFoundDomains', d.domain)\r\n                    }\r\n                    purchaseHandler={this.purchaseHandler}\r\n                    forwardingChangeHandler={this.forwardingChangeHandler}\r\n                    forwardURL={d.forwardURL}\r\n                    forwardingHandler={this.forwardingHandler}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className={classes.BulkForwardCont}>\r\n            <div className={classes.Right}>\r\n              <button onClick={this.clearAllDownloadFile}>Clear All</button>\r\n              <button onClick={this.downloadForwards}>\r\n                Download domain and Forwards\r\n              </button>\r\n            </div>\r\n            {this.state.listOfFoundDomains.length > 0 ||\r\n            this.state.listOfSelectedDomains.length > 0 ? (\r\n              <div className={classes.EnterForwardingDetails}>\r\n                {/* Text to show after generation */}\r\n\r\n                <p>Bulk Forward Controller</p>\r\n\r\n                <div className={classes.Right}>\r\n                  <input\r\n                    type='number'\r\n                    name='numberToBulkForward'\r\n                    value={this.state.numberToBulkForward}\r\n                    onChange={this.changedHandler}\r\n                    placeholder='Enter Number of Links to Bulk Purchase and Forward'\r\n                  />\r\n                </div>\r\n                {/* {this.state.numberToBulkForward ? ( */}\r\n                <div className={classes.Right}>\r\n                  <button\r\n                    disabled={\r\n                      !this.state.numberToBulkForward ||\r\n                      this.state.listOfFoundDomains.length +\r\n                        this.state.listOfSelectedDomains.length <\r\n                        this.state.numberToBulkForward\r\n                    }\r\n                    onClick={this.domainsShuffleHandler}\r\n                  >\r\n                    keep {this.state.numberToBulkForward} domains in bulk Box\r\n                  </button>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </div>\r\n            ) : null}\r\n            <div className={classes.Right}>\r\n              {!this.state.isFetching &&\r\n              this.state.listOfSelectedDomains.length > 0 ? (\r\n                <div className={classes.TwoWorkers}>\r\n                  {!this.state.bulkForwardFinsh ? (\r\n                    <div className={classes.Right}>\r\n                      <input\r\n                        type='text'\r\n                        name='bulkForwardingURL'\r\n                        value={this.state.bulkForwardingURL}\r\n                        onChange={this.bulkForwardChangeURL}\r\n                        placeholder='Please enter a forwarding URL for all the generated domains'\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.state.bulkForwardFinsh ? null : this.state\r\n                  .listOfSelectedDomains.length > 0 &&\r\n                !this.state.isFetching ? (\r\n                <button\r\n                  onClick={this.bulkPurchaseAndForward}\r\n                  disabled={!this.state.bulkForwardingURL}\r\n                >\r\n                  Purchase and forward all\r\n                </button>\r\n              ) : null}\r\n            </div>\r\n            {this.state.listOfSelectedDomains.length > 0 &&\r\n              this.state.listOfSelectedDomains.map(d => {\r\n                return (\r\n                  <SingleDomain\r\n                    l={d}\r\n                    deleteSingle={() =>\r\n                      this.deleteSingleHandler(\r\n                        'listOfSelectedDomains',\r\n                        d.domain\r\n                      )\r\n                    }\r\n                    selected\r\n                    purchaseHandler={this.purchaseHandler}\r\n                    forwardingChangeHandler={this.forwardingChangeHandler}\r\n                    forwardURL={d.forwardURL}\r\n                    forwardingHandler={this.forwardingHandler}\r\n                  />\r\n                );\r\n              })}\r\n            {this.state.listOfSelectedDomains.length <= 0 &&\r\n            this.state.listOfFoundDomains.length <= 0 ? (\r\n              <div>\r\n                {/* Text to show at the start of the generation process */}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NamecheapForward;\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './blacklist.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nclass BLA extends Component {\r\n  state = {\r\n    fileName: '',\r\n    traffic: '23',\r\n    dataowner: '23',\r\n    loading: false\r\n  };\r\n  handleFileUpload = e => {\r\n    let myevent = e;\r\n    console.log(e.target.files[0].name);\r\n    let name = e.target.files[0].name;\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.blacklist}/api/upload`, data)\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          fileName: name,\r\n          loading: false,\r\n          error: ''\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        console.log(e.response);\r\n        this.setState({ loading: false, error: 'error in file upload' });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.BLA}>\r\n          <div className={classes.Options}>\r\n            <div className={classes.Traffic}>\r\n              <select name='' id=''>\r\n                <option value=''>--- Select Vertical ---</option>\r\n                <option value=''>ED</option>\r\n                <option value=''>CASH FOR HOMES</option>\r\n                {/* <option value=\"\"></option> */}\r\n              </select>\r\n            </div>\r\n            <div className={classes.DataOwner}>\r\n              <input type='text' placeholder='Enter Data Owner' />\r\n            </div>\r\n\r\n            <div className={classes.fileUpload}>\r\n              <label htmlFor='blist'>Upload file</label>:{' '}\r\n              <span>\r\n                {this.state.loading ? 'uploading' : this.state.fileName}\r\n              </span>\r\n              <input onChange={this.handleFileUpload} type='file' id='blist' />\r\n            </div>\r\n            <div className={classes.Scrub}>\r\n              <button>Scrub</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BLA;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineAccountThree.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainpineaccountthree,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    totalCount: 0,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    rejectedCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpineaccountthree}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountthree}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpineaccountthree}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          {/* <div className={classes.sentCount}>\r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div> */}\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountThree\r\n          goToAccountFunc={() => this.props.history.push('/pineapple')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-2')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div className=''></div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../../containers/GLOBAL/GLOBAL';\r\n// import App from '../../App';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\nexport const authCheckStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_CHECK_START\r\n  };\r\n};\r\n\r\nexport const tellUserToVerify = () => {\r\n  return {\r\n    type: actionTypes.TELL_USER_TO_VERIFY\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, _id, fullName, email, authSuccessReload) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    _id,\r\n    fullName,\r\n    email,\r\n    authSuccessReload: authSuccessReload ? authSuccessReload : false\r\n    // userId: userId\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\nexport const authError = errorArray => {\r\n  return {\r\n    type: actionTypes.AUTH_ERROR,\r\n    errorArray\r\n  };\r\n};\r\nexport const toggleAuthModalAction = () => {\r\n  return {\r\n    type: actionTypes.SHOW_AUTH_MODAL\r\n  };\r\n};\r\nexport const setAuthModalToTrue = () => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_MODAL_TO_TRUE\r\n  };\r\n};\r\n\r\nexport const authLogOut = reload => {\r\n  localStorage.removeItem('token');\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n    reload\r\n  };\r\n};\r\n\r\nexport const authExpires = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(authLogOut());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\n// export const auth = (email, password, fullName, isSignin, phoneNumber) => {\r\n//   return dispatch => {\r\n//     dispatch(authStart());\r\n\r\n//     let authData;\r\n//     let url;\r\n//     if (isSignin) {\r\n//       authData = {\r\n//         email: email,\r\n//         password: password\r\n//       };\r\n//       url = `${App.domain}api/userauth/`;\r\n//     } else {\r\n//       authData = {\r\n//         email,\r\n//         fullName,\r\n//         password,\r\n//         phoneNumber\r\n//       };\r\n//       url = `${App.domain}api/users/`;\r\n//     }\r\n\r\n//     axios\r\n//       .post(url, authData)\r\n//       .then(response => {\r\n//         const { errors } = response.data;\r\n//         if (errors) {\r\n//           // throw new Error()\r\n//           return dispatch(authFail(response.data.errors));\r\n//         }\r\n//         if (isSignin) {\r\n//           const { token, _id, fullName, email, avatar } = response.data;\r\n\r\n//           if (token) {\r\n//             localStorage.setItem('token', token);\r\n//             dispatch(authSuccess(token, _id, fullName, email, avatar, true));\r\n//           }\r\n//         } else {\r\n//           if (response.data.timeToVerifyUser) {\r\n//             dispatch(tellUserToVerify());\r\n//           }\r\n//         }\r\n//       })\r\n\r\n//       .catch(error => {\r\n//         if (error.response === undefined)\r\n//           return dispatch(authFail([{ msg: 'server Error' }]));\r\n//         // console.log(error.response.data);\r\n//         if (error.response.data.errors) {\r\n//           dispatch(authFail(error.response.data.errors));\r\n//         }\r\n//         if (error.response.data.notConfirmed) {\r\n//           dispatch(setRedirectToEmailVerificationPage());\r\n//         }\r\n//       });\r\n//   };\r\n// };\r\n\r\n// const setRedirectToEmailVerificationPage = () => {\r\n//   return {\r\n//     type: actionTypes.SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE\r\n//   };\r\n// };\r\n\r\n// export const setAuthRedirectPath = path => {\r\n//   return {\r\n//     type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n//     path: path\r\n//   };\r\n// };\r\n\r\n// export const authCheckBeforeOp = () => {\r\n//   return dispatch => {\r\n//     // dispatch(authCheckBeforeOpStart());\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       dispatch(authLogOut());\r\n//       dispatch(authFail(''));\r\n//     } else {\r\n//       let config = {\r\n//         headers: {\r\n//           'x-auth-token': token\r\n//         }\r\n//       };\r\n//       let url = `${App.domain}api/auth/auto`;\r\n//       axios\r\n//         .get(url, config)\r\n//         .then(response => {\r\n//           // console.log(response.data);\r\n//           if (response.data === null) {\r\n//             dispatch(authLogOut());\r\n//             dispatch(authFail(''));\r\n//             return;\r\n//           }\r\n//           const { email, _id, fullName, avatar } = response.data;\r\n//           setTimeout(() => {\r\n//             dispatch(authSuccess(token, _id, fullName, email, avatar));\r\n//           }, 500);\r\n//         })\r\n\r\n//         .catch(error => {\r\n//           // console.log(error.response.data);\r\n//           if (error.response.data.msg) {\r\n//             dispatch(authLogOut());\r\n//             dispatch(authFail(''));\r\n//           }\r\n//         });\r\n//     }\r\n//   };\r\n// };\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    dispatch(authCheckStart());\r\n    setTimeout(() => {\r\n      console.log('I am starting');\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        dispatch(authLogOut());\r\n        dispatch(authFail(''));\r\n      } else {\r\n        let config = {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        };\r\n        let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n        axios\r\n          .get(url, config)\r\n          .then(response => {\r\n            const { _id, fullName } = response.data;\r\n            console.log(response.data);\r\n            setTimeout(() => {\r\n              dispatch(authSuccess(token, _id, fullName));\r\n            }, 1000);\r\n          })\r\n\r\n          .catch(error => {\r\n            console.log(error, 'error');\r\n            if (error.response && error.response.data.msg) {\r\n              dispatch(authLogOut());\r\n\r\n              dispatch(authFail(''));\r\n            }\r\n          });\r\n      }\r\n    }, 2000);\r\n  };\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_CHECK_START = 'AUTH_CHECK_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\nexport const SHOW_AUTH_MODAL = 'SHOW_AUTH_MODAL';\r\nexport const SET_AUTH_MODAL_TO_TRUE = 'SET_AUTH_MODAL_TO_TRUE';\r\nexport const AUTH_CHECK_BEFORE_AUTH = 'AUTH_CHECK_BEFORE_AUTH';\r\nexport const TELL_USER_TO_VERIFY = 'TELL_USER_TO_VERIFY';\r\nexport const SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE =\r\n  'SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE';\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './Auth.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { authSuccess } from '../../store/actions/auth';\r\nclass Auth extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    errors: []\r\n  };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.type]: e.target.value });\r\n  };\r\n  submitHandler = () => {\r\n    this.setState({ errors: [] });\r\n    axios\r\n      .post(`${GLOBAL.domainNameCheap}/api/auth`, {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        localStorage.setItem('token', res.data.token);\r\n\r\n        // this.props.history.push('/');\r\n        this.props.signin(\r\n          res.data.token,\r\n          res.data._id,\r\n          res.data.fullName,\r\n          res.data.email,\r\n          true\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({ errors: err.response.data.errors });\r\n      });\r\n  };\r\n  render() {\r\n    console.log(this.props.isAuthenticated);\r\n    return (\r\n      <Layout isAuthPage>\r\n        {this.props.isAuthenticated ? (\r\n          <span style={{ color: 'white', position: 'absolute' }}>\r\n            }{(document.location.href = '/')}\r\n          </span>\r\n        ) : (\r\n          'd'.includes('d')\r\n        )}\r\n        <div className={classes.Auth}>\r\n          {this.state.errors &&\r\n            this.state.errors.map(e => {\r\n              return (\r\n                <p\r\n                  key={e.msg}\r\n                  style={{\r\n                    color: 'red',\r\n                    margin: '0px',\r\n                    padding: '0px',\r\n                    fontSize: '15px'\r\n                  }}\r\n                >\r\n                  {e.msg}\r\n                </p>\r\n              );\r\n            })}\r\n          <p>Sign In</p>\r\n          <div className={classes.FormCont}>\r\n            <input\r\n              type='email'\r\n              placeholder='Enter your email'\r\n              onChange={this.changeHandler}\r\n              value={this.state.email}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') this.submitHandler();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.FormCont}>\r\n            <input\r\n              type='password'\r\n              placeholder='Enter your password'\r\n              onChange={this.changeHandler}\r\n              value={this.state.password}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') this.submitHandler();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.FormCont}>\r\n            <button onClick={this.submitHandler}>Sign in</button>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = d => {\r\n  return {\r\n    signin: (token, _id, fullName, email, authSuccessReload) =>\r\n      d(authSuccess(token, _id, fullName, email, authSuccessReload))\r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Auth));\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineappleHome.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    fullName: '',\r\n    pages: [\r\n      {\r\n        name: 'Fresh data 2way Account 1',\r\n        link: '/pineapple'\r\n      },\r\n      {\r\n        name: 'Fresh data 2way Account 2',\r\n        link: '/freshdata-2way-2'\r\n      },\r\n      {\r\n        name: 'Fresh data 2way Account 3',\r\n        link: '/freshdata-2way-3'\r\n      },\r\n      {\r\n        name: 'Buy Domain and Forward domains with the Namecheap API',\r\n        link: '/namecheap'\r\n      },\r\n      {\r\n        name: 'Scrub for mobiles with the Blacklist API',\r\n        link: '/blacklist'\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.Home}>\r\n          <div className={classes.UserDetails}>\r\n            {/* <p>Hi {this.state.fullName.split(' ')[0]}!</p> */}\r\n          </div>\r\n          <div className={classes.Pages}>\r\n            {this.state.pages.map(p => {\r\n              return (\r\n                <div key={p.name} className={classes.page}>\r\n                  <p onClick={() => window.open(p.link, '_blank')}>{p.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './LoadingPage.css';\r\nexport default function LoadingPage() {\r\n  return (\r\n    <div className='LoadingPageContainer'>\r\n      <div className='lds-css ng-scope'>\r\n        <div style={{ width: '100%', height: '100%' }} className='lds-ellipsis'>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport { Switch, Route, BrowserRouter, withRouter } from 'react-router-dom';\n// import logo from './logo.svg';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Home from './containers/Home/Home';\nimport HomeDev from './containers/HomeDev/HomeDev';\nimport PauseScreen from './containers/PauseScreen/PauseScreen';\nimport Pine from './containers/Pine/Pine';\nimport PineAccountTwo from './containers/PineAccountTwo/PineAccountTwo';\nimport Snapshots from './containers/Snapshots/Snapshots';\nimport NamecheapForward from './containers/NamecheapForward/NamecheapForward';\nimport BLA from './containers/BLA/BLA';\nimport PineAccountThree from './containers/PineAccountThree/PineAccountThree';\nimport Auth from './containers/Auth/Auth';\nimport PineappleHome from './containers/PineappleHome/PineappleHome';\nimport { authCheckState } from './store/actions/auth';\n// import Test from './containers/Test/Test';\nimport LoadingPage from './components/LoadingPage/LoadingPage';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignIn();\n  }\n  render() {\n    let appRoute = (\n      <div className='App'>\n        <Switch>\n          <Route path='/' exact={true} component={Home} />\n          {/* <Route path='/test' exact={true} component={Test} /> */}\n          <Route path='/pause-screen' exact={true} component={PauseScreen} />\n          <Route path='/mobiniti' exact={true} component={HomeDev} />\n          <Route path='/pineapple' exact={true} component={Pine} />\n          <Route\n            path='/pineapple-home'\n            exact={true}\n            component={PineappleHome}\n          />\n          <Route path='/namecheap' exact={true} component={NamecheapForward} />\n          <Route path='/blacklist' exact={true} component={BLA} />\n          <Route\n            path='/freshdata-2way-2'\n            exact={true}\n            component={PineAccountTwo}\n          />\n          <Route\n            path='/freshdata-2way-3'\n            exact={true}\n            component={PineAccountThree}\n          />\n          <Route path='/snapshots-2way-1' exact={true} component={Snapshots} />\n          <Route path='/auth' exact={true} component={Auth} />\n          {/* <Route\n        path='/snapshot-freshdata'\n        exact={true}\n        component={PineAccountTwo}\n      /> */}\n          {/* <Home /> */}\n        </Switch>\n      </div>\n    );\n    return this.props.authCheck ? <LoadingPage /> : appRoute;\n  }\n}\nconst mapStateToProps = state => {\n  // console.log(state, 'from App.js');\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authCheck: state.auth.authCheckLoading\n    // productAddSuccess: state.prod.showSuccessTag\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignIn: () => dispatch(authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst updateObject = (state, updatedProperties) => {\r\n  return {\r\n    ...state,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authCheckLoading: false,\r\n  authRedirectPath: null,\r\n  _id: null,\r\n  firstLoad: 0,\r\n  fullName: null,\r\n  email: null,\r\n  avatar: null,\r\n  authCheckBeforeOpLoading: false,\r\n  authSuccessReload: false,\r\n  tellUserToVerify: false,\r\n  showAuthModal: false,\r\n  redirectToEmailVerificationPage: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true,\r\n    token: null,\r\n    _id: null,\r\n    fullName: null,\r\n    email: null,\r\n    authCheckBeforeOpLoading: false,\r\n    avatar: null\r\n  });\r\n};\r\nconst authCheckStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    authCheckLoading: true,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst authCheckBeforeOpStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    authCheckBeforeOpLoading: true,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    authCheckLoading: false,\r\n    error: null,\r\n    firstLoad: 1,\r\n    token: action.idToken,\r\n    _id: action._id,\r\n    fullName: action.fullName,\r\n    email: action.email,\r\n    // avatar: action.avatar,\r\n    authCheckBeforeOpLoading: false,\r\n    authSuccessReload: action.authSuccessReload\r\n  });\r\n};\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    authCheckLoading: false,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1,\r\n    error: action.error\r\n  });\r\n};\r\n\r\nconst authLogOut = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    error: null,\r\n    firstLoad: 1,\r\n    authSuccessReload: action.reload,\r\n    authCheckBeforeOpLoading: false,\r\n\r\n    token: null,\r\n    _id: null,\r\n    fullName: null,\r\n    email: null,\r\n    avatar: null\r\n  });\r\n};\r\nconst toggleAuthModal = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    showAuthModal: !state.showAuthModal,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst setAuthModalToTrue = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    showAuthModal: true,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return updateObject(state, {\r\n    authRedirectPath: action.path,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst tellUserToVerify = (state, action) => {\r\n  return updateObject(state, {\r\n    tellUserToVerify: true\r\n  });\r\n};\r\nconst setRedirectToEmailVerificationPage = (state, action) => {\r\n  return updateObject(state, {\r\n    redirectToEmailVerificationPage: true\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_CHECK_BEFORE_AUTH:\r\n      return authCheckBeforeOpStart(state, action);\r\n    case actionTypes.AUTH_CHECK_START:\r\n      return authCheckStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogOut(state, action);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action);\r\n    case actionTypes.SHOW_AUTH_MODAL:\r\n      return toggleAuthModal(state, action);\r\n    case actionTypes.SET_AUTH_MODAL_TO_TRUE:\r\n      return setAuthModalToTrue(state, action);\r\n    case actionTypes.TELL_USER_TO_VERIFY:\r\n      return tellUserToVerify(state, action);\r\n    case actionTypes.SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE:\r\n      return setRedirectToEmailVerificationPage(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport authReducer from './reducers/auth';\r\n// import NotificationsReducer from './reducers/notifications';\r\n// import cartReducer from './reducers/cart';\r\nimport thunk from 'redux-thunk';\r\nconst rootReducer = combineReducers({\r\n  // cart: cartReducer,\r\n  auth: authReducer\r\n  // notification: NotificationsReducer\r\n});\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === 'development'\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/createdStore';\n\nimport { Provider } from 'react-redux';\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentCount\":\"Snapshots_sentCount__3uFai\",\"Row\":\"Snapshots_Row__3j1oT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"PineAccountTwo_CallerId__275Eu\",\"OptionButton\":\"PineAccountTwo_OptionButton__2XoSY\",\"DPerc\":\"PineAccountTwo_DPerc__2Ef9-\",\"percCont\":\"PineAccountTwo_percCont__2rKs4\",\"PausedCont\":\"PineAccountTwo_PausedCont__21Xkt\",\"rotate90\":\"PineAccountTwo_rotate90__1i5xy\",\"FileCont\":\"PineAccountTwo_FileCont__1IEXS\",\"FormBody\":\"PineAccountTwo_FormBody__1yI1k\",\"filesCont\":\"PineAccountTwo_filesCont__ohN1-\",\"PhoneAndMessage\":\"PineAccountTwo_PhoneAndMessage__TqlJi\",\"loading\":\"PineAccountTwo_loading__3u7ri\",\"Container\":\"PineAccountTwo_Container__1w8tZ\",\"Submit\":\"PineAccountTwo_Submit__3artT\",\"OptionAddCont\":\"PineAccountTwo_OptionAddCont__1PIY7\",\"withOrWithoutOne\":\"PineAccountTwo_withOrWithoutOne__23ZMz\",\"SpeedControl\":\"PineAccountTwo_SpeedControl__IKSvk\",\"slider\":\"PineAccountTwo_slider__1b5cR\",\"sentCount\":\"PineAccountTwo_sentCount__2EsmB\",\"DropArea\":\"PineAccountTwo_DropArea__2hXRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleDomain\":\"SingleDomain_SingleDomain__O9Sou\",\"Name\":\"SingleDomain_Name__1HABg\",\"successForwarding\":\"SingleDomain_successForwarding__3PFI2\",\"forwardCont\":\"SingleDomain_forwardCont__3AgaV\",\"Right\":\"SingleDomain_Right__1qQVb\",\"atTop\":\"SingleDomain_atTop__p9TNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputCont\":\"PauseScreen_InputCont__2dzxO\",\"PauseScreen\":\"PauseScreen_PauseScreen__3N-G-\",\"Submit\":\"PauseScreen_Submit__1gjMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Options\":\"blacklist_Options__Xj3en\",\"fileUpload\":\"blacklist_fileUpload__30Xcb\",\"Scrub\":\"blacklist_Scrub__23sid\",\"Traffic\":\"blacklist_Traffic__h7pmu\",\"DataOwner\":\"blacklist_DataOwner__3Aekx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__QKusg\",\"snap\":\"Layout_snap__31qan\",\"Header\":\"Layout_Header__3eCmQ\",\"settings\":\"Layout_settings__5oZAM\",\"liveStatus\":\"Layout_liveStatus__1e-0S\",\"logo\":\"Layout_logo__AO5KA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Home_page__o6S6k\",\"UserDetails\":\"Home_UserDetails__34sCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"Pine_CallerId__PX6eu\",\"DPerc\":\"Pine_DPerc__koKv6\",\"percCont\":\"Pine_percCont__3oh6T\",\"OptionButton\":\"Pine_OptionButton__3DmSI\",\"PausedCont\":\"Pine_PausedCont__2HzJl\",\"rotate90\":\"Pine_rotate90__1JG0_\",\"FileCont\":\"Pine_FileCont__1hlsR\",\"FormBody\":\"Pine_FormBody__3xljI\",\"filesCont\":\"Pine_filesCont__suZ_G\",\"PhoneAndMessage\":\"Pine_PhoneAndMessage__3uRRx\",\"loading\":\"Pine_loading__oVmha\",\"Container\":\"Pine_Container__2SaCC\",\"Submit\":\"Pine_Submit__Z0nZa\",\"OptionAddCont\":\"Pine_OptionAddCont__1T9zG\",\"withOrWithoutOne\":\"Pine_withOrWithoutOne__3wtZU\",\"SpeedControl\":\"Pine_SpeedControl__144qg\",\"slider\":\"Pine_slider__3EaVg\",\"sentCount\":\"Pine_sentCount__3FjZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__27P_s\",\"FormCont\":\"Auth_FormCont__2T8JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"PineappleHome_page__1HJoO\",\"UserDetails\":\"PineappleHome_UserDetails__2UsEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BeastModeCont\":\"NamecheapForward_BeastModeCont__173hQ\",\"domainInputCont\":\"NamecheapForward_domainInputCont__17aPh\",\"PriceTLD\":\"NamecheapForward_PriceTLD__GftAk\",\"PriceControl\":\"NamecheapForward_PriceControl__nDEnD\",\"Right\":\"NamecheapForward_Right__blSF5\",\"TLDs\":\"NamecheapForward_TLDs__1enhH\",\"TLDInputCont\":\"NamecheapForward_TLDInputCont__1PZ2g\",\"PrefixInputCont\":\"NamecheapForward_PrefixInputCont__2tH28\",\"ListOfTlds\":\"NamecheapForward_ListOfTlds__rQ8go\",\"tld\":\"NamecheapForward_tld__2Ve5P\",\"DomainsListCont\":\"NamecheapForward_DomainsListCont__3Yb-0\",\"PrefixListCont\":\"NamecheapForward_PrefixListCont__3pWOs\",\"SuffixListCont\":\"NamecheapForward_SuffixListCont__16c_s\",\"clear\":\"NamecheapForward_clear__2vJzV\",\"Header\":\"NamecheapForward_Header__3dU0Y\",\"GenerateCont\":\"NamecheapForward_GenerateCont__QBrvJ\",\"TwoDomainsConts\":\"NamecheapForward_TwoDomainsConts__2AjLW\",\"FirstDomainsCont\":\"NamecheapForward_FirstDomainsCont__3TegW\",\"BulkForwardCont\":\"NamecheapForward_BulkForwardCont__1fUeF\",\"EnterForwardingDetails\":\"NamecheapForward_EnterForwardingDetails__2GqNa\",\"TrafficSelectionRadio\":\"NamecheapForward_TrafficSelectionRadio__i6mQm\",\"SingleRadio\":\"NamecheapForward_SingleRadio__3QQiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"PineAccountThree_CallerId__3yEi5\",\"OptionButton\":\"PineAccountThree_OptionButton__22orr\",\"DPerc\":\"PineAccountThree_DPerc__3ZFw-\",\"percCont\":\"PineAccountThree_percCont__3z9_S\",\"PausedCont\":\"PineAccountThree_PausedCont__1vykH\",\"rotate90\":\"PineAccountThree_rotate90__4iI7m\",\"FileCont\":\"PineAccountThree_FileCont__3Tkqj\",\"FormBody\":\"PineAccountThree_FormBody__3Vtn4\",\"filesCont\":\"PineAccountThree_filesCont__2GDdk\",\"PhoneAndMessage\":\"PineAccountThree_PhoneAndMessage__23h0z\",\"loading\":\"PineAccountThree_loading__b_zhl\",\"Container\":\"PineAccountThree_Container__2o-qA\",\"Submit\":\"PineAccountThree_Submit__1XtkQ\",\"OptionAddCont\":\"PineAccountThree_OptionAddCont__3M8EJ\",\"withOrWithoutOne\":\"PineAccountThree_withOrWithoutOne__29IMf\",\"SpeedControl\":\"PineAccountThree_SpeedControl__36yfr\",\"slider\":\"PineAccountThree_slider__3J4Gf\",\"sentCount\":\"PineAccountThree_sentCount__1hGy8\"};","module.exports = __webpack_public_path__ + \"static/media/color.003bc224.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ring\":\"Spinner_lds-ring__2tl2D\"};"],"sourceRoot":""}