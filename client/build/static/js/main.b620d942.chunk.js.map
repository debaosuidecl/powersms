{"version":3,"sources":["containers/HomeDev/HomeDev.module.css","containers/GLOBAL/GLOBAL.js","components/Layout/Layout.js","components/Spinner/Spinner.js","containers/Home/Home.js","containers/HomeDev/HomeDev.js","containers/PauseScreen/PauseScreen.js","containers/Pine/Pine.js","containers/PineAccountTwo/PineAccountTwo.js","containers/Snapshots/Snapshots.js","components/SingleDomain/SingleDomain.js","containers/NamecheapForward/NamecheapForward.js","containers/BLA/BLA.js","containers/PineAccountThree/PineAccountThree.js","components/NameCheapLayout/NameCheapLayout.js","containers/Auth/Auth.js","store/actions/auth.js","store/actions/actionTypes.js","App.js","serviceWorker.js","store/reducers/auth.js","store/createdStore.js","index.js","containers/Snapshots/Snapshots.module.css","containers/PineAccountTwo/PineAccountTwo.module.css","components/SingleDomain/SingleDomain.module.css","containers/PauseScreen/PauseScreen.module.css","containers/BLA/blacklist.module.css","components/Layout/Layout.module.css","containers/Home/Home.module.css","containers/Auth/Auth.module.css","containers/Pine/Pine.module.css","components/Layout/color.png","components/NameCheapLayout/NameCheapLayout.module.css","containers/NamecheapForward/NamecheapForward.module.css","containers/PineAccountThree/PineAccountThree.module.css","components/Spinner/Spinner.module.css"],"names":["module","exports","GLOBAL","Component","domain","domainMobiniti","domainpine","blacklist","domainNameCheap","domainpineaccountone","domainpineaccountthree","Layout","children","accountOne","mobiniti","accountTwo","autoRotate","autoRotateClickFunction","goToAccountFunc","goToOtherAccountFunc","accountThree","className","classes","Header","logo","width","src","Logo","settings","snap","onClick","Fragment","localStorage","removeItem","document","location","href","Spinner","Home","state","fullName","pages","name","link","token","getItem","config","headers","url","axios","get","then","response","data","email","_id","console","log","setState","catch","error","msg","UserDetails","this","split","Pages","map","p","key","page","window","open","ani","file","phoneFile","isStarted","speed","endpoint","sentCount","loading","isDoneSending","isPaused","deliveredCount","unDeliveredCount","downloadableCSV","unknownCount","withLeadingOne","onDownloadFile","a","async","blob","Blob","type","URL","createObjectURL","createElement","date","Date","setAttribute","getMilliseconds","body","appendChild","click","removeChild","socketIOClient","emit","numberWithCommas","x","toString","replace","onChangeHandler","event","target","files","FormData","append","post","onChangePhoneFileHandler","submitHandler","preventDefault","socket","filename","resumeSending","connect","pauseHandler","disconnect","exists","messageCount","isPause","_doc","isSending","displayName","phoneNumberSending","on","_","prevState","parseInt","content","Left","style","color","margin","CallerId","SpinCont","filesCont","PhoneAndMessage","htmlFor","icon","faFileCsv","transition","transform","FileCont","id","onChange","placeholder","withOrWithoutOne","OptionAddCont","faCheck","SpeedControl","min","max","e","value","slider","faThumbsDown","PausedCont","OptionButton","Submit","FormBody","Container","PauseScreen","dnis","message","results","onchangehandler","verify","r","message_id","newResarray","res","m","success","status","InputCont","i","Pine","enrouteCount","totalCount","rejectedCount","noRouteCount","sentStatus","expiredCount","deletedCount","acceptedCount","clearCountHandler","err","transports","percCont","DPerc","toFixed","props","history","push","isDragOver","fileState","forEach","length","dragOverHandler","dragLeaveHandler","onDropHandler","dataTransfer","referrer","fileList","slice","next","DropArea","border","opacity","onDragOver","onDrop","onDragLeave","multiple","d","Snapshots","counterArray","onLoadMore","Global","array","c","Row","noRoutecount","SingleDomain","l","purchaseHandler","forwardingChangeHandler","forwardingHandler","forwardURL","deleteSingle","selected","isAvailable","Name","Price","atTop","isPurchased","size","Right","disabled","forwardSuccess","successForwarding","forwardCont","NamecheapForward","domains","socketClient","domainsList","tldInput","tldList","prefix","prefixList","suffix","suffixList","minimumPrice","maximumPrice","numberToBulkForward","isFetching","bulkForwardingURL","Quantity","bulkForwardFinsh","listOfFoundDomains","listOfSelectedDomains","deleteTldHandler","controlList","newtldList","filter","t","changedHandler","keyDownHandler","control","controlInput","newTld","uuid","focus","clear","purchaseAndForwardBulk","downloadForwards","generate","domainObj","find","bulkForwardChangeURL","bulkPurchaseAndForward","newList","clearAllDownloadFile","domainsShuffleHandler","numberToTransfer","newSelectedArray","remainingArray","deleteSingleHandler","domainToDelete","newControl","o","concat","moment","toISOString","format","listOfDomains","BeastModeCont","DomainsListCont","tld","domainInputCont","onKeyDown","PriceTLD","PriceControl","PrefixCont","PrefixListCont","PrefixInputCont","SuffixListCont","TLDs","ListOfTlds","TLDInputCont","GenerateCont","textAlign","TwoDomainsConts","FirstDomainsCont","BulkForwardCont","EnterForwardingDetails","TwoWorkers","BLA","fileName","traffic","dataowner","handleFileUpload","Options","Traffic","DataOwner","fileUpload","Scrub","Auth","password","errors","changeHandler","setItem","signin","isAuthenticated","includes","padding","fontSize","FormCont","auth","authSuccessReload","idToken","authSuccess","withRouter","App","path","exact","component","HomeDev","PineAccountTwo","PineAccountThree","Boolean","hostname","match","updateObject","updatedProperties","initialState","userId","authCheckLoading","authRedirectPath","firstLoad","avatar","authCheckBeforeOpLoading","tellUserToVerify","showAuthModal","redirectToEmailVerificationPage","authStart","action","authCheckStart","authCheckBeforeOpStart","authFail","authLogOut","reload","toggleAuthModal","setAuthModalToTrue","setAuthRedirectPath","setRedirectToEmailVerificationPage","reducer","rootReducer","combineReducers","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b620d942.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"HomeDev_CallerId__2jzt1\",\"OptionButton\":\"HomeDev_OptionButton__14mDc\",\"PausedCont\":\"HomeDev_PausedCont__3lzg3\",\"rotate90\":\"HomeDev_rotate90__SjyUD\",\"FileCont\":\"HomeDev_FileCont__jNq9s\",\"FormBody\":\"HomeDev_FormBody__3F2iw\",\"filesCont\":\"HomeDev_filesCont__2Yb8m\",\"PhoneAndMessage\":\"HomeDev_PhoneAndMessage__YQPaZ\",\"loading\":\"HomeDev_loading__16B71\",\"Container\":\"HomeDev_Container__3tsf2\",\"Submit\":\"HomeDev_Submit__1K8O6\",\"OptionAddCont\":\"HomeDev_OptionAddCont__3i8aV\",\"withOrWithoutOne\":\"HomeDev_withOrWithoutOne__3UL4A\",\"SpeedControl\":\"HomeDev_SpeedControl__5cZsn\",\"slider\":\"HomeDev_slider__2NQs2\",\"sentCount\":\"HomeDev_sentCount__2wCWS\"};","import React, { Component } from 'react';\r\n\r\nclass GLOBAL extends Component {\r\n  static domain =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://powersms.land'\r\n      : 'http://localhost:7000';\r\n  static domainMobiniti =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://192.64.113.28:9000'\r\n      : 'http://localhost:9000';\r\n  static domainpine =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://aone.powersms.land'\r\n      : 'http://localhost:9090';\r\n  //\r\n  static blacklist =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://blacklist.powersms.land'\r\n      : 'http://localhost:8024';\r\n  static domainNameCheap =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://namecheap.powersms.land'\r\n      : 'http://localhost:8023';\r\n  static domainpineaccountone =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://atwo.powersms.land'\r\n      : 'http://localhost:7800';\r\n  static domainpineaccountthree =\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'https://athree.powersms.land'\r\n      : 'http://localhost:7802';\r\n  render() {\r\n    return;\r\n  }\r\n}\r\n\r\nexport default GLOBAL;\r\n","import React from 'react';\r\nimport classes from './Layout.module.css';\r\n// import {router} from \"react-router-dom\"\r\nimport Logo from './color.png';\r\n\r\nexport default function Layout({\r\n  children,\r\n  mobiniti,\r\n  accountOne,\r\n  accountTwo,\r\n  autoRotate,\r\n  autoRotateClickFunction,\r\n  goToAccountFunc,\r\n  goToOtherAccountFunc,\r\n  accountThree\r\n}) {\r\n  return (\r\n    <div className={classes.Layout}>\r\n      <div className={classes.Header}>\r\n        <p className={classes.logo}>\r\n          {/* {mobiniti\r\n            ? 'FDN - Mobiniti'\r\n            : accountOne\r\n            ? 'FreshData2Way Account 1'\r\n            : accountTwo\r\n            ? 'FreshData2Way Account 2'\r\n            : accountThree\r\n            ? 'FreshData2Way Account 3'\r\n            : 'POWER-SMS'} */}\r\n          <img width='300px' src={Logo} />\r\n        </p>\r\n        {\r\n          <div className={classes.settings}>\r\n            {autoRotate ? (\r\n              <span className={classes.snap} onClick={autoRotateClickFunction}>\r\n                Snapshots\r\n              </span>\r\n            ) : null}\r\n            {accountOne ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 2</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 3</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {accountTwo ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 1</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 3</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            {accountThree ? (\r\n              <React.Fragment>\r\n                <button onClick={goToAccountFunc}>Go to account 1</button>\r\n                <button onClick={goToOtherAccountFunc}>Go to account 2</button>\r\n              </React.Fragment>\r\n            ) : null}\r\n            <button\r\n              onClick={() => {\r\n                localStorage.removeItem('token');\r\n                document.location.href = '/auth';\r\n              }}\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={classes['lds-ring']}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './Home.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    fullName: '',\r\n    pages: [\r\n      {\r\n        name: 'Fresh data 2way Account 1',\r\n        link: '/pineapple'\r\n      },\r\n      {\r\n        name: 'Fresh data 2way Account 2',\r\n        link: '/freshdata-2way-2'\r\n      },\r\n      {\r\n        name: 'Fresh data 2way Account 3',\r\n        link: '/freshdata-2way-3'\r\n      },\r\n      {\r\n        name: 'Buy Domain and Forward domains with the Namecheap API',\r\n        link: '/namecheap'\r\n      },\r\n      {\r\n        name: 'Scrub for mobiles with the Blacklist API',\r\n        link: '/blacklist'\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n          this.setState({ fullName });\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.Home}>\r\n          <div className={classes.UserDetails}>\r\n            <p>Hi {this.state.fullName.split(' ')[0]}!</p>\r\n          </div>\r\n          <div className={classes.Pages}>\r\n            {this.state.pages.map(p => {\r\n              return (\r\n                <div key={p.name} className={classes.page}>\r\n                  <p onClick={() => window.open(p.link, '_blank')}>{p.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './HomeDev.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheck,\r\n  faThumbsDown,\r\n  faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nclass Home extends Component {\r\n  state = {\r\n    ani: '123',\r\n    file: null,\r\n    phoneFile: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainMobiniti,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${GLOBAL.domainMobiniti}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          unknownCount,\r\n          messageCount\r\n        } = data;\r\n        if (data.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        console.log(data);\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          unknownCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + parseInt(data)\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.emit('kill', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainMobiniti}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  onChangePhoneFileHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ phoneFile: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('phone', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainMobiniti}/api/uploadphones`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n        // phoneFile: this.state.phoneFile\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          {/* <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div> */}\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div className={classes.filesCont}>\r\n                <div className={classes.PhoneAndMessage}>\r\n                  <p>Enter message File:</p>\r\n                  <label htmlFor='file'>\r\n                    <F\r\n                      icon={faFileCsv}\r\n                      style={{\r\n                        color: this.state.file ? 'black' : '#bbb',\r\n                        transition: '1s',\r\n                        transform: this.state.file\r\n                          ? 'rotateX(360deg)'\r\n                          : 'rotateX(0deg)'\r\n                      }}\r\n                      // color='black'\r\n                    />\r\n                  </label>\r\n                  <div className={classes.FileCont}>\r\n                    <input\r\n                      type='file'\r\n                      id='file'\r\n                      // value={ani}\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder='Caller ID'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* <div className={classes.PhoneAndMessage}>\r\n                  <p>Enter phone File:</p>\r\n                  <label htmlFor='phones'>\r\n                    <F icon={faFileCsv} />\r\n                  </label>\r\n                  <div className={classes.FileCont}>\r\n                    <input\r\n                      type='file'\r\n                      id='phones'\r\n                      // value={ani}\r\n                      name='phones'\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder='Caller ID'\r\n                    />\r\n                  </div> */}\r\n                {/* </div> */}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout mobiniti>\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './PauseScreen.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nclass PauseScreen extends Component {\r\n  state = {\r\n    ani: '',\r\n    dnis: '',\r\n    message: '',\r\n    results: []\r\n  };\r\n\r\n  onchangehandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  verify = r => {\r\n    axios\r\n      .get(`${GLOBAL.domain}/api/status?message_id=${r.message_id}`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let newResarray = this.state.results.map(res => {\r\n          // console.log(res, 'resultsss');\r\n          console.log(data.m === res.message_id);\r\n          console.log('filterrrr');\r\n          return {\r\n            success: res.success,\r\n            message_id: res.message_id,\r\n            dnis: res.dnis,\r\n            status: data.m === res.message_id ? data.status : res.status\r\n          };\r\n        });\r\n        console.log(newResarray, 'newres');\r\n        this.setState({\r\n          results: newResarray\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    const { ani, dnis, message } = this.state;\r\n    return (\r\n      <Layout>\r\n        <div className={classes.PauseScreen}>\r\n          <p>Sender ID:</p>\r\n          <div className={classes.InputCont}>\r\n            <input onChange={this.onchangehandler} name='ani' type='text' />\r\n          </div>\r\n          <p>Comma Seperate Destination IDs (with Leading one please)</p>\r\n          <div className={classes.InputCont}>\r\n            <textarea\r\n              name='dnis'\r\n              value={dnis}\r\n              onChange={this.onchangehandler}\r\n            ></textarea>\r\n          </div>\r\n          <p>Enter a message</p>\r\n          <div className={classes.InputCont}>\r\n            <textarea\r\n              name='message'\r\n              value={message}\r\n              onChange={this.onchangehandler}\r\n            ></textarea>\r\n          </div>\r\n          <div className=''>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                console.log('go');\r\n                axios\r\n                  .get(\r\n                    `${GLOBAL.domain}/api/testmysends?ani=${ani}&dnis=${dnis}&message=${message}`\r\n                  )\r\n                  .then(({ data }) => {\r\n                    console.log(data);\r\n                    this.setState({ results: data });\r\n                  })\r\n                  .catch(e => {\r\n                    console.log(e);\r\n                  });\r\n              }}\r\n            >\r\n              Send Test Message\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>RESULTS:</p>\r\n          {this.state.results &&\r\n            this.state.results.map((r, i) => {\r\n              return (\r\n                <div className=''>\r\n                  {r.message_id === 'no routes' ? (\r\n                    <p>message was not sent to {r.dnis}</p>\r\n                  ) : (\r\n                    <div>\r\n                      <p>message was sent to {r.dnis}</p>\r\n                      <button\r\n                        className={classes.Submit}\r\n                        onClick={() => {\r\n                          this.verify(r);\r\n                        }}\r\n                      >\r\n                        Check Result\r\n                      </button>\r\n                      <p>{r.status}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PauseScreen;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './Pine.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint:\r\n      process.env.NODE_ENV === 'production'\r\n        ? 'https://aone.powersms.land'\r\n        : GLOBAL.domainpine,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    totalCount: 0,\r\n    rejectedCount: 0,\r\n    noRouteCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpine}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount,\r\n          noRouteCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false,\r\n          noRouteCount\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint, {\r\n          transports: ['websocket']\r\n        });\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('NO ROUTES', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              noRouteCount: prevState.noRouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      noRouteCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      noRouteCount: 0,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      noRouteCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpine}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint, {transports: ['websocket']});\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domain}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint, {\r\n      transports: ['websocket']\r\n    });\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          {/* <div className={classes.sentCount}>\r\n          \r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div> */}\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.noRouteCount)} NR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountOne\r\n          autoRotate\r\n          goToAccountFunc={() => this.props.history.push('/freshdata-2way-2')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-3')\r\n          }\r\n          autoRotateClickFunction={() =>\r\n            this.props.history.push('/snapshots-2way-1')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint, {\r\n                  transports: ['websocket']\r\n                });\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineAccountTwo.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '0123456789',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainpineaccountone,\r\n    sentCount: 0,\r\n    totalCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    rejectedCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true,\r\n    isDragOver: false,\r\n    files: []\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(document.referrer, 'right here');\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpineaccountone}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.fileList) {\r\n          this.setState({\r\n            files: data._doc.fileList\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('removeFileFromSendStatus', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              files: prevState.files.slice(1)\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null,\r\n            files: []\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountone}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files);\r\n    // console.log(event.target.files[0]);\r\n    let fileState = [];\r\n\r\n    this.setState({\r\n      file: event.target.files[0].name\r\n      // files: event.target.files\r\n    });\r\n    const data = new FormData();\r\n    [...event.target.files].forEach(file => {\r\n      data.append('file', file);\r\n    });\r\n    for (let i = 0; i < event.target.files.length; i++) {\r\n      // event.target.files\r\n      fileState.push(event.target.files[i].name);\r\n      // data.append('file', event.target.files[i]);\r\n    }\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpineaccountone}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false,\r\n        isDragOver: false,\r\n        files: fileState\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  dragOverHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ isDragOver: true });\r\n  };\r\n  dragLeaveHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ isDragOver: false });\r\n  };\r\n  onDropHandler = e => {\r\n    e.preventDefault();\r\n    let dt = e.dataTransfer;\r\n    let files = dt.files;\r\n    this.setState({\r\n      file: files[0].name\r\n      // files: event.target.files\r\n    });\r\n    console.log(files, 'files from drop');\r\n    const data = new FormData();\r\n    let fileState = [];\r\n    [...files].forEach(file => {\r\n      data.append('file', file);\r\n    });\r\n    for (let i = 0; i < files.length; i++) {\r\n      // event.target.files\r\n      fileState.push(files[i].name);\r\n    }\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountone}/api/upload`, data)\r\n      .then(() => {\r\n        this.setState({\r\n          loading: false,\r\n          isDoneSending: false,\r\n          files: fileState,\r\n          isDragOver: false\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.files[0]}...</p>\r\n                <p>Up Next:</p>\r\n                <div className=''>\r\n                  {this.state.files.slice(1).map((next, i) => {\r\n                    return <p key={i}>{next}</p>;\r\n                  })}\r\n                </div>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className={classes.DropArea}\r\n                style={{\r\n                  border: '1px dotted #bbb',\r\n                  opacity: this.state.isDragOver ? 0.5 : 1\r\n                }}\r\n                onDragOver={this.dragOverHandler}\r\n                onDrop={this.onDropHandler}\r\n                onDragLeave={this.dragLeaveHandler}\r\n              >\r\n                <input\r\n                  type='file'\r\n                  // value={ani}\r\n                  multiple\r\n                  onChange={this.onChangeHandler}\r\n                  placeholder='Caller ID'\r\n                />\r\n                {this.state.files.length <= 0 ? (\r\n                  <p>Input or drag and drop multiple files</p>\r\n                ) : null}\r\n                <div className=''>\r\n                  {this.state.files.map((d, i) => (\r\n                    <p key={i}>{d}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            {/* {this.state.isDoneSending ? <p>Sending Complete</p> : null} */}\r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountTwo\r\n          goToAccountFunc={() => this.props.history.push('/pineapple')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-3')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div className=''></div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../GLOBAL/GLOBAL';\r\nimport classes from './Snapshots.module.css';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Layout from '../../components/Layout/Layout';\r\nclass Snapshots extends Component {\r\n  state = {\r\n    counterArray: [],\r\n    page: 2,\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${Global.domainpine}/api/getmessagecounts/1`)\r\n      .then(({ data }) => {\r\n        let array = data;\r\n        console.log(data);\r\n        this.setState(p => {\r\n          return {\r\n            counterArray: [...p.counterArray, ...array],\r\n            loading: false\r\n          };\r\n        });\r\n      });\r\n  }\r\n  onLoadMore = () => {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(`${Global.domainpine}/api/getmessagecounts/${this.state.page}`)\r\n      .then(({ data }) => {\r\n        let array = data.counterArray;\r\n        console.log(array);\r\n        this.setState(p => {\r\n          return {\r\n            counterArray: array\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        SNAPSHOTS FROM PINEAPPLE FRESHDATA2WAY ACCOUNT ONE\r\n        {this.state.counterArray &&\r\n          this.state.counterArray.map(c => {\r\n            return (\r\n              <div className={classes.Row}>\r\n                <div className={classes.sentCount}>\r\n                  {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n                  <p>{this.numberWithCommas(c.sentCount)} sends</p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.deliveredCount)} D{' '}\r\n                    <F color='lightgreen' icon={faCheck} />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.unDeliveredCount)} U{' '}\r\n                    <F icon={faThumbsDown} color='red' />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.rejectedCount)} R{' '}\r\n                    <F icon={faThumbsDown} color='black' />\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.enrouteCount)} ENR{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.expiredCount)} EXP{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.deletedCount)} DEL{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.sentStatus)} SENT{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.acceptedCount)} ACPT{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.unknownCount)} UKNWN{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                <div className={classes.sentCount}>\r\n                  <p>\r\n                    {this.numberWithCommas(c.noRoutecount || 0)} UKNWN{' '}\r\n                    {/* <F icon={faThumbsDown} color='black' /> */}\r\n                  </p>\r\n                </div>\r\n                {/* <button onClick={this.clearCountHandler}>Clear Counter</button> */}\r\n              </div>\r\n            );\r\n          })}\r\n        <p>Load More </p>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Snapshots;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './SingleDomain.module.css';\r\nconst SingleDomain = ({\r\n  l,\r\n  purchaseHandler,\r\n  forwardingChangeHandler,\r\n  forwardURL,\r\n  forwardingHandler,\r\n  deleteSingle,\r\n  selected\r\n}) => {\r\n  return (\r\n    <div className=''>\r\n      <div\r\n        className={classes.SingleDomain}\r\n        style={{ color: l.isAvailable ? 'inherit' : '#bbb' }}\r\n      >\r\n        <div className={classes.Left}>\r\n          <p className={classes.Name}>{l.domain}</p>\r\n          <p>${l.Price}</p>\r\n        </div>\r\n        <div className={classes.atTop} onClick={deleteSingle}>\r\n          x\r\n        </div>\r\n        {selected ? null : (\r\n          <div className=''>\r\n            {l.isPurchased ? (\r\n              <F icon={faCheck} color='lightgreen' size='3x' />\r\n            ) : (\r\n              <div className={classes.Right}>\r\n                <button\r\n                  disabled={!l.isAvailable}\r\n                  onClick={() => purchaseHandler(l.domain)}\r\n                >\r\n                  {l.isAvailable ? 'Purchase' : 'Not Available'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {l.forwardSuccess ? (\r\n        <div className={classes.successForwarding}>\r\n          <p>\r\n            {l.domain} now forwards to {l.forwardURL}\r\n          </p>\r\n        </div>\r\n      ) : l.isPurchased ? (\r\n        <div className={classes.forwardCont}>\r\n          <input\r\n            type='text'\r\n            name='forwardURL'\r\n            // value={forwardURL}\r\n            onChange={e => forwardingChangeHandler(e, l.domain)}\r\n            placeholder='Enter your forwarding url here'\r\n          />\r\n\r\n          <button onClick={() => forwardingHandler(l.domain)}>Submit</button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDomain;\r\n","// import React, { Component } from 'react';\r\n// import classes from './NamecheapForward.module.css';\r\n// import uuid from 'uuid';\r\n// import socketIOClient from 'socket.io-client';\r\n// import moment from 'moment';\r\n// import Spinner from '../../components/Spinner/Spinner';\r\n// import Global from '../GLOBAL/GLOBAL';\r\n// import SingleDomain from '../../components/SingleDomain/SingleDomain';\r\n// class NamecheapForward extends Component {\r\n//   state = {\r\n//     domains: '',\r\n//     socketClient: socketIOClient(Global.domainNameCheap),\r\n//     domainsList: [{ name: 'example', id: 1676723 }],\r\n//     endpoint: Global.domain,\r\n//     tldInput: '',\r\n//     tldList: [\r\n//       { name: '.red', id: 1676723 },\r\n//       { name: '.site', id: 456676 }\r\n//     ],\r\n//     prefix: '',\r\n//     prefixList: [{ name: 'love', id: 1676723 }],\r\n//     suffix: '',\r\n//     suffixList: [\r\n//       { name: 'learn', id: 1676723 },\r\n//       { name: 'use', id: 456676 }\r\n//     ],\r\n//     minimumPrice: 0,\r\n//     maximumPrice: 10,\r\n//     numberToBulkForward: null,\r\n//     isFetching: false,\r\n//     error: [],\r\n//     bulkForwardingURL: '',\r\n//     Quantity: 5,\r\n//     bulkForwardFinsh: false,\r\n//     listOfFoundDomains: [\r\n//       // {\r\n//       //   domain: '02b32423gerg22.xyz',\r\n//       //   isAvailable: 'true',\r\n//       //   isInSelected: false,\r\n//       //   isPurchased: false,\r\n//       //   forwardURL: 'http://google.com',\r\n//       //   forwardSuccess: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   // forwardSuccess:\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // },\r\n//       // {\r\n//       //   domain: '02b423424332.xyz',\r\n//       //   isAvailable: 'true',\r\n//       //   isInSelected: false,\r\n//       //   isPurchased: false,\r\n//       //   forwardURL: 'http://google.com',\r\n//       //   forwardSuccess: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   // forwardSuccess:\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // }\r\n//       // {\r\n//       //   domain: 'loveexampleuse.site',\r\n//       //   isAvailable: false,\r\n//       //   forwardURL: '',\r\n//       //   isPurchased: false,\r\n//       //   isPremiumName: 'false',\r\n//       //   Duration: '1',\r\n//       //   DurationType: 'YEAR',\r\n//       //   Price: '1.28',\r\n//       //   PricingType: 'MULTIPLE',\r\n//       //   AdditionalCost: '0.18',\r\n//       //   RegularPrice: '25.88',\r\n//       //   RegularPriceType: 'MULTIPLE',\r\n//       //   RegularAdditionalCost: '0.18',\r\n//       //   RegularAdditionalCostType: 'MULTIPLE',\r\n//       //   YourPrice: '1.28',\r\n//       //   YourPriceType: 'MULTIPLE',\r\n//       //   YourAdditonalCost: '0.18',\r\n//       //   YourAdditonalCostType: 'MULTIPLE',\r\n//       //   PromotionPrice: '0.0',\r\n//       //   Currency: 'USD'\r\n//       // }\r\n//     ],\r\n//     listOfSelectedDomains: [\r\n//       {\r\n//         domain: '02b.xyz',\r\n//         isAvailable: 'true',\r\n//         isPurchased: false,\r\n//         forwardURL: 'http://google.com',\r\n//         forwardSuccess: false,\r\n//         isPremiumName: 'false',\r\n//         Duration: '1',\r\n//         DurationType: 'YEAR',\r\n//         Price: '1.28',\r\n//         // forwardSuccess:\r\n//         PricingType: 'MULTIPLE',\r\n//         AdditionalCost: '0.18',\r\n//         RegularPrice: '25.88',\r\n//         RegularPriceType: 'MULTIPLE',\r\n//         RegularAdditionalCost: '0.18',\r\n//         RegularAdditionalCostType: 'MULTIPLE',\r\n//         YourPrice: '1.28',\r\n//         YourPriceType: 'MULTIPLE',\r\n//         YourAdditonalCost: '0.18',\r\n//         YourAdditonalCostType: 'MULTIPLE',\r\n//         PromotionPrice: '0.0',\r\n//         Currency: 'USD'\r\n//       },\r\n//       {\r\n//         domain: 'loveexampleuse.site',\r\n//         isAvailable: false,\r\n//         forwardURL: '',\r\n//         isPurchased: false,\r\n//         isPremiumName: 'false',\r\n//         Duration: '1',\r\n//         DurationType: 'YEAR',\r\n//         Price: '1.28',\r\n//         PricingType: 'MULTIPLE',\r\n//         AdditionalCost: '0.18',\r\n//         RegularPrice: '25.88',\r\n//         RegularPriceType: 'MULTIPLE',\r\n//         RegularAdditionalCost: '0.18',\r\n//         RegularAdditionalCostType: 'MULTIPLE',\r\n//         YourPrice: '1.28',\r\n//         YourPriceType: 'MULTIPLE',\r\n//         YourAdditonalCost: '0.18',\r\n//         YourAdditonalCostType: 'MULTIPLE',\r\n//         PromotionPrice: '0.0',\r\n//         Currency: 'USD'\r\n//       }\r\n//     ]\r\n//   };\r\n//   componentDidMount() {\r\n//     // const socket = socketIOClient(this.state.endpoint);\r\n//     // socket.connect();\r\n\r\n//     this.state.socketClient.on('bulkSendSuccess', _ => {\r\n//       this.setState({ bulkForwardFinsh: true });\r\n//     });\r\n//     this.state.socketClient.on('errorPurchase', ({ msg, domain }) => {\r\n//       console.log(msg, domain);\r\n//       this.setState(p => {\r\n//         return {\r\n//           error: p.error.concat({ msg, domain })\r\n//         };\r\n//       });\r\n//     });\r\n\r\n//     this.state.socketClient.on('fetchEnd', _ => {\r\n//       this.setState({ isFetching: false });\r\n//     });\r\n//     this.state.socketClient.on('downloadingNow', d => {\r\n//       // this.setState({ isFetching: false });\r\n//       var blob = new Blob([d], {\r\n//         type: 'text/plain'\r\n//       });\r\n\r\n//       const url = window.URL.createObjectURL(blob);\r\n//       const a = document.createElement('a');\r\n//       const date = new Date();\r\n//       a.setAttribute('hidden', url);\r\n//       a.setAttribute('href', url);\r\n//       a.setAttribute(\r\n//         'download',\r\n//         `${moment(`${new Date().toISOString()}`).format('DD-MM-YYYY')}_${\r\n//           this.state.listOfSelectedDomains.length\r\n//         }_${this.state.bulkForwardingURL}.csv`\r\n//       );\r\n//       document.body.appendChild(a);\r\n//       a.click();\r\n//       document.body.removeChild(a);\r\n//     });\r\n\r\n//     this.state.socketClient.on('pushDomain', data => {\r\n//       let listOfDomains = [...this.state.listOfFoundDomains];\r\n//       console.log(listOfDomains);\r\n//       let newList = listOfDomains.concat({\r\n//         ...data,\r\n//         forwardURL: '',\r\n//         forwardSuccess: false\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n//     this.state.socketClient.on('purchaseSuccessBulk', domain => {\r\n//       let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//       let newList = listOfSelectedDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             isPurchased: true\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfSelectedDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('purchaseSuccess', domain => {\r\n//       let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//       let newList = listOfFoundDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             isPurchased: true\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('forwardSuccessBulk', domain => {\r\n//       let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//       let newList = listOfSelectedDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             forwardSuccess: true,\r\n//             forwardURL: this.state.bulkForwardingURL\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfSelectedDomains: newList });\r\n//     });\r\n\r\n//     this.state.socketClient.on('forwardSuccess', domain => {\r\n//       let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//       let newList = listOfFoundDomainsToEdit.map(l => {\r\n//         if (l.domain === domain) {\r\n//           return {\r\n//             ...l,\r\n//             forwardSuccess: true,\r\n//             forwardURL: this.state.bulkForwardingURL\r\n//           };\r\n//         } else {\r\n//           return l;\r\n//         }\r\n//       });\r\n//       this.setState({ listOfFoundDomains: newList });\r\n//     });\r\n//   }\r\n//   deleteTldHandler = (id, controlList) => {\r\n//     let tlds = [...this.state[controlList]];\r\n//     let newtldList = tlds.filter(t => t.id !== id);\r\n//     this.setState({ [controlList]: newtldList });\r\n//   };\r\n//   changedHandler = e => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   keyDownHandler = (e, control, controlInput) => {\r\n//     // console.log(e.key);\r\n//     if (e.key === 'Tab' || e.key === ',') {\r\n//       e.preventDefault();\r\n//       let newTld = [\r\n//         ...this.state[control],\r\n//         { name: e.target.value, id: uuid() }\r\n//       ];\r\n//       this.setState({ [control]: newTld, [controlInput]: '' });\r\n//       e.target.focus();\r\n//     }\r\n//   };\r\n//   clear = controlList => {\r\n//     this.setState({ [controlList]: [] });\r\n//   };\r\n//   purchaseHandler = domain => {\r\n//     console.log(domain);\r\n//     this.state.socketClient.emit('purchase', domain);\r\n//   };\r\n//   purchaseAndForwardBulk = () => {};\r\n//   downloadForwards = () => {\r\n//     this.state.socketClient.emit('download');\r\n//   };\r\n//   generate = () => {\r\n//     // const socket = socketIOClient(this.state.endpoint);\r\n//     // socket.connect();\r\n//     this.setState({ isFetching: true, bulkForwardFinsh: false, error: [] });\r\n//     this.setState({ listOfFoundDomains: [] });\r\n//     let prefixList = this.state.prefixList;\r\n//     let suffixList = this.state.suffixList;\r\n//     let domainsList = this.state.domainsList;\r\n//     let tldList = this.state.tldList;\r\n//     const { minimumPrice, maximumPrice, Quantity } = this.state;\r\n\r\n//     this.state.socketClient.emit('check', {\r\n//       prefixList,\r\n//       suffixList,\r\n//       domainsList,\r\n//       tldList,\r\n//       minimumPrice,\r\n//       maximumPrice,\r\n//       Quantity\r\n//     });\r\n//   };\r\n\r\n//   forwardingChangeHandler = (e, domain) => {\r\n//     // this.setState({[e.target.name]: e.target.vlaue})\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//     listOfFoundDomainsToEdit.map(l => {\r\n//       if (l.domain === domain) {\r\n//         l.forwardURL = e.target.value;\r\n//       }\r\n//       return l;\r\n//     });\r\n//   };\r\n//   forwardingHandler = domain => {\r\n//     // console.log(e.target.value);\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n//     let domainObj = listOfFoundDomainsToEdit.find(l => l.domain === domain);\r\n//     console.log(domainObj.forwardURL);\r\n//     this.state.socketClient.emit('forward', {\r\n//       domain,\r\n//       forwardURL: domainObj.forwardURL\r\n//     });\r\n//   };\r\n\r\n//   bulkForwardChangeURL = e => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   bulkPurchaseAndForward = () => {\r\n//     let listOfFoundDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n//     let newList = listOfFoundDomainsToEdit.map(l => {\r\n//       return {\r\n//         ...l,\r\n//         forwardURL: this.state.bulkForwardingURL\r\n//       };\r\n//     });\r\n//     // this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n//     this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n//   };\r\n//   clearAllDownloadFile = () => {\r\n//     this.setState({ listOfSelectedDomains: [], bulkForwardFinsh: false });\r\n//     this.state.socketClient.emit('clear', true);\r\n//   };\r\n\r\n//   domainsShuffleHandler = () => {\r\n//     let numberToTransfer = this.state.numberToBulkForward;\r\n//     // let totalNumberOfGeneratedDomains = this.state.listOfFoundDomains.length;\r\n//     console.log(\r\n//       this.state.listOfFoundDomains,\r\n//       this.state.listOfSelectedDomains\r\n//     );\r\n//     if (this.state.listOfSelectedDomains === numberToTransfer) {\r\n//       return;\r\n//     }\r\n\r\n//     if (this.state.listOfSelectedDomains.length < numberToTransfer) {\r\n//       let newSelectedArray = [\r\n//         ...this.state.listOfSelectedDomains,\r\n//         ...this.state.listOfFoundDomains.slice(\r\n//           0,\r\n//           numberToTransfer - this.state.listOfSelectedDomains.length\r\n//         )\r\n//       ];\r\n//       let remainingArray = this.state.listOfFoundDomains.slice(\r\n//         numberToTransfer - this.state.listOfSelectedDomains.length\r\n//       );\r\n//       console.log(newSelectedArray, remainingArray);\r\n//       this.setState({\r\n//         listOfFoundDomains: remainingArray,\r\n//         listOfSelectedDomains: newSelectedArray\r\n//       });\r\n//     } else if (this.state.listOfSelectedDomains.length > numberToTransfer) {\r\n//       let newSelectedArray = this.state.listOfSelectedDomains.slice(\r\n//         this.state.listOfSelectedDomains.length - numberToTransfer\r\n//       );\r\n//       let remainingArray = [\r\n//         ...this.state.listOfFoundDomains,\r\n//         ...this.state.listOfSelectedDomains.slice(\r\n//           0,\r\n//           this.state.listOfSelectedDomains.length - numberToTransfer\r\n//         )\r\n//       ];\r\n//       console.log(newSelectedArray, remainingArray);\r\n//       this.setState({\r\n//         listOfFoundDomains: remainingArray,\r\n//         listOfSelectedDomains: newSelectedArray\r\n//       });\r\n//     }\r\n//   };\r\n//   deleteSingleHandler = (control, domainToDelete) => {\r\n//     let controlArray = [...this.state[control]];\r\n//     let newControl = controlArray.filter(o => {\r\n//       return o.domain !== domainToDelete;\r\n//     });\r\n//     this.setState({ [control]: newControl });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className={classes.Container}>\r\n//         <div className={classes.BeastModeCont}>\r\n//           <div className={classes.DomainsListCont}>\r\n//             {this.state.domainsList.length > 0 &&\r\n//               this.state.domainsList.map(d => (\r\n//                 <div key={d.id} className={classes.tld}>\r\n//                   <span>{d.name}</span>\r\n//                   <b onClick={() => this.deleteTldHandler(d.id, 'domainsList')}>\r\n//                     x\r\n//                   </b>\r\n//                 </div>\r\n//               ))}\r\n//             {this.state.domainsList.length > 0 ? (\r\n//               <b\r\n//                 className={classes.clear}\r\n//                 onClick={() => this.clear('domainsList')}\r\n//               >\r\n//                 Clear all ({this.state.domainsList.length})\r\n//               </b>\r\n//             ) : null}\r\n//           </div>\r\n//           <div className={classes.domainInputCont}>\r\n//             <input\r\n//               type='text'\r\n//               name='domains'\r\n//               value={this.state.domains}\r\n//               onKeyDown={e => this.keyDownHandler(e, 'domainsList', 'domains')}\r\n//               placeholder='Enter between 3 to 5 domains or keywords to begin Jared'\r\n//               onChange={this.changedHandler}\r\n//             />\r\n//           </div>\r\n//           <div className={classes.PriceTLD}>\r\n//             <div className={classes.PriceControl}>\r\n//               <p>Price range</p>\r\n//               <div>\r\n//                 <span>$</span>{' '}\r\n//                 <input\r\n//                   value={this.state.minimumPrice}\r\n//                   type='text'\r\n//                   name='minimumPrice'\r\n//                   onChange={this.changedHandler}\r\n//                 />\r\n//               </div>\r\n//               <p>to</p>\r\n//               <div>\r\n//                 <span>$</span>{' '}\r\n//                 <input\r\n//                   value={this.state.maximumPrice}\r\n//                   type='text'\r\n//                   name='maximumPrice'\r\n//                   onChange={this.changedHandler}\r\n//                 />\r\n//               </div>\r\n//               <div className={classes.PrefixCont}>\r\n//                 <p className={classes.Header}>Prefixes</p>\r\n//                 <div className={classes.PrefixListCont}>\r\n//                   {this.state.prefixList.length > 0 &&\r\n//                     this.state.prefixList.map(d => (\r\n//                       <div key={d.id} className={classes.tld}>\r\n//                         <span>{d.name}</span>\r\n//                         <b\r\n//                           onClick={() =>\r\n//                             this.deleteTldHandler(d.id, 'prefixList')\r\n//                           }\r\n//                         >\r\n//                           x\r\n//                         </b>\r\n//                       </div>\r\n//                     ))}\r\n//                   {this.state.prefixList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('prefixList')}\r\n//                     >\r\n//                       Clear all ({this.state.prefixList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.PrefixInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='prefix'\r\n//                     value={this.state.prefix}\r\n//                     placeholder='Enter a tab separated list of prefixes'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'prefixList', 'prefix')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//               <div className={classes.PrefixCont}>\r\n//                 <p className={classes.Header}>Suffixes</p>\r\n//                 <div className={classes.SuffixListCont}>\r\n//                   {this.state.suffixList.length > 0 &&\r\n//                     this.state.suffixList.map(d => (\r\n//                       <div key={d.id} className={classes.tld}>\r\n//                         <span>{d.name}</span>\r\n//                         <b\r\n//                           onClick={() =>\r\n//                             this.deleteTldHandler(d.id, 'suffixList')\r\n//                           }\r\n//                         >\r\n//                           x\r\n//                         </b>\r\n//                       </div>\r\n//                     ))}\r\n//                   {this.state.suffixList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('suffixList')}\r\n//                     >\r\n//                       Clear all ({this.state.suffixList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.PrefixInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='suffix'\r\n//                     value={this.state.suffix}\r\n//                     placeholder='Enter a tab separated list of suffixes'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'suffixList', 'suffix')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className={classes.Right}>\r\n//               <div className={classes.TLDs}>\r\n//                 <div className={classes.ListOfTlds}>\r\n//                   {this.state.tldList.map(t => (\r\n//                     // <React.Fragment>\r\n//                     <div key={t.id} className={classes.tld}>\r\n//                       <span>{t.name}</span>\r\n//                       <b onClick={() => this.deleteTldHandler(t.id, 'tldList')}>\r\n//                         x\r\n//                       </b>\r\n//                     </div>\r\n//                     // </React.Fragment>\r\n//                   ))}\r\n//                   {this.state.tldList.length > 0 ? (\r\n//                     <b\r\n//                       className={classes.clear}\r\n//                       onClick={() => this.clear('tldList')}\r\n//                     >\r\n//                       Clear all ({this.state.tldList.length})\r\n//                     </b>\r\n//                   ) : null}\r\n//                 </div>\r\n//                 <div className={classes.TLDInputCont}>\r\n//                   <input\r\n//                     type='text'\r\n//                     name='tldInput'\r\n//                     value={this.state.tldInput}\r\n//                     placeholder='Enter a tab separated list of TLDs'\r\n//                     onChange={this.changedHandler}\r\n//                     onKeyDown={e =>\r\n//                       this.keyDownHandler(e, 'tldList', 'tldInput')\r\n//                     }\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className={classes.GenerateCont}>\r\n//             <button\r\n//               onClick={this.generate}\r\n//               disabled={\r\n//                 this.state.domainsList.length <= 0 ||\r\n//                 this.state.tldList.length <= 0\r\n//               }\r\n//             >\r\n//               Generate\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         {this.state.isFetching ? (\r\n//           <div className=''>\r\n//             <Spinner />\r\n//           </div>\r\n//         ) : null}\r\n//         {this.state.error.length > 0 ? (\r\n//           <p style={{ textAlign: 'center', color: 'red' }}>\r\n//             {this.state.error[0].msg}\r\n//           </p>\r\n//         ) : null}\r\n\r\n//         {/* TWO DOMAINS SAGA */}\r\n//         <div className={classes.TwoDomainsConts}>\r\n//           <div className={classes.FirstDomainsCont}>\r\n//             {this.state.listOfFoundDomains.length > 0 &&\r\n//               this.state.listOfFoundDomains.map(d => {\r\n//                 return (\r\n//                   <SingleDomain\r\n//                     l={d}\r\n//                     deleteSingle={() =>\r\n//                       this.deleteSingleHandler('listOfFoundDomains', d.domain)\r\n//                     }\r\n//                     purchaseHandler={this.purchaseHandler}\r\n//                     forwardingChangeHandler={this.forwardingChangeHandler}\r\n//                     forwardURL={d.forwardURL}\r\n//                     forwardingHandler={this.forwardingHandler}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//           </div>\r\n//           <div className={classes.BulkForwardCont}>\r\n//             <div className={classes.Right}>\r\n//               <button onClick={this.clearAllDownloadFile}>Clear All</button>\r\n//               <button onClick={this.downloadForwards}>\r\n//                 Download domain and Forwards\r\n//               </button>\r\n//             </div>\r\n//             {this.state.listOfFoundDomains.length > 0 ||\r\n//             this.state.listOfSelectedDomains.length > 0 ? (\r\n//               <div className={classes.EnterForwardingDetails}>\r\n//                 {/* Text to show after generation */}\r\n\r\n//                 <p>Bulk Forward Controller</p>\r\n\r\n//                 <div className={classes.Right}>\r\n//                   <input\r\n//                     type='number'\r\n//                     name='numberToBulkForward'\r\n//                     value={this.state.numberToBulkForward}\r\n//                     onChange={this.changedHandler}\r\n//                     placeholder='Enter Number of Links to Bulk Purchase and Forward'\r\n//                   />\r\n//                 </div>\r\n//                 {/* {this.state.numberToBulkForward ? ( */}\r\n//                 <div className={classes.Right}>\r\n//                   <button\r\n//                     disabled={\r\n//                       !this.state.numberToBulkForward ||\r\n//                       this.state.listOfFoundDomains.length +\r\n//                         this.state.listOfSelectedDomains.length <\r\n//                         this.state.numberToBulkForward\r\n//                     }\r\n//                     onClick={this.domainsShuffleHandler}\r\n//                   >\r\n//                     keep {this.state.numberToBulkForward} domains in bulk Box\r\n//                   </button>\r\n//                 </div>\r\n//                 {/* ) : null} */}\r\n//               </div>\r\n//             ) : null}\r\n//             <div className={classes.Right}>\r\n//               {!this.state.isFetching &&\r\n//               this.state.listOfSelectedDomains.length > 0 ? (\r\n//                 <div className={classes.TwoWorkers}>\r\n//                   {!this.state.bulkForwardFinsh ? (\r\n//                     <div>\r\n//                       <div className={classes.Right}>\r\n//                         <input\r\n//                           type='text'\r\n//                           name='bulkForwardingURL'\r\n//                           value={this.state.bulkForwardingURL}\r\n//                           onChange={this.bulkForwardChangeURL}\r\n//                           placeholder='Please enter base URL'\r\n//                         />\r\n//                       </div>\r\n//                       <div className={classes.TrafficSelectionCont}>\r\n//                         <div className={classes.TrafficSelectionRadio}>\r\n//                           <div className={classes.SingleRadio}><span> </span></div>\r\n//                           <div className={classes.SingleRadio}><span></span></div>\r\n//                           <div className={classes.SingleRadio}><span></span></div>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ) : null}\r\n//                 </div>\r\n//               ) : null}\r\n\r\n//               {this.state.bulkForwardFinsh ? null : this.state\r\n//                   .listOfSelectedDomains.length > 0 &&\r\n//                 !this.state.isFetching ? (\r\n//                 <button\r\n//                   onClick={this.bulkPurchaseAndForward}\r\n//                   disabled={!this.state.bulkForwardingURL}\r\n//                 >\r\n//                   Purchase and forward all\r\n//                 </button>\r\n//               ) : null}\r\n//             </div>\r\n//             {this.state.listOfSelectedDomains.length > 0 &&\r\n//               this.state.listOfSelectedDomains.map(d => {\r\n//                 return (\r\n//                   <SingleDomain\r\n//                     l={d}\r\n//                     deleteSingle={() =>\r\n//                       this.deleteSingleHandler(\r\n//                         'listOfSelectedDomains',\r\n//                         d.domain\r\n//                       )\r\n//                     }\r\n//                     selected\r\n//                     purchaseHandler={this.purchaseHandler}\r\n//                     forwardingChangeHandler={this.forwardingChangeHandler}\r\n//                     forwardURL={d.forwardURL}\r\n//                     forwardingHandler={this.forwardingHandler}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//             {this.state.listOfSelectedDomains.length <= 0 &&\r\n//             this.state.listOfFoundDomains.length <= 0 ? (\r\n//               <div>\r\n//                 {/* Text to show at the start of the generation process */}\r\n//               </div>\r\n//             ) : null}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default NamecheapForward;\r\n\r\nimport React, { Component } from 'react';\r\nimport classes from './NamecheapForward.module.css';\r\nimport uuid from 'uuid';\r\nimport socketIOClient from 'socket.io-client';\r\nimport moment from 'moment';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Global from '../GLOBAL/GLOBAL';\r\nimport SingleDomain from '../../components/SingleDomain/SingleDomain';\r\nclass NamecheapForward extends Component {\r\n  state = {\r\n    domains: '',\r\n    socketClient: socketIOClient(Global.domainNameCheap),\r\n    domainsList: [{ name: 'example', id: 1676723 }],\r\n    endpoint: Global.domain,\r\n    tldInput: '',\r\n    tldList: [\r\n      { name: '.red', id: 1676723 },\r\n      { name: '.site', id: 456676 }\r\n    ],\r\n    prefix: '',\r\n    prefixList: [{ name: 'love', id: 1676723 }],\r\n    suffix: '',\r\n    suffixList: [\r\n      { name: 'learn', id: 1676723 },\r\n      { name: 'use', id: 456676 }\r\n    ],\r\n    minimumPrice: 0,\r\n    maximumPrice: 10,\r\n    numberToBulkForward: null,\r\n    isFetching: false,\r\n    error: [],\r\n    bulkForwardingURL: '',\r\n    Quantity: 5,\r\n    bulkForwardFinsh: false,\r\n    listOfFoundDomains: [\r\n      // {\r\n      //   domain: '02b32423gerg22.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isInSelected: false,\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // },\r\n      // {\r\n      //   domain: '02b423424332.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isInSelected: false,\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n      // {\r\n      //   domain: 'loveexampleuse.site',\r\n      //   isAvailable: false,\r\n      //   forwardURL: '',\r\n      //   isPurchased: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n    ],\r\n    listOfSelectedDomains: [\r\n      // {\r\n      //   domain: '02b.xyz',\r\n      //   isAvailable: 'true',\r\n      //   isPurchased: false,\r\n      //   forwardURL: 'http://google.com',\r\n      //   forwardSuccess: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   // forwardSuccess:\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // },\r\n      // {\r\n      //   domain: 'loveexampleuse.site',\r\n      //   isAvailable: false,\r\n      //   forwardURL: '',\r\n      //   isPurchased: false,\r\n      //   isPremiumName: 'false',\r\n      //   Duration: '1',\r\n      //   DurationType: 'YEAR',\r\n      //   Price: '1.28',\r\n      //   PricingType: 'MULTIPLE',\r\n      //   AdditionalCost: '0.18',\r\n      //   RegularPrice: '25.88',\r\n      //   RegularPriceType: 'MULTIPLE',\r\n      //   RegularAdditionalCost: '0.18',\r\n      //   RegularAdditionalCostType: 'MULTIPLE',\r\n      //   YourPrice: '1.28',\r\n      //   YourPriceType: 'MULTIPLE',\r\n      //   YourAdditonalCost: '0.18',\r\n      //   YourAdditonalCostType: 'MULTIPLE',\r\n      //   PromotionPrice: '0.0',\r\n      //   Currency: 'USD'\r\n      // }\r\n    ]\r\n  };\r\n  componentDidMount() {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.connect();\r\n\r\n    this.state.socketClient.on('bulkSendSuccess', _ => {\r\n      this.setState({ bulkForwardFinsh: true });\r\n    });\r\n    this.state.socketClient.on('errorPurchase', ({ msg, domain }) => {\r\n      console.log(msg, domain);\r\n      this.setState(p => {\r\n        return {\r\n          error: p.error.concat({ msg, domain })\r\n        };\r\n      });\r\n    });\r\n\r\n    this.state.socketClient.on('fetchEnd', _ => {\r\n      this.setState({ isFetching: false });\r\n    });\r\n    this.state.socketClient.on('downloadingNow', d => {\r\n      // this.setState({ isFetching: false });\r\n      var blob = new Blob([d], {\r\n        type: 'text/plain'\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      const date = new Date();\r\n      a.setAttribute('hidden', url);\r\n      a.setAttribute('href', url);\r\n      a.setAttribute(\r\n        'download',\r\n        `${moment(`${new Date().toISOString()}`).format('DD-MM-YYYY')}_${\r\n          this.state.listOfSelectedDomains.length\r\n        }_${this.state.bulkForwardingURL}.csv`\r\n      );\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n\r\n    this.state.socketClient.on('pushDomain', data => {\r\n      let listOfDomains = [...this.state.listOfFoundDomains];\r\n      console.log(listOfDomains);\r\n      let newList = listOfDomains.concat({\r\n        ...data,\r\n        forwardURL: '',\r\n        forwardSuccess: false\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n    this.state.socketClient.on('purchaseSuccessBulk', domain => {\r\n      let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n      let newList = listOfSelectedDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            isPurchased: true\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfSelectedDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('purchaseSuccess', domain => {\r\n      let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n      let newList = listOfFoundDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            isPurchased: true\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('forwardSuccessBulk', domain => {\r\n      let listOfSelectedDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n      let newList = listOfSelectedDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            forwardSuccess: true,\r\n            forwardURL: this.state.bulkForwardingURL\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfSelectedDomains: newList });\r\n    });\r\n\r\n    this.state.socketClient.on('forwardSuccess', domain => {\r\n      let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n      let newList = listOfFoundDomainsToEdit.map(l => {\r\n        if (l.domain === domain) {\r\n          return {\r\n            ...l,\r\n            forwardSuccess: true,\r\n            forwardURL: this.state.bulkForwardingURL\r\n          };\r\n        } else {\r\n          return l;\r\n        }\r\n      });\r\n      this.setState({ listOfFoundDomains: newList });\r\n    });\r\n  }\r\n  deleteTldHandler = (id, controlList) => {\r\n    let tlds = [...this.state[controlList]];\r\n    let newtldList = tlds.filter(t => t.id !== id);\r\n    this.setState({ [controlList]: newtldList });\r\n  };\r\n  changedHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  keyDownHandler = (e, control, controlInput) => {\r\n    // console.log(e.key);\r\n    if (e.key === 'Tab' || e.key === ',') {\r\n      e.preventDefault();\r\n      let newTld = [\r\n        ...this.state[control],\r\n        { name: e.target.value, id: uuid() }\r\n      ];\r\n      this.setState({ [control]: newTld, [controlInput]: '' });\r\n      e.target.focus();\r\n    }\r\n  };\r\n  clear = controlList => {\r\n    this.setState({ [controlList]: [] });\r\n  };\r\n  purchaseHandler = domain => {\r\n    console.log(domain);\r\n    this.state.socketClient.emit('purchase', domain);\r\n  };\r\n  purchaseAndForwardBulk = () => {};\r\n  downloadForwards = () => {\r\n    this.state.socketClient.emit('download');\r\n  };\r\n  generate = () => {\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.connect();\r\n    this.setState({ isFetching: true, bulkForwardFinsh: false, error: [] });\r\n    this.setState({ listOfFoundDomains: [] });\r\n    let prefixList = this.state.prefixList;\r\n    let suffixList = this.state.suffixList;\r\n    let domainsList = this.state.domainsList;\r\n    let tldList = this.state.tldList;\r\n    const { minimumPrice, maximumPrice, Quantity } = this.state;\r\n\r\n    this.state.socketClient.emit('check', {\r\n      prefixList,\r\n      suffixList,\r\n      domainsList,\r\n      tldList,\r\n      minimumPrice,\r\n      maximumPrice,\r\n      Quantity\r\n    });\r\n  };\r\n\r\n  forwardingChangeHandler = (e, domain) => {\r\n    // this.setState({[e.target.name]: e.target.vlaue})\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n    listOfFoundDomainsToEdit.map(l => {\r\n      if (l.domain === domain) {\r\n        l.forwardURL = e.target.value;\r\n      }\r\n      return l;\r\n    });\r\n  };\r\n  forwardingHandler = domain => {\r\n    // console.log(e.target.value);\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfFoundDomains];\r\n    let domainObj = listOfFoundDomainsToEdit.find(l => l.domain === domain);\r\n    console.log(domainObj.forwardURL);\r\n    this.state.socketClient.emit('forward', {\r\n      domain,\r\n      forwardURL: domainObj.forwardURL\r\n    });\r\n  };\r\n\r\n  bulkForwardChangeURL = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  bulkPurchaseAndForward = () => {\r\n    let listOfFoundDomainsToEdit = [...this.state.listOfSelectedDomains];\r\n    let newList = listOfFoundDomainsToEdit.map(l => {\r\n      return {\r\n        ...l,\r\n        forwardURL: this.state.bulkForwardingURL\r\n      };\r\n    });\r\n    // this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n    this.state.socketClient.emit('bulkPurchaseAndForwarding', newList);\r\n  };\r\n  clearAllDownloadFile = () => {\r\n    this.setState({ listOfSelectedDomains: [], bulkForwardFinsh: false });\r\n    this.state.socketClient.emit('clear', true);\r\n  };\r\n\r\n  domainsShuffleHandler = () => {\r\n    let numberToTransfer = this.state.numberToBulkForward;\r\n    // let totalNumberOfGeneratedDomains = this.state.listOfFoundDomains.length;\r\n    console.log(\r\n      this.state.listOfFoundDomains,\r\n      this.state.listOfSelectedDomains\r\n    );\r\n    if (this.state.listOfSelectedDomains === numberToTransfer) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.listOfSelectedDomains.length < numberToTransfer) {\r\n      let newSelectedArray = [\r\n        ...this.state.listOfSelectedDomains,\r\n        ...this.state.listOfFoundDomains.slice(\r\n          0,\r\n          numberToTransfer - this.state.listOfSelectedDomains.length\r\n        )\r\n      ];\r\n      let remainingArray = this.state.listOfFoundDomains.slice(\r\n        numberToTransfer - this.state.listOfSelectedDomains.length\r\n      );\r\n      console.log(newSelectedArray, remainingArray);\r\n      this.setState({\r\n        listOfFoundDomains: remainingArray,\r\n        listOfSelectedDomains: newSelectedArray\r\n      });\r\n    } else if (this.state.listOfSelectedDomains.length > numberToTransfer) {\r\n      let newSelectedArray = this.state.listOfSelectedDomains.slice(\r\n        this.state.listOfSelectedDomains.length - numberToTransfer\r\n      );\r\n      let remainingArray = [\r\n        ...this.state.listOfFoundDomains,\r\n        ...this.state.listOfSelectedDomains.slice(\r\n          0,\r\n          this.state.listOfSelectedDomains.length - numberToTransfer\r\n        )\r\n      ];\r\n      console.log(newSelectedArray, remainingArray);\r\n      this.setState({\r\n        listOfFoundDomains: remainingArray,\r\n        listOfSelectedDomains: newSelectedArray\r\n      });\r\n    }\r\n  };\r\n  deleteSingleHandler = (control, domainToDelete) => {\r\n    let controlArray = [...this.state[control]];\r\n    let newControl = controlArray.filter(o => {\r\n      return o.domain !== domainToDelete;\r\n    });\r\n    this.setState({ [control]: newControl });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.BeastModeCont}>\r\n          <div className={classes.DomainsListCont}>\r\n            {this.state.domainsList.length > 0 &&\r\n              this.state.domainsList.map(d => (\r\n                <div key={d.id} className={classes.tld}>\r\n                  <span>{d.name}</span>\r\n                  <b onClick={() => this.deleteTldHandler(d.id, 'domainsList')}>\r\n                    x\r\n                  </b>\r\n                </div>\r\n              ))}\r\n            {this.state.domainsList.length > 0 ? (\r\n              <b\r\n                className={classes.clear}\r\n                onClick={() => this.clear('domainsList')}\r\n              >\r\n                Clear all ({this.state.domainsList.length})\r\n              </b>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.domainInputCont}>\r\n            <input\r\n              type='text'\r\n              name='domains'\r\n              value={this.state.domains}\r\n              onKeyDown={e => this.keyDownHandler(e, 'domainsList', 'domains')}\r\n              placeholder='Enter between 3 to 5 domains or keywords to begin Jared'\r\n              onChange={this.changedHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.PriceTLD}>\r\n            <div className={classes.PriceControl}>\r\n              <p>Price range</p>\r\n              <div>\r\n                <span>$</span>{' '}\r\n                <input\r\n                  value={this.state.minimumPrice}\r\n                  type='text'\r\n                  name='minimumPrice'\r\n                  onChange={this.changedHandler}\r\n                />\r\n              </div>\r\n              <p>to</p>\r\n              <div>\r\n                <span>$</span>{' '}\r\n                <input\r\n                  value={this.state.maximumPrice}\r\n                  type='text'\r\n                  name='maximumPrice'\r\n                  onChange={this.changedHandler}\r\n                />\r\n              </div>\r\n              <div className={classes.PrefixCont}>\r\n                <p className={classes.Header}>Prefixes</p>\r\n                <div className={classes.PrefixListCont}>\r\n                  {this.state.prefixList.length > 0 &&\r\n                    this.state.prefixList.map(d => (\r\n                      <div key={d.id} className={classes.tld}>\r\n                        <span>{d.name}</span>\r\n                        <b\r\n                          onClick={() =>\r\n                            this.deleteTldHandler(d.id, 'prefixList')\r\n                          }\r\n                        >\r\n                          x\r\n                        </b>\r\n                      </div>\r\n                    ))}\r\n                  {this.state.prefixList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('prefixList')}\r\n                    >\r\n                      Clear all ({this.state.prefixList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.PrefixInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='prefix'\r\n                    value={this.state.prefix}\r\n                    placeholder='Enter a tab separated list of prefixes'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'prefixList', 'prefix')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.PrefixCont}>\r\n                <p className={classes.Header}>Suffixes</p>\r\n                <div className={classes.SuffixListCont}>\r\n                  {this.state.suffixList.length > 0 &&\r\n                    this.state.suffixList.map(d => (\r\n                      <div key={d.id} className={classes.tld}>\r\n                        <span>{d.name}</span>\r\n                        <b\r\n                          onClick={() =>\r\n                            this.deleteTldHandler(d.id, 'suffixList')\r\n                          }\r\n                        >\r\n                          x\r\n                        </b>\r\n                      </div>\r\n                    ))}\r\n                  {this.state.suffixList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('suffixList')}\r\n                    >\r\n                      Clear all ({this.state.suffixList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.PrefixInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='suffix'\r\n                    value={this.state.suffix}\r\n                    placeholder='Enter a tab separated list of suffixes'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'suffixList', 'suffix')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.Right}>\r\n              <div className={classes.TLDs}>\r\n                <div className={classes.ListOfTlds}>\r\n                  {this.state.tldList.map(t => (\r\n                    // <React.Fragment>\r\n                    <div key={t.id} className={classes.tld}>\r\n                      <span>{t.name}</span>\r\n                      <b onClick={() => this.deleteTldHandler(t.id, 'tldList')}>\r\n                        x\r\n                      </b>\r\n                    </div>\r\n                    // </React.Fragment>\r\n                  ))}\r\n                  {this.state.tldList.length > 0 ? (\r\n                    <b\r\n                      className={classes.clear}\r\n                      onClick={() => this.clear('tldList')}\r\n                    >\r\n                      Clear all ({this.state.tldList.length})\r\n                    </b>\r\n                  ) : null}\r\n                </div>\r\n                <div className={classes.TLDInputCont}>\r\n                  <input\r\n                    type='text'\r\n                    name='tldInput'\r\n                    value={this.state.tldInput}\r\n                    placeholder='Enter a tab separated list of TLDs'\r\n                    onChange={this.changedHandler}\r\n                    onKeyDown={e =>\r\n                      this.keyDownHandler(e, 'tldList', 'tldInput')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.GenerateCont}>\r\n            <button\r\n              onClick={this.generate}\r\n              disabled={\r\n                this.state.domainsList.length <= 0 ||\r\n                this.state.tldList.length <= 0\r\n              }\r\n            >\r\n              Generate\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.isFetching ? (\r\n          <div className=''>\r\n            <Spinner />\r\n          </div>\r\n        ) : null}\r\n        {this.state.error.length > 0 ? (\r\n          <p style={{ textAlign: 'center', color: 'red' }}>\r\n            {this.state.error[0].msg}\r\n          </p>\r\n        ) : null}\r\n\r\n        {/* TWO DOMAINS SAGA */}\r\n        <div className={classes.TwoDomainsConts}>\r\n          <div className={classes.FirstDomainsCont}>\r\n            {this.state.listOfFoundDomains.length > 0 &&\r\n              this.state.listOfFoundDomains.map(d => {\r\n                return (\r\n                  <SingleDomain\r\n                    l={d}\r\n                    deleteSingle={() =>\r\n                      this.deleteSingleHandler('listOfFoundDomains', d.domain)\r\n                    }\r\n                    purchaseHandler={this.purchaseHandler}\r\n                    forwardingChangeHandler={this.forwardingChangeHandler}\r\n                    forwardURL={d.forwardURL}\r\n                    forwardingHandler={this.forwardingHandler}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className={classes.BulkForwardCont}>\r\n            <div className={classes.Right}>\r\n              <button onClick={this.clearAllDownloadFile}>Clear All</button>\r\n              <button onClick={this.downloadForwards}>\r\n                Download domain and Forwards\r\n              </button>\r\n            </div>\r\n            {this.state.listOfFoundDomains.length > 0 ||\r\n            this.state.listOfSelectedDomains.length > 0 ? (\r\n              <div className={classes.EnterForwardingDetails}>\r\n                {/* Text to show after generation */}\r\n\r\n                <p>Bulk Forward Controller</p>\r\n\r\n                <div className={classes.Right}>\r\n                  <input\r\n                    type='number'\r\n                    name='numberToBulkForward'\r\n                    value={this.state.numberToBulkForward}\r\n                    onChange={this.changedHandler}\r\n                    placeholder='Enter Number of Links to Bulk Purchase and Forward'\r\n                  />\r\n                </div>\r\n                {/* {this.state.numberToBulkForward ? ( */}\r\n                <div className={classes.Right}>\r\n                  <button\r\n                    disabled={\r\n                      !this.state.numberToBulkForward ||\r\n                      this.state.listOfFoundDomains.length +\r\n                        this.state.listOfSelectedDomains.length <\r\n                        this.state.numberToBulkForward\r\n                    }\r\n                    onClick={this.domainsShuffleHandler}\r\n                  >\r\n                    keep {this.state.numberToBulkForward} domains in bulk Box\r\n                  </button>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </div>\r\n            ) : null}\r\n            <div className={classes.Right}>\r\n              {!this.state.isFetching &&\r\n              this.state.listOfSelectedDomains.length > 0 ? (\r\n                <div className={classes.TwoWorkers}>\r\n                  {!this.state.bulkForwardFinsh ? (\r\n                    <div className={classes.Right}>\r\n                      <input\r\n                        type='text'\r\n                        name='bulkForwardingURL'\r\n                        value={this.state.bulkForwardingURL}\r\n                        onChange={this.bulkForwardChangeURL}\r\n                        placeholder='Please enter a forwarding URL for all the generated domains'\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.state.bulkForwardFinsh ? null : this.state\r\n                  .listOfSelectedDomains.length > 0 &&\r\n                !this.state.isFetching ? (\r\n                <button\r\n                  onClick={this.bulkPurchaseAndForward}\r\n                  disabled={!this.state.bulkForwardingURL}\r\n                >\r\n                  Purchase and forward all\r\n                </button>\r\n              ) : null}\r\n            </div>\r\n            {this.state.listOfSelectedDomains.length > 0 &&\r\n              this.state.listOfSelectedDomains.map(d => {\r\n                return (\r\n                  <SingleDomain\r\n                    l={d}\r\n                    deleteSingle={() =>\r\n                      this.deleteSingleHandler(\r\n                        'listOfSelectedDomains',\r\n                        d.domain\r\n                      )\r\n                    }\r\n                    selected\r\n                    purchaseHandler={this.purchaseHandler}\r\n                    forwardingChangeHandler={this.forwardingChangeHandler}\r\n                    forwardURL={d.forwardURL}\r\n                    forwardingHandler={this.forwardingHandler}\r\n                  />\r\n                );\r\n              })}\r\n            {this.state.listOfSelectedDomains.length <= 0 &&\r\n            this.state.listOfFoundDomains.length <= 0 ? (\r\n              <div>\r\n                {/* Text to show at the start of the generation process */}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NamecheapForward;\r\n","import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport classes from './blacklist.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nclass BLA extends Component {\r\n  state = {\r\n    fileName: '',\r\n    traffic: '23',\r\n    dataowner: '23',\r\n    loading: false\r\n  };\r\n  handleFileUpload = e => {\r\n    let myevent = e;\r\n    console.log(e.target.files[0].name);\r\n    let name = e.target.files[0].name;\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.blacklist}/api/upload`, data)\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          fileName: name,\r\n          loading: false,\r\n          error: ''\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        console.log(e.response);\r\n        this.setState({ loading: false, error: 'error in file upload' });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className={classes.BLA}>\r\n          <div className={classes.Options}>\r\n            <div className={classes.Traffic}>\r\n              <select name='' id=''>\r\n                <option value=''>--- Select Vertical ---</option>\r\n                <option value=''>ED</option>\r\n                <option value=''>CASH FOR HOMES</option>\r\n                {/* <option value=\"\"></option> */}\r\n              </select>\r\n            </div>\r\n            <div className={classes.DataOwner}>\r\n              <input type='text' placeholder='Enter Data Owner' />\r\n            </div>\r\n\r\n            <div className={classes.fileUpload}>\r\n              <label htmlFor='blist'>Upload file</label>:{' '}\r\n              <span>\r\n                {this.state.loading ? 'uploading' : this.state.fileName}\r\n              </span>\r\n              <input onChange={this.handleFileUpload} type='file' id='blist' />\r\n            </div>\r\n            <div className={classes.Scrub}>\r\n              <button>Scrub</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BLA;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport classes from './PineAccountThree.module.css';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n// import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as F } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Pine extends Component {\r\n  state = {\r\n    ani: '',\r\n    file: null,\r\n    isStarted: false,\r\n    speed: 10,\r\n    response: false,\r\n    endpoint: GLOBAL.domainpineaccountthree,\r\n    sentCount: 0,\r\n    loading: true,\r\n    isDoneSending: false,\r\n    isPaused: false,\r\n    totalCount: 0,\r\n    error: null,\r\n    deliveredCount: 0,\r\n    unDeliveredCount: 0,\r\n    enrouteCount: 0,\r\n    rejectedCount: 0,\r\n    downloadableCSV: '',\r\n    unknownCount: 0,\r\n    sentStatus: 0,\r\n    expiredCount: 0,\r\n    deletedCount: 0,\r\n    acceptedCount: 0,\r\n    withLeadingOne: true\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.disconnect();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      document.location.href = '/auth';\r\n    } else {\r\n      let config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      let url = `${GLOBAL.domainNameCheap}/api/auth/auto`;\r\n      axios\r\n        .get(url, config)\r\n        .then(response => {\r\n          // console.log(response.data);\r\n          //\r\n          const { email, _id, fullName } = response.data;\r\n          console.log(email, _id, fullName);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.location.href = '/auth';\r\n\r\n          console.log(error);\r\n          if (error.response.data.msg) {\r\n            // dispatch(authLogOut());\r\n            console.log(error.response.data.msg);\r\n            // dispatch(authFail(''));\r\n          }\r\n          // this.props.history.push('/auth');\r\n        });\r\n    }\r\n    axios\r\n      .get(`${GLOBAL.domainpineaccountthree}/api/checkForFileExistence`)\r\n      .then(({ data }) => {\r\n        if (data.exists) {\r\n          this.setState({ downloadableCSV: data.exists });\r\n        }\r\n        console.log(data);\r\n\r\n        const {\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          enrouteCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          messageCount\r\n        } = data;\r\n        if (data._doc.isPause) {\r\n          this.setState({\r\n            isPaused: true,\r\n            loading: false\r\n          });\r\n        }\r\n        if (data._doc.isSending) {\r\n          this.setState({\r\n            isStarted: true,\r\n            file: data._doc.displayName\r\n          });\r\n        }\r\n        if (data._doc.totalCount) {\r\n          this.setState({\r\n            totalCount: data._doc.totalCount\r\n          });\r\n        }\r\n        if (data._doc.phoneNumberSending) {\r\n          this.setState({\r\n            ani: data._doc.phoneNumberSending\r\n          });\r\n        }\r\n        if (data._doc.withLeadingOne) {\r\n          this.setState({\r\n            withLeadingOne: data._doc.withLeadingOne\r\n          });\r\n        } else {\r\n          this.setState({\r\n            withLeadingOne: false\r\n          });\r\n        }\r\n        this.setState({\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          rejectedCount,\r\n          enrouteCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount,\r\n          sentCount: messageCount,\r\n          loading: false\r\n        });\r\n        console.log('Once');\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.connect();\r\n        socket.on('DELIVRD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              deliveredCount: prevState.deliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('REJECTD', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              rejectedCount: prevState.rejectedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNDELIV', _ => {\r\n          this.setState(prevState => {\r\n            return {\r\n              unDeliveredCount: prevState.unDeliveredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('UNKNOWN', _ => {\r\n          console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              unknownCount: prevState.unknownCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('ENROUTE', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              enrouteCount: prevState.enrouteCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('SENT', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              sentStatus: prevState.sentStatus + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('EXPIRED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              expiredCount: prevState.expiredCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('DELETED', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              deletedCount: prevState.deletedCount + 1\r\n            };\r\n          });\r\n        });\r\n        socket.on('totalNumber', data => {\r\n          this.setState({ totalCount: data });\r\n        });\r\n        socket.on('ACCEPTD', _ => {\r\n          // console.log('unknown');\r\n          this.setState(prevState => {\r\n            return {\r\n              acceptedCount: prevState.acceptedCount + 1\r\n            };\r\n          });\r\n        });\r\n\r\n        socket.on('stop', data => {\r\n          if (data) {\r\n            this.setState({\r\n              isStarted: false,\r\n              isPaused: false\r\n            });\r\n          }\r\n        });\r\n        socket.on('operationComplete', data => {\r\n          console.log('it is complete now');\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: true,\r\n            file: null\r\n          });\r\n        });\r\n        socket.on('sent', data => {\r\n          this.setState({\r\n            sentCount: parseInt(this.state.sentCount) + 1\r\n          });\r\n        });\r\n        socket.on('pauseDone', data => {\r\n          this.setState({\r\n            isPaused: true,\r\n            downloadableCSV: data,\r\n            loading: false\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n        socket.on('processKilled', data => {\r\n          this.setState({\r\n            isStarted: false,\r\n            isPaused: false,\r\n            isDoneSending: false,\r\n            file: null\r\n          });\r\n          // socket.disconnect();\r\n        });\r\n      });\r\n  }\r\n\r\n  clearCountHandler = () => {\r\n    const {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    } = this.state;\r\n    this.setState({\r\n      sentCount: 0,\r\n      loading: false,\r\n      deliveredCount: 0,\r\n      unDeliveredCount: 0,\r\n      enrouteCount: 0,\r\n      rejectedCount: 0,\r\n      unknownCount: 0,\r\n      sentStatus: 0,\r\n      expiredCount: 0,\r\n      deletedCount: 0,\r\n      acceptedCount: 0\r\n    });\r\n    const data = {\r\n      sentCount,\r\n      deliveredCount,\r\n      unDeliveredCount,\r\n      enrouteCount,\r\n      rejectedCount,\r\n      unknownCount,\r\n      sentStatus,\r\n      expiredCount,\r\n      deletedCount,\r\n      acceptedCount\r\n    };\r\n    console.log(data);\r\n    // this.setState({ loading: true });\r\n    axios\r\n      .post(`${GLOBAL.domainpineaccountthree}/api/clearLogs`, data)\r\n      .then(res => {\r\n        this.setState({\r\n          sentCount: 0,\r\n          loading: false,\r\n          deliveredCount: 0,\r\n          unDeliveredCount: 0,\r\n          enrouteCount: 0,\r\n          rejectedCount: 0,\r\n          unknownCount: 0,\r\n          sentStatus: 0,\r\n          expiredCount: 0,\r\n          deletedCount: 0,\r\n          acceptedCount: 0\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({\r\n          sentCount,\r\n          // loading,\r\n          deliveredCount,\r\n          unDeliveredCount,\r\n          enrouteCount,\r\n          rejectedCount,\r\n          unknownCount,\r\n          sentStatus,\r\n          expiredCount,\r\n          deletedCount,\r\n          acceptedCount\r\n        });\r\n      });\r\n  };\r\n\r\n  onDownloadFile = async () => {\r\n    var blob = new Blob([this.state.downloadableCSV], {\r\n      type: 'text/plain'\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const date = new Date();\r\n    a.setAttribute('hidden', url);\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', `download${date.getMilliseconds()}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    // const socket = socketIOClient(this.state.endpoint);\r\n    // socket.emit('doNotContinueWithSend', true);\r\n  };\r\n  numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  onChangeHandler = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ file: event.target.files[0].name });\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    this.setState({ loading: true });\r\n    axios.post(`${GLOBAL.domainpineaccountthree}/api/upload`, data).then(() => {\r\n      this.setState({\r\n        loading: false,\r\n        isDoneSending: false\r\n      });\r\n    });\r\n    // socket.emit('upload', data )\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    if (this.state.ani && this.state.file) {\r\n      this.setState({ isStarted: true, error: null });\r\n      socket.emit('setSpeed', this.state.speed);\r\n      socket.emit('start', {\r\n        // filename: this.state.file.name,\r\n        withLeadingOne: this.state.withLeadingOne,\r\n        filename: this.state.file,\r\n        ani: this.state.ani\r\n      });\r\n    } else {\r\n      this.setState({ error: 'Enter SenderID and file before sending' });\r\n    }\r\n  };\r\n  resumeSending = () => {\r\n    this.setState({ isStarted: true, isPaused: false, error: null });\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.connect();\r\n\r\n    socket.emit('start', {\r\n      // filename: this.state.file.name,\r\n      withLeadingOne: this.state.withLeadingOne,\r\n      ani: this.state.ani\r\n    });\r\n  };\r\n  pauseHandler = () => {\r\n    console.log('pause me now!!!!!');\r\n    const socket = socketIOClient(this.state.endpoint);\r\n\r\n    if (!this.state.isStarted) {\r\n      return;\r\n    }\r\n    socket.emit('pause', 1);\r\n    console.log('is emited pause');\r\n    this.setState({ loading: true });\r\n  };\r\n  render() {\r\n    const loading = (\r\n      <div className={classes.loading}>\r\n        <p>Loading</p>\r\n      </div>\r\n    );\r\n    let content = (\r\n      <React.Fragment>\r\n        <div className={classes.Left}>\r\n          <div className={classes.CallerId}>\r\n            <input\r\n              type='text'\r\n              value={this.state.ani}\r\n              onChange={e => this.setState({ ani: e.target.value })}\r\n              placeholder='Enter Caller ID'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'red',\r\n              margin: 0\r\n            }}\r\n            className=''\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          <div className={classes.CallerId}>\r\n            {this.state.isStarted ? (\r\n              <div className={classes.SpinCont}>\r\n                <p>Sending with {this.state.file}...</p>\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <input\r\n                type='file'\r\n                // value={ani}\r\n                onChange={this.onChangeHandler}\r\n                placeholder='Caller ID'\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.withOrWithoutOne}>\r\n            <div\r\n              onClick={() => this.setState({ withLeadingOne: true })}\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers without a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={this.state.withLeadingOne ? 'lightgreen' : '#eee'}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() =>\r\n                this.setState({\r\n                  withLeadingOne: false\r\n                })\r\n              }\r\n              className={classes.OptionAddCont}\r\n            >\r\n              <p>Input phone numbers with a leading 1</p>{' '}\r\n              <F\r\n                icon={faCheck}\r\n                color={\r\n                  this.state.withLeadingOne === false ? 'lightgreen' : '#eee'\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.SpeedControl}>\r\n            <p>Select Prefered speed from the slider</p>\r\n            <input\r\n              type='range'\r\n              min='1'\r\n              max='100'\r\n              onChange={e => {\r\n                this.setState({ speed: e.target.value });\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('setSpeed', e.target.value);\r\n              }}\r\n              value={this.state.speed}\r\n              className={classes.slider}\r\n              id='myRange'\r\n            />\r\n            <p>speed: {this.state.speed} sends/s</p>\r\n          </div>\r\n        </div>\r\n        <div className=''>\r\n          {this.state.sentCount > 0 &&\r\n          this.state.deliveredCount >= 0 &&\r\n          this.state.rejectedCount >= 0 &&\r\n          this.state.unDeliveredCount >= 0 ? (\r\n            <div className={classes.percCont}>\r\n              <p className={classes.DPerc}>\r\n                D:{' '}\r\n                {(\r\n                  (this.state.deliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                R:{' '}\r\n                {(\r\n                  (this.state.rejectedCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n              <p className={classes.DPerc}>\r\n                U:{' '}\r\n                {(\r\n                  (this.state.unDeliveredCount / this.state.sentCount) *\r\n                  100\r\n                ).toFixed(2)}\r\n                %\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className={classes.sentCount}>\r\n            {this.state.isDoneSending ? <p>Sending Complete</p> : null}\r\n            <p>{this.numberWithCommas(this.state.sentCount)} sends</p>\r\n          </div>\r\n          {/* <div className={classes.sentCount}>\r\n            {this.state.isStarted ? (\r\n              <p>\r\n                {this.numberWithCommas(\r\n                  this.state.totalCount - this.state.sentCount\r\n                )}{' '}\r\n                sends left\r\n              </p>\r\n            ) : null}\r\n          </div> */}\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deliveredCount)} D{' '}\r\n              <F color='lightgreen' icon={faCheck} />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unDeliveredCount)} U{' '}\r\n              <F icon={faThumbsDown} color='red' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.rejectedCount)} R{' '}\r\n              <F icon={faThumbsDown} color='black' />\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.enrouteCount)} ENR{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.expiredCount)} EXP{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.deletedCount)} DEL{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.sentStatus)} SENT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.acceptedCount)} ACPT{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <div className={classes.sentCount}>\r\n            <p>\r\n              {this.numberWithCommas(this.state.unknownCount)} UKNWN{' '}\r\n              {/* <F icon={faThumbsDown} color='black' /> */}\r\n            </p>\r\n          </div>\r\n          <button onClick={this.clearCountHandler}>Clear Counter</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    if (this.state.isPaused) {\r\n      content = (\r\n        <div className={classes.PausedCont}>\r\n          <h2>\r\n            Your Send was Paused and numbers yet to be sent to have been saved.\r\n            Here are your options:\r\n          </h2>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.resumeSending}>\r\n              Resume Sending with same message format\r\n            </button>\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button className={classes.Submit} onClick={this.onDownloadFile}>\r\n              download File\r\n            </button>\r\n          </div>\r\n\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              End Session completely\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading ? loading : null}\r\n        <Layout\r\n          accountThree\r\n          goToAccountFunc={() => this.props.history.push('/pineapple')}\r\n          goToOtherAccountFunc={() =>\r\n            this.props.history.push('/freshdata-2way-2')\r\n          }\r\n        >\r\n          <div className={classes.FormBody}>\r\n            <div className={classes.Container}>{content}</div>\r\n\r\n            {this.state.isPaused || this.state.isStarted ? null : (\r\n              <button className={classes.Submit} onClick={this.submitHandler}>\r\n                Start sending\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={classes.OptionButton}>\r\n            <button\r\n              className={classes.Submit}\r\n              onClick={() => {\r\n                const socket = socketIOClient(this.state.endpoint);\r\n                socket.emit('kill', true);\r\n              }}\r\n            >\r\n              Force Session End\r\n            </button>\r\n          </div>\r\n          {this.state.isPaused && !this.state.isStarted ? null : !this.state\r\n              .isPaused && this.state.isStarted ? (\r\n            <div className=''>\r\n              <button className={classes.Submit} onClick={this.pauseHandler}>\r\n                PAUSE\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div className=''></div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pine;\r\n","import React from 'react';\r\nimport classes from './NameCheapLayout.module.css';\r\nimport Logo from '../Layout/color.png';\r\n// import {router} from \"react-router-dom\"\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <div className={classes.Layout}>\r\n      <div className={classes.Header}>\r\n        <p className={classes.logo}>\r\n          <img width='300px' src={Logo} />\r\n        </p>\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport NameCheapLayout from '../../components/NameCheapLayout/NameCheapLayout';\r\nimport classes from './Auth.module.css';\r\nimport axios from 'axios';\r\nimport GLOBAL from '../GLOBAL/GLOBAL';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { authSuccess } from '../../store/actions/auth';\r\nclass Auth extends Component {\r\n  state = {\r\n    email: 'hello@freshdatanow.com',\r\n    password: '',\r\n    errors: []\r\n  };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.type]: e.target.value });\r\n  };\r\n  submitHandler = () => {\r\n    this.setState({ errors: [] });\r\n    axios\r\n      .post(`${GLOBAL.domainNameCheap}/api/auth`, {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        localStorage.setItem('token', res.data.token);\r\n\r\n        // this.props.history.push('/');\r\n        this.props.signin(\r\n          res.data.token,\r\n          res.data._id,\r\n          res.data.fullName,\r\n          res.data.email,\r\n          true\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        this.setState({ errors: err.response.data.errors });\r\n      });\r\n  };\r\n  render() {\r\n    console.log(this.props.isAuthenticated);\r\n    return (\r\n      <NameCheapLayout>\r\n        {this.props.isAuthenticated ? (\r\n          <span style={{ color: 'white' }}>\r\n            }{(document.location.href = '/')}\r\n          </span>\r\n        ) : (\r\n          'd'.includes('d')\r\n        )}\r\n        <div className={classes.Auth}>\r\n          {this.state.errors &&\r\n            this.state.errors.map(e => {\r\n              return (\r\n                <p\r\n                  key={e.msg}\r\n                  style={{\r\n                    color: 'red',\r\n                    margin: '0px',\r\n                    padding: '0px',\r\n                    fontSize: '15px'\r\n                  }}\r\n                >\r\n                  {e.msg}\r\n                </p>\r\n              );\r\n            })}\r\n          <p>Sign In</p>\r\n          <div className={classes.FormCont}>\r\n            <input\r\n              type='email'\r\n              placeholder='Enter your email'\r\n              onChange={this.changeHandler}\r\n              value={this.state.email}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') this.submitHandler();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.FormCont}>\r\n            <input\r\n              type='password'\r\n              placeholder='Enter your password'\r\n              onChange={this.changeHandler}\r\n              value={this.state.password}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') this.submitHandler();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.FormCont}>\r\n            <button onClick={this.submitHandler}>Sign in</button>\r\n          </div>\r\n        </div>\r\n      </NameCheapLayout>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = d => {\r\n  return {\r\n    signin: (token, _id, fullName, email, authSuccessReload) =>\r\n      d(authSuccess(token, _id, fullName, email, authSuccessReload))\r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Auth));\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n// import App from '../../App';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\nexport const authCheckStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_CHECK_START\r\n  };\r\n};\r\n\r\nexport const tellUserToVerify = () => {\r\n  return {\r\n    type: actionTypes.TELL_USER_TO_VERIFY\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, _id, fullName, email, authSuccessReload) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    _id,\r\n    fullName,\r\n    email,\r\n    authSuccessReload: authSuccessReload ? authSuccessReload : false\r\n    // userId: userId\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\nexport const authError = errorArray => {\r\n  return {\r\n    type: actionTypes.AUTH_ERROR,\r\n    errorArray\r\n  };\r\n};\r\nexport const toggleAuthModalAction = () => {\r\n  return {\r\n    type: actionTypes.SHOW_AUTH_MODAL\r\n  };\r\n};\r\nexport const setAuthModalToTrue = () => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_MODAL_TO_TRUE\r\n  };\r\n};\r\n\r\nexport const authLogOut = reload => {\r\n  localStorage.removeItem('token');\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n    reload\r\n  };\r\n};\r\n\r\nexport const authExpires = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(authLogOut());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\n// export const auth = (email, password, fullName, isSignin, phoneNumber) => {\r\n//   return dispatch => {\r\n//     dispatch(authStart());\r\n\r\n//     let authData;\r\n//     let url;\r\n//     if (isSignin) {\r\n//       authData = {\r\n//         email: email,\r\n//         password: password\r\n//       };\r\n//       url = `${App.domain}api/userauth/`;\r\n//     } else {\r\n//       authData = {\r\n//         email,\r\n//         fullName,\r\n//         password,\r\n//         phoneNumber\r\n//       };\r\n//       url = `${App.domain}api/users/`;\r\n//     }\r\n\r\n//     axios\r\n//       .post(url, authData)\r\n//       .then(response => {\r\n//         const { errors } = response.data;\r\n//         if (errors) {\r\n//           // throw new Error()\r\n//           return dispatch(authFail(response.data.errors));\r\n//         }\r\n//         if (isSignin) {\r\n//           const { token, _id, fullName, email, avatar } = response.data;\r\n\r\n//           if (token) {\r\n//             localStorage.setItem('token', token);\r\n//             dispatch(authSuccess(token, _id, fullName, email, avatar, true));\r\n//           }\r\n//         } else {\r\n//           if (response.data.timeToVerifyUser) {\r\n//             dispatch(tellUserToVerify());\r\n//           }\r\n//         }\r\n//       })\r\n\r\n//       .catch(error => {\r\n//         if (error.response === undefined)\r\n//           return dispatch(authFail([{ msg: 'server Error' }]));\r\n//         // console.log(error.response.data);\r\n//         if (error.response.data.errors) {\r\n//           dispatch(authFail(error.response.data.errors));\r\n//         }\r\n//         if (error.response.data.notConfirmed) {\r\n//           dispatch(setRedirectToEmailVerificationPage());\r\n//         }\r\n//       });\r\n//   };\r\n// };\r\n\r\n// const setRedirectToEmailVerificationPage = () => {\r\n//   return {\r\n//     type: actionTypes.SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE\r\n//   };\r\n// };\r\n\r\n// export const setAuthRedirectPath = path => {\r\n//   return {\r\n//     type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n//     path: path\r\n//   };\r\n// };\r\n\r\n// export const authCheckBeforeOp = () => {\r\n//   return dispatch => {\r\n//     // dispatch(authCheckBeforeOpStart());\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       dispatch(authLogOut());\r\n//       dispatch(authFail(''));\r\n//     } else {\r\n//       let config = {\r\n//         headers: {\r\n//           'x-auth-token': token\r\n//         }\r\n//       };\r\n//       let url = `${App.domain}api/auth/auto`;\r\n//       axios\r\n//         .get(url, config)\r\n//         .then(response => {\r\n//           // console.log(response.data);\r\n//           if (response.data === null) {\r\n//             dispatch(authLogOut());\r\n//             dispatch(authFail(''));\r\n//             return;\r\n//           }\r\n//           const { email, _id, fullName, avatar } = response.data;\r\n//           setTimeout(() => {\r\n//             dispatch(authSuccess(token, _id, fullName, email, avatar));\r\n//           }, 500);\r\n//         })\r\n\r\n//         .catch(error => {\r\n//           // console.log(error.response.data);\r\n//           if (error.response.data.msg) {\r\n//             dispatch(authLogOut());\r\n//             dispatch(authFail(''));\r\n//           }\r\n//         });\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export const authCheckState = () => {\r\n//   return dispatch => {\r\n//     dispatch(authCheckStart());\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) {\r\n//       dispatch(authLogOut());\r\n//       dispatch(authFail(''));\r\n//     } else {\r\n//       let config = {\r\n//         headers: {\r\n//           'x-auth-token': token\r\n//         }\r\n//       };\r\n//       let url = `${App.domain}api/userauth/`;\r\n//       axios\r\n//         .get(url, config)\r\n//         .then(response => {\r\n//           const { email, _id, fullName, avatar } = response.data;\r\n//           // console.log(response.data);\r\n//           dispatch(authSuccess(token, _id, fullName, email, avatar));\r\n//         })\r\n\r\n//         .catch(error => {\r\n//           if (error.response && error.response.data.msg) {\r\n//             dispatch(authLogOut());\r\n\r\n//             dispatch(authFail(''));\r\n//           }\r\n//         });\r\n//     }\r\n//   };\r\n// };\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_CHECK_START = 'AUTH_CHECK_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\nexport const SHOW_AUTH_MODAL = 'SHOW_AUTH_MODAL';\r\nexport const SET_AUTH_MODAL_TO_TRUE = 'SET_AUTH_MODAL_TO_TRUE';\r\nexport const AUTH_CHECK_BEFORE_AUTH = 'AUTH_CHECK_BEFORE_AUTH';\r\nexport const TELL_USER_TO_VERIFY = 'TELL_USER_TO_VERIFY';\r\nexport const SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE =\r\n  'SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE';\r\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Home from './containers/Home/Home';\nimport HomeDev from './containers/HomeDev/HomeDev';\nimport PauseScreen from './containers/PauseScreen/PauseScreen';\nimport Pine from './containers/Pine/Pine';\nimport PineAccountTwo from './containers/PineAccountTwo/PineAccountTwo';\nimport Snapshots from './containers/Snapshots/Snapshots';\nimport NamecheapForward from './containers/NamecheapForward/NamecheapForward';\nimport BLA from './containers/BLA/BLA';\nimport PineAccountThree from './containers/PineAccountThree/PineAccountThree';\nimport Auth from './containers/Auth/Auth';\n// import Test from './containers/Test/Test';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route path='/' exact={true} component={Home} />\n        {/* <Route path='/test' exact={true} component={Test} /> */}\n        <Route path='/pause-screen' exact={true} component={PauseScreen} />\n        <Route path='/mobiniti' exact={true} component={HomeDev} />\n        <Route path='/pineapple' exact={true} component={Pine} />\n        <Route path='/namecheap' exact={true} component={NamecheapForward} />\n        <Route path='/blacklist' exact={true} component={BLA} />\n        <Route\n          path='/freshdata-2way-2'\n          exact={true}\n          component={PineAccountTwo}\n        />\n        <Route\n          path='/freshdata-2way-3'\n          exact={true}\n          component={PineAccountThree}\n        />\n        <Route path='/snapshots-2way-1' exact={true} component={Snapshots} />\n        <Route path='/auth' exact={true} component={Auth} />\n        {/* <Route\n            path='/snapshot-freshdata'\n            exact={true}\n            component={PineAccountTwo}\n          /> */}\n        {/* <Home /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst updateObject = (state, updatedProperties) => {\r\n  return {\r\n    ...state,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authCheckLoading: false,\r\n  authRedirectPath: null,\r\n  _id: null,\r\n  firstLoad: 0,\r\n  fullName: null,\r\n  email: null,\r\n  avatar: null,\r\n  authCheckBeforeOpLoading: false,\r\n  authSuccessReload: false,\r\n  tellUserToVerify: false,\r\n  showAuthModal: false,\r\n  redirectToEmailVerificationPage: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true,\r\n    token: null,\r\n    _id: null,\r\n    fullName: null,\r\n    email: null,\r\n    authCheckBeforeOpLoading: false,\r\n    avatar: null\r\n  });\r\n};\r\nconst authCheckStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    authCheckLoading: true,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst authCheckBeforeOpStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    authCheckBeforeOpLoading: true,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    authCheckLoading: false,\r\n    error: null,\r\n    firstLoad: 1,\r\n    token: action.idToken,\r\n    _id: action._id,\r\n    fullName: action.fullName,\r\n    email: action.email,\r\n    // avatar: action.avatar,\r\n    authCheckBeforeOpLoading: false,\r\n    authSuccessReload: action.authSuccessReload\r\n  });\r\n};\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    authCheckLoading: false,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1,\r\n    error: action.error\r\n  });\r\n};\r\n\r\nconst authLogOut = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    error: null,\r\n    firstLoad: 1,\r\n    authSuccessReload: action.reload,\r\n    authCheckBeforeOpLoading: false,\r\n\r\n    token: null,\r\n    _id: null,\r\n    fullName: null,\r\n    email: null,\r\n    avatar: null\r\n  });\r\n};\r\nconst toggleAuthModal = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    showAuthModal: !state.showAuthModal,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst setAuthModalToTrue = (state, action) => {\r\n  // location.reload();\r\n  return updateObject(state, {\r\n    showAuthModal: true,\r\n    authCheckBeforeOpLoading: false,\r\n    firstLoad: 1\r\n  });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return updateObject(state, {\r\n    authRedirectPath: action.path,\r\n    firstLoad: 1\r\n  });\r\n};\r\nconst tellUserToVerify = (state, action) => {\r\n  return updateObject(state, {\r\n    tellUserToVerify: true\r\n  });\r\n};\r\nconst setRedirectToEmailVerificationPage = (state, action) => {\r\n  return updateObject(state, {\r\n    redirectToEmailVerificationPage: true\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_CHECK_BEFORE_AUTH:\r\n      return authCheckBeforeOpStart(state, action);\r\n    case actionTypes.AUTH_CHECK_START:\r\n      return authCheckStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogOut(state, action);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action);\r\n    case actionTypes.SHOW_AUTH_MODAL:\r\n      return toggleAuthModal(state, action);\r\n    case actionTypes.SET_AUTH_MODAL_TO_TRUE:\r\n      return setAuthModalToTrue(state, action);\r\n    case actionTypes.TELL_USER_TO_VERIFY:\r\n      return tellUserToVerify(state, action);\r\n    case actionTypes.SET_REDIRECT_TO_EMAIL_VERIFICATION_PAGE:\r\n      return setRedirectToEmailVerificationPage(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport authReducer from './reducers/auth';\r\n// import NotificationsReducer from './reducers/notifications';\r\n// import cartReducer from './reducers/cart';\r\nimport thunk from 'redux-thunk';\r\nconst rootReducer = combineReducers({\r\n  // cart: cartReducer,\r\n  auth: authReducer\r\n  // notification: NotificationsReducer\r\n});\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === 'development'\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/createdStore';\n\nimport { Provider } from 'react-redux';\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentCount\":\"Snapshots_sentCount__3uFai\",\"Row\":\"Snapshots_Row__3j1oT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"PineAccountTwo_CallerId__275Eu\",\"OptionButton\":\"PineAccountTwo_OptionButton__2XoSY\",\"DPerc\":\"PineAccountTwo_DPerc__2Ef9-\",\"percCont\":\"PineAccountTwo_percCont__2rKs4\",\"PausedCont\":\"PineAccountTwo_PausedCont__21Xkt\",\"rotate90\":\"PineAccountTwo_rotate90__1i5xy\",\"FileCont\":\"PineAccountTwo_FileCont__1IEXS\",\"FormBody\":\"PineAccountTwo_FormBody__1yI1k\",\"filesCont\":\"PineAccountTwo_filesCont__ohN1-\",\"PhoneAndMessage\":\"PineAccountTwo_PhoneAndMessage__TqlJi\",\"loading\":\"PineAccountTwo_loading__3u7ri\",\"Container\":\"PineAccountTwo_Container__1w8tZ\",\"Submit\":\"PineAccountTwo_Submit__3artT\",\"OptionAddCont\":\"PineAccountTwo_OptionAddCont__1PIY7\",\"withOrWithoutOne\":\"PineAccountTwo_withOrWithoutOne__23ZMz\",\"SpeedControl\":\"PineAccountTwo_SpeedControl__IKSvk\",\"slider\":\"PineAccountTwo_slider__1b5cR\",\"sentCount\":\"PineAccountTwo_sentCount__2EsmB\",\"DropArea\":\"PineAccountTwo_DropArea__2hXRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleDomain\":\"SingleDomain_SingleDomain__O9Sou\",\"Name\":\"SingleDomain_Name__1HABg\",\"successForwarding\":\"SingleDomain_successForwarding__3PFI2\",\"forwardCont\":\"SingleDomain_forwardCont__3AgaV\",\"Right\":\"SingleDomain_Right__1qQVb\",\"atTop\":\"SingleDomain_atTop__p9TNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputCont\":\"PauseScreen_InputCont__2dzxO\",\"PauseScreen\":\"PauseScreen_PauseScreen__3N-G-\",\"Submit\":\"PauseScreen_Submit__1gjMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Options\":\"blacklist_Options__Xj3en\",\"fileUpload\":\"blacklist_fileUpload__30Xcb\",\"Scrub\":\"blacklist_Scrub__23sid\",\"Traffic\":\"blacklist_Traffic__h7pmu\",\"DataOwner\":\"blacklist_DataOwner__3Aekx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__QKusg\",\"snap\":\"Layout_snap__31qan\",\"Header\":\"Layout_Header__3eCmQ\",\"settings\":\"Layout_settings__5oZAM\",\"liveStatus\":\"Layout_liveStatus__1e-0S\",\"logo\":\"Layout_logo__AO5KA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Home_page__o6S6k\",\"UserDetails\":\"Home_UserDetails__34sCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__27P_s\",\"FormCont\":\"Auth_FormCont__2T8JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"Pine_CallerId__PX6eu\",\"DPerc\":\"Pine_DPerc__koKv6\",\"percCont\":\"Pine_percCont__3oh6T\",\"OptionButton\":\"Pine_OptionButton__3DmSI\",\"PausedCont\":\"Pine_PausedCont__2HzJl\",\"rotate90\":\"Pine_rotate90__1JG0_\",\"FileCont\":\"Pine_FileCont__1hlsR\",\"FormBody\":\"Pine_FormBody__3xljI\",\"filesCont\":\"Pine_filesCont__suZ_G\",\"PhoneAndMessage\":\"Pine_PhoneAndMessage__3uRRx\",\"loading\":\"Pine_loading__oVmha\",\"Container\":\"Pine_Container__2SaCC\",\"Submit\":\"Pine_Submit__Z0nZa\",\"OptionAddCont\":\"Pine_OptionAddCont__1T9zG\",\"withOrWithoutOne\":\"Pine_withOrWithoutOne__3wtZU\",\"SpeedControl\":\"Pine_SpeedControl__144qg\",\"slider\":\"Pine_slider__3EaVg\",\"sentCount\":\"Pine_sentCount__3FjZo\"};","module.exports = __webpack_public_path__ + \"static/media/color.003bc224.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"NameCheapLayout_Layout__O2AmT\",\"snap\":\"NameCheapLayout_snap__3zMkf\",\"Header\":\"NameCheapLayout_Header__1OUTj\",\"settings\":\"NameCheapLayout_settings__2KLSf\",\"liveStatus\":\"NameCheapLayout_liveStatus__3qGHr\",\"logo\":\"NameCheapLayout_logo__1bhjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BeastModeCont\":\"NamecheapForward_BeastModeCont__173hQ\",\"domainInputCont\":\"NamecheapForward_domainInputCont__17aPh\",\"PriceTLD\":\"NamecheapForward_PriceTLD__GftAk\",\"PriceControl\":\"NamecheapForward_PriceControl__nDEnD\",\"Right\":\"NamecheapForward_Right__blSF5\",\"TLDs\":\"NamecheapForward_TLDs__1enhH\",\"TLDInputCont\":\"NamecheapForward_TLDInputCont__1PZ2g\",\"PrefixInputCont\":\"NamecheapForward_PrefixInputCont__2tH28\",\"ListOfTlds\":\"NamecheapForward_ListOfTlds__rQ8go\",\"tld\":\"NamecheapForward_tld__2Ve5P\",\"DomainsListCont\":\"NamecheapForward_DomainsListCont__3Yb-0\",\"PrefixListCont\":\"NamecheapForward_PrefixListCont__3pWOs\",\"SuffixListCont\":\"NamecheapForward_SuffixListCont__16c_s\",\"clear\":\"NamecheapForward_clear__2vJzV\",\"Header\":\"NamecheapForward_Header__3dU0Y\",\"GenerateCont\":\"NamecheapForward_GenerateCont__QBrvJ\",\"TwoDomainsConts\":\"NamecheapForward_TwoDomainsConts__2AjLW\",\"FirstDomainsCont\":\"NamecheapForward_FirstDomainsCont__3TegW\",\"BulkForwardCont\":\"NamecheapForward_BulkForwardCont__1fUeF\",\"EnterForwardingDetails\":\"NamecheapForward_EnterForwardingDetails__2GqNa\",\"TrafficSelectionRadio\":\"NamecheapForward_TrafficSelectionRadio__i6mQm\",\"SingleRadio\":\"NamecheapForward_SingleRadio__3QQiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CallerId\":\"PineAccountThree_CallerId__3yEi5\",\"OptionButton\":\"PineAccountThree_OptionButton__22orr\",\"DPerc\":\"PineAccountThree_DPerc__3ZFw-\",\"percCont\":\"PineAccountThree_percCont__3z9_S\",\"PausedCont\":\"PineAccountThree_PausedCont__1vykH\",\"rotate90\":\"PineAccountThree_rotate90__4iI7m\",\"FileCont\":\"PineAccountThree_FileCont__3Tkqj\",\"FormBody\":\"PineAccountThree_FormBody__3Vtn4\",\"filesCont\":\"PineAccountThree_filesCont__2GDdk\",\"PhoneAndMessage\":\"PineAccountThree_PhoneAndMessage__23h0z\",\"loading\":\"PineAccountThree_loading__b_zhl\",\"Container\":\"PineAccountThree_Container__2o-qA\",\"Submit\":\"PineAccountThree_Submit__1XtkQ\",\"OptionAddCont\":\"PineAccountThree_OptionAddCont__3M8EJ\",\"withOrWithoutOne\":\"PineAccountThree_withOrWithoutOne__29IMf\",\"SpeedControl\":\"PineAccountThree_SpeedControl__36yfr\",\"slider\":\"PineAccountThree_slider__3J4Gf\",\"sentCount\":\"PineAccountThree_sentCount__1hGy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ring\":\"Spinner_lds-ring__2tl2D\"};"],"sourceRoot":""}